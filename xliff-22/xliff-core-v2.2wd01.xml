<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbook/docbookx.dtd">
<article lang="en-US" status="Specification Draft">
  <articleinfo>
    <title>XLIFF Core Version 2.2</title>

    <releaseinfo role="cvs">$Id: spectools-docbook-template-wd03.xml,v 1.4 2010/07/08 12:28:15 admin
      Exp$</releaseinfo>
    <releaseinfo role="track">Standards Track Work Product</releaseinfo>


    <productname class="trade">xliff-core-v2.2</productname>

    <productnumber>wd</productnumber>

    <releaseinfo role="OASIS-specification-this-authoritative">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/xliff-core-v2.2-wd.html</releaseinfo>
    <releaseinfo role="OASIS-specification-this">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/xliff-core-v2.2-wd.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-this">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/xliff-core-v2.2-wd.xml</releaseinfo>


    <releaseinfo role="OASIS-specification-previous-authoritative">https://docs.oasis-open.org/xliff/xliff-core/v2.2//xliff-core-v2.2-.html</releaseinfo>
    <releaseinfo role="OASIS-specification-previous">https://docs.oasis-open.org/xliff/xliff-core/v2.2//xliff-core-v2.2-.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-previous">https://docs.oasis-open.org/xliff/xliff-core/v2.2//xliff-core-v2.2-.xml</releaseinfo>

    <releaseinfo role="OASIS-specification-latest-authoritative">https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-core-v2.2.html</releaseinfo>
    <releaseinfo role="OASIS-specification-latest">https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-core-v2.2.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-latest">https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-core-v2.2.xml</releaseinfo>

    <releaseinfo role="committee"><ulink url="https://www.oasis-open.org/committees/xliff/">OASIS
        XML Localisation Interchange File Format (XLIFF) TC</ulink></releaseinfo>

    <authorgroup>
      <othercredit role="chair">
        <firstname>Bryan</firstname>
        <surname>Schnabel</surname>
        <affiliation>
          <orgname>Individual</orgname>
          <address format="linespecific"><email>bschnabel@bschnabel.com</email></address>
        </affiliation>
        <email>bschnabel@bschnabel.com</email>
      </othercredit>
      <othercredit role="chair">
        <firstname>Lucía</firstname>
        <surname>Morado Vázquez</surname>
        <affiliation>
          <orgname>University of Geneva</orgname>
          <address format="linespecific"><email>lucia.morado@unige.ch</email></address>
        </affiliation>
        <email>lucia.morado@unige.ch</email>
      </othercredit>

      <editor>
        <firstname>David</firstname>
        <surname>Filip</surname>
        <affiliation>
          <orgname><ulink url="http://www.adaptcentre.ie/">Trinity College Dublin
            (ADAPT)</ulink></orgname>
          <address format="linespecific"><email>david.filip@adaptcentre.ie</email></address>
        </affiliation>
        <email>david.filip@adaptcentre.ie</email>
      </editor>

      <editor>
        <firstname>Rodolfo M.</firstname>
        <surname>Raya</surname>
        <affiliation>
          <orgname>Individual</orgname>
          <address format="linespecific"><email>rmraya@maxprograms.com</email></address>
        </affiliation>
        <email>rmraya@maxprograms.com</email>
      </editor>

    </authorgroup>


    <pubdate>16 August 2021</pubdate>

    <copyright>
      <year>2021</year>
      <holder>OASIS Open, Inc. All Rights Reserved.</holder>
    </copyright>

    <legalnotice role="additional">
      <title>Additional artifacts</title>

      <para>This prose specification is one component of a Work Product that also includes:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para> Declarative validation artifacts accessible from <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/</ulink>
          </para>
          
        </listitem>
      </itemizedlist>
    </legalnotice>

    <legalnotice role="related">
      <title>Related Work</title>

      <para>This specification replaces or supersedes:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para><emphasis>XLIFF Version 2.1.</emphasis> Edited by Tom Comerford, David Filip,
            Rodolfo M. Raya, and Yves Savourel. 05 August 2014. OASIS Standard. <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html">http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html</ulink></para>
        </listitem>
      </itemizedlist>

      
    </legalnotice>

    <legalnotice role="namespaces">
      <title>Declared XML Namespaces</title>

      <itemizedlist spacing="compact">
        <listitem>
          <para>urn:oasis:names:tc:xliff:document:2.0</para>
        </listitem>

        <listitem>
          <para>urn:oasis:names:tc:xliff:matches:2.0</para>
        </listitem>

        <listitem>
          <para>urn:oasis:names:tc:xliff:glossary:2.0</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:fs:2.0</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:metadata:2.0</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:resourcedata:2.0</para>
        </listitem>
        

        <listitem>
          <para>urn:oasis:names:tc:xliff:sizerestriction:2.0</para>
        </listitem>

        <listitem>
          <para>urn:oasis:names:tc:xliff:validation:2.0</para>
        </listitem>

        <listitem>
          <para>http://www.w3.org/2005/11/its</para>
        </listitem>
        <listitem>
          <para>urn:oasis:names:tc:xliff:itsm:2.0</para>
        </listitem>

      </itemizedlist>
    </legalnotice>

    <abstract>
      <para>This document defines version 2.2 of the XML Localization Interchange File Format
        (XLIFF). The purpose of this vocabulary is to store localizable data and carry it from one
        step of the localization process to the other, while allowing interoperability between and
        among tools.</para>
    </abstract>

    <legalnotice role="status">
      <title>Status</title>

      

      <para>This document was last revised or approved by the OASIS XML Localisation Interchange
        File Format (XLIFF) TC on the above date. The level of approval is also listed above. Check
        the “Latest version” location noted above for possible later revisions of this
        document.</para>

      <para>Technical Committee members should send comments on this specification to the Technical
        Committee's email list. Others should send comments to the Technical Committee by using the
          "<ulink url="https://www.oasis-open.org/committees/comments/index.php?wg_abbrev=xliff">Send A Comment</ulink>" button on the Technical Committee's web page at <ulink url="https://www.oasis-open.org/committees/xliff/">https://www.oasis-open.org/committees/xliff/</ulink>.</para>

      <para>For information on whether any patents have been disclosed that may be essential to
        implementing this specification, and any offers of patent licensing terms, please refer to
        the Intellectual Property Rights section of the Technical Committee web page (<ulink url="https://www.oasis-open.org/committees/xliff/ipr.php">https://www.oasis-open.org/committees/xliff/ipr.php</ulink>).</para>
      <para>Note for any machine-readable content (aka Computer Language Definitions) declared
        Normative for this Work Product that is provided in separate plain text files, in the event
        of a discrepancy between any such plain text file and display content in the Work Product's
        prose narrative document(s), the content in the separate plain text file prevails.</para>

      
    </legalnotice>

    <legalnotice role="citation">
      <title>Citation format</title>

      <para>When referencing this specification the following citation format should be used:</para>


      <para><citation>XLIFF-2.2</citation></para>

      <para><emphasis>XLIFF Version 2.2</emphasis>. Edited by Rodolfo M. Raya and David Filip.
        16 August 2021. Specification Draft. <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/xliff-core-v2.2-wd.html">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/xliff-core-v2.2-wd.html</ulink>. Latest version: <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-core-v2.2.html">https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-core-v2.2.html</ulink>. </para>

      
    </legalnotice>


    <legalnotice role="notices">
      <title>Notices</title>

      <para>Copyright © OASIS Open 2021. All Rights Reserved.</para>

      <para>All capitalized terms in the following text have the meanings assigned to them in the
        OASIS Intellectual Property Rights Policy (the "OASIS IPR Policy"). The full <ulink url="https://www.oasis-open.org/policies-guidelines/ipr">Policy</ulink> may be found at
        the OASIS website.</para>

      <para>This document and translations of it may be copied and furnished to others, and
        derivative works that comment on or otherwise explain it or assist in its implementation may
        be prepared, copied, published, and distributed, in whole or in part, without restriction of
        any kind, provided that the above copyright notice and this section are included on all such
        copies and derivative works. However, this document itself may not be modified in any way,
        including by removing the copyright notice or references to OASIS, except as needed for the
        purpose of developing any document or deliverable produced by an OASIS Technical Committee
        (in which case the rules applicable to copyrights, as set forth in the OASIS IPR Policy,
        must be followed) or as required to translate it into languages other than English.</para>

      <para>The limited permissions granted above are perpetual and will not be revoked by OASIS or
        its successors or assigns.</para>

      <para>This document and the information contained herein is provided on an "AS IS" basis and
        OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY
        WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR
        ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.</para>

      <para>OASIS requests that any OASIS Party or any other party that believes it has patent
        claims that would necessarily be infringed by implementations of this OASIS Committee
        Specification or OASIS Standard, to notify OASIS TC Administrator and provide an indication
        of its willingness to grant patent licenses to such patent claims in a manner consistent
        with the IPR Mode of the OASIS Technical Committee that produced this specification.</para>

      <para>OASIS invites any party to contact the OASIS TC Administrator if it is aware of a claim
        of ownership of any patent claims that would necessarily be infringed by implementations of
        this specification by a patent holder that is not willing to provide a license to such
        patent claims in a manner consistent with the IPR Mode of the OASIS Technical Committee that
        produced this specification. OASIS may include such claims on its website, but disclaims any
        obligation to do so.</para>

      <para>OASIS takes no position regarding the validity or scope of any intellectual property or
        other rights that might be claimed to pertain to the implementation or use of the technology
        described in this document or the extent to which any license under such rights might or
        might not be available; neither does it represent that it has made any effort to identify
        any such rights. Information on OASIS' procedures with respect to rights in any document or
        deliverable produced by an OASIS Technical Committee can be found on the OASIS website.
        Copies of claims of rights made available for publication and any assurances of licenses to
        be made available, or the result of an attempt made to obtain a general license or
        permission for the use of such proprietary rights by implementers or users of this OASIS
        Committee Specification or OASIS Standard, can be obtained from the OASIS TC Administrator.
        OASIS makes no representation that any information or list of intellectual property rights
        will at any time be complete, or that any claims in such list are, in fact, Essential
        Claims.</para>

      <para>The name "OASIS" is a trademark of <ulink url="http://www.oasis-open.org">OASIS</ulink>,
        the owner and developer of this specification, and should be used only to refer to the
        organization and its official outputs. OASIS welcomes reference to, and implementation and
        use of, specifications, while reserving the right to enforce its marks against misleading
        uses. Please see <ulink url="https://www.oasis-open.org/policies-guidelines/trademark">https://www.oasis-open.org/policies-guidelines/trademark</ulink> for above
        guidance.</para>
    </legalnotice>
  </articleinfo>

  <section>
    <title>Introduction</title>

    <para>XLIFF is the <emphasis>XML Localization Interchange File Format</emphasis> designed by a
      group of multilingual content publishers, software providers, localization service providers,
      localization tools providers, and researchers. It is intended to give any multilingual content
      owner a single interchange file format that can be understood by any localization provider,
      using any conformant localization tool. While the primary focus is on being a lossless
      interchange format, usage of XLIFF as a processing format is neither encouraged nor
      discouraged or prohibited.</para>

    <para><emphasis>All text is normative unless otherwise labeled.</emphasis> The following common
      methods are used for labeling portions of this specification as informative and hence
      non-normative: <simplelist type="vert">
        <member> Appendices and sections marked as "(Informative)" or "Non-Normative" in
          title,</member>
        <member> Notes (sections with the "Note" title),</member>
        <member> Warnings (sections with the "Warning" title),</member>
        <member> Examples (mainly example code listings, tree diagrams, but also any inline examples
          or illustrative exemplary lists in otherwise normative text),</member>
        <member> Schema and other validation artifacts listings (the corresponding artifacts are
          normative, not their listings).</member>
      </simplelist>
    </para>


    <section id="terminology">
      <title>Terminology</title>

      <section>
        <title>Key words</title>

        <para>The key words <glossterm>must</glossterm>, <glossterm>must not</glossterm>,
            <glossterm>required</glossterm>, <glossterm>shall</glossterm>, <glossterm>shall
            not</glossterm>, <glossterm>should</glossterm>, <glossterm>should not</glossterm>,
            <glossterm>recommended</glossterm>, <glossterm>may</glossterm>, and
            <glossterm>optional</glossterm> are to be interpreted as described in <xref linkend="rfc2119"/>.</para>
      </section>

      <section id="definitions">
        <title>Definitions</title>

        <variablelist>

          <varlistentry>
            <term>Agent</term>

            <listitem>
              <para>any application or tool that generates (creates), reads, edits, writes,
                processes, stores, renders or otherwise handles <firstterm>XLIFF
                  Documents</firstterm>.</para>
              <para><firstterm>Agent</firstterm> is the most general application conformance target
                that subsumes all other specialized user agents disregarding whether they are
                defined in this specification or not.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Enrich</term>
            <term>Enriching</term>
            <listitem>
              <para> the process of associating module and extension based metadata and resources
                with the <firstterm>Extracted</firstterm> XLIFF payload </para>
              <itemizedlist>
                <title>Processing Requirements</title>
                <listitem>
                  <para>
                    <firstterm>Enriching</firstterm>
                    <glossterm>may</glossterm> happen at the time of
                      <firstterm>Extraction</firstterm>. </para>
                </listitem>
              </itemizedlist>
              <note>
                <para><firstterm>Extractor</firstterm> knowledge of the native format is not assumed
                  while <firstterm>Enriching</firstterm>.</para>
              </note>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Enricher</term>
            <term>Enricher Agent</term>
            <listitem>
              <para>any <firstterm>Agent</firstterm> that performs the
                  <firstterm>Enriching</firstterm> process </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Extract</term>
            <term>Extraction</term>
            <listitem>
              <para>the process of encoding localizable content from a native content or User
                Interface format as XLIFF payload, so that localizable parts of the content in the
                source language are available for <firstterm>Translation</firstterm> into the target
                language along with the necessary context information </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Extractor</term>
            <term>Extractor Agent</term>

            <listitem>
              <para>any <firstterm>Agent</firstterm> that performs the
                  <firstterm>Extraction</firstterm> process </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Merge</term>
            <term>Merging</term>

            <listitem>
              <para>the process of importing XLIFF payload back to the originating native format,
                based on the <emphasis>full knowledge</emphasis> of the
                  <firstterm>Extraction</firstterm> mechanism, so that the localized content or User
                Interface strings replace the source language in the native format </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Merger</term>
            <term>Merger Agent</term>

            <listitem>
              <para>an <firstterm>Agent</firstterm> that performs the <firstterm>Merge</firstterm>
                process </para>

              <warning>
                <para> Unless specified otherwise, any <firstterm>Merger</firstterm> is deemed to
                  have the same knowledge of the native format as the
                    <firstterm>Extractor</firstterm> throughout the specification. </para>
                <para><firstterm>Mergers</firstterm> independent of
                    <firstterm>Extractors</firstterm> can succeed, but it is out of scope of this
                  specification to specify interoperability for <firstterm>Merging</firstterm> back
                  without the full <firstterm>Extractor</firstterm> knowledge of the native format.
                </para>
              </warning>
            </listitem>

          </varlistentry>

          <varlistentry>
            <term>Modify</term>
            <term>Modification</term>
            <listitem>
              <para> the process of changing core and module XLIFF structural and inline elements
                that were previously created by other <firstterm>Writers</firstterm>
              </para>
              <itemizedlist>
                <title>Processing Requirements</title>
                <listitem>
                  <para> XLIFF elements <glossterm>may</glossterm> be
                      <firstterm>Modified</firstterm> and <firstterm>Enriched</firstterm> at the
                    same time. </para>
                </listitem>
              </itemizedlist>
              <note>
                <para><firstterm>Extractor</firstterm> or <firstterm>Enricher</firstterm> knowledge
                  of the native format is not assumed while <firstterm>Modifying</firstterm>.</para>
              </note>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Modifier</term>
            <term>Modifier Agent</term>

            <listitem>
              <para>an <firstterm>Agent</firstterm> that performs the
                  <firstterm>Modification</firstterm> process </para>


            </listitem>

          </varlistentry>


          

          <varlistentry>
            <term>Translation</term>
            <term>Translate</term>

            <listitem>
              <para>a rendering of the meaning of the source text, expressed in the target
                language</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Writer</term>
            <term>Writer Agent</term>

            <listitem>
              <para>an <firstterm>Agent</firstterm> that creates, generates, or otherwise writes an
                  <firstterm>XLIFF Document</firstterm> for whatever purpose, including but not
                limited to <firstterm>Extractor</firstterm>, <firstterm>Modifier</firstterm>, and
                  <firstterm>Enricher</firstterm>
                <firstterm>Agents</firstterm>. </para>

              <note>
                <para> Since XLIFF is intended as an exchange format rather than a processing
                  format, many applications will need to generate <firstterm>XLIFF
                    Documents</firstterm> from their internal processing formats, even in cases when
                  they are processing <firstterm>XLIFF Documents</firstterm> created by another
                    <firstterm>Extractor</firstterm>. </para>
              </note>
            </listitem>


          </varlistentry>
        </variablelist>
      </section>

      <section id="keyconcepts">
        <title>Key concepts</title>

        <variablelist>
          <varlistentry>
            <term>XLIFF Core</term>

            <listitem>
              <para>The core of XLIFF 2.2 consists of the minimum set of XML elements and
                attributes required to (a) prepare a document that contains text extracted from one
                or more files for localization, (b) allow it to be completed with the translation of
                the extracted text, and (c) allow the generation of
                  <firstterm>Translated</firstterm> versions of the original document.</para>

              <para>The XML namespace that corresponds to the core subset of XLIFF 2.2 is
                  <code>"urn:oasis:names:tc:xliff:document:2.0"</code>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>XLIFF-defined (elements and attributes)</term>
            <listitem>
              <para>The following is the list of allowed schema URI prefixes for
                  <firstterm>XLIFF-defined</firstterm> elements and attributes:</para>
              <simplelist type="vert">
                <member><code>urn:oasis:names:tc:xliff:</code></member>
                <member><code>http://www.w3.org/2005/11/its</code></member>
              </simplelist>

              <para>However, the following namespaces are NOT considered
                  <firstterm>XLIFF-defined</firstterm> for the purposes of the XLIFF 2.2
                specification:</para>
              <simplelist type="vert">
                <member><code>urn:oasis:names:tc:xliff:document:1.0</code></member>
                <member><code>urn:oasis:names:tc:xliff:document:1.1</code></member>
                <member><code>urn:oasis:names:tc:xliff:document:1.2</code></member>
                <member><code>urn:oasis:names:tc:xliff:changetracking:2.0</code></member>
              </simplelist>
              <para>Elements and attributes from other namespaces are not
                  <firstterm>XLIFF-defined</firstterm>.</para>
            </listitem>


          </varlistentry>

          <varlistentry>
            <term>XLIFF Document</term>

            <listitem>
              <para>Any XML document that declares the namespace
                  <code>"urn:oasis:names:tc:xliff:document:2.0"</code> as its main
                namespace, has <olink targetdoc="elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink> as the root element and complies with the XML
                Schemas and the declared Constraints that are part of this specification.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>XLIFF Module</term>

            <listitem>
              <para>A module is an <glossterm>optional</glossterm> set of XML elements and
                attributes that stores information about a process applied to an <firstterm>XLIFF
                  Document</firstterm> and the data incorporated into the document as result of that
                process.</para>

              <para>Each official module defined for XLIFF 2.2 has its grammar defined in an
                independent XML Schema with a separate namespace.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>

    <section>
      <title>Normative References</title>

      

      <para/>

      <bibliography>
        <title/>

        <bibliomixed id="bcp47"><abbrev>BCP 47</abbrev> M. Davis, <title>Tags for Identifying
            Languages</title>, <citetitle>
            <ulink url="http://tools.ietf.org/html/bcp47">http://tools.ietf.org/html/bcp47</ulink>
          </citetitle> IETF (Internet Engineering Task Force).</bibliomixed>

        <bibliomixed id="HTML5"><abbrev>HTML5</abbrev> Ian Hickos, Robin Berjon, Steve Faulkner,
          Travis Leithead, Erika Doyle Navara, Edward O'Connor, Silvia Pfeiffer <title>HTML5. A
            vocabulary and associated APIs for HTML and XHTML</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/html5/">http://www.w3.org/TR/html5/</ulink>
          </citetitle> W3C Recommendation 28 October 2014.</bibliomixed>

        <bibliomixed id="ITS20"><abbrev>ITS</abbrev> David Filip, Shaun McCance, Dave Lewis,
          Christian Lieske, Arle Lommel, Jirka Kosek, Felix Sasaki, Yves Savourel
            <title>Internationalization Tag Set (ITS) Version 2.0</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/its20/">http://www.w3.org/TR/its20/</ulink>
          </citetitle> W3C Recommendation 29 October 2013.</bibliomixed>


        <bibliomixed id="bib_datetime"><abbrev>NOTE-datetime</abbrev> M. Wolf, C. Wicksteed,
            <title>Date and Time Formats</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/NOTE-datetime">http://www.w3.org/TR/NOTE-datetime</ulink>
          </citetitle> W3C Note, 15th Setember 1997.</bibliomixed>

        <bibliomixed id="NVDL"><abbrev>NVDL</abbrev> International Standards Organization,
            <title>ISO/IEC 19757-4, Information Technology - Document Schema Definition Languages
            (DSDL) - Part 4: Namespace-based Validation Dispatching Language (NVDL)</title>, <citetitle>
            <ulink url="http://standards.iso.org/ittf/PubliclyAvailableStandards/c038615_ISO_IEC_19757-4_2006(E).zip">
              http://standards.iso.org/ittf/PubliclyAvailableStandards/c038615_ISO_IEC_19757-4_2006(E).zip</ulink>
          </citetitle> ISO, June 1, 2006.</bibliomixed>


        <bibliomixed id="rfc2119"><abbrev>RFC 2119</abbrev> S. Bradner, <title>Key words for use in
            RFCs to Indicate Requirement Levels</title>, <citetitle>
            <ulink url="https://www.ietf.org/rfc/rfc2119.txt">https://www.ietf.org/rfc/rfc2119.txt</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 2119, March 1997.</bibliomixed>

        <bibliomixed id="rfc3987"><abbrev>RFC 3987</abbrev> M. Duerst and M. Suignard,
            <title>Internationalized Resource Identifiers (IRIs)</title>, <citetitle>
            <ulink url="https://www.ietf.org/rfc/rfc3987.txt">https://www.ietf.org/rfc/rfc3987.txt</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 3987, January 2005.</bibliomixed>

        <bibliomixed id="rfc7303"><abbrev>RFC 7303</abbrev> H. Thompson and C. Lilley, <title>XML
            Media Types</title>, <citetitle>
            <ulink url="https://www.tools.ietf.org/html/rfc7303">
              https://www.tools.ietf.org/html/rfc7303</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 7303, July 2014.</bibliomixed>


        <bibliomixed id="Schematron"><abbrev>Schematron</abbrev> International Standards
          Organization, <title>ISO/IEC 19757-3, Information Technology - Document Schema Definition
            Languages (DSDL) - Part 3: Rule-Based Validation — Schematron (Second Edition)</title>, <citetitle>
            <ulink url="http://standards.iso.org/ittf/PubliclyAvailableStandards/c055982_ISO_IEC_19757-3_2016.zip">
              http://standards.iso.org/ittf/PubliclyAvailableStandards/c055982_ISO_IEC_19757-3_2016.zip</ulink>
          </citetitle> ISO, January 15, 2016.</bibliomixed>


        <bibliomixed id="uax9"><abbrev>UAX #9</abbrev> M. Davis, A. Lanin, A. Glass, <title>UNICODE
            BIDIRECTIONAL ALGORITHM</title>, <citetitle>
            <ulink url="http://www.unicode.org/reports/tr9/tr9-35.html">http://www.unicode.org/reports/tr9/tr9-35.html</ulink>
          </citetitle> Unicode Bidirectional Algorithm, May 18, 2016.</bibliomixed>

        <bibliomixed id="uax15"><abbrev>UAX #15</abbrev> M. Davis, K. Whistler, <title>UNICODE
            NORMALIZATION FORMS</title>, <citetitle>
            <ulink url="http://www.unicode.org/reports/tr15/tr15-44.html">http://www.unicode.org/reports/tr15/tr15-44.html</ulink>
          </citetitle> Unicode Normalization Forms, February 24, 2016.</bibliomixed>

        <bibliomixed id="Unicode"><abbrev>Unicode</abbrev> The Unicode Consortium, <title>The
            Unicode Standard</title>, <citetitle>
            <ulink url="http://www.unicode.org/versions/Unicode9.0.0/">http://www.unicode.org/versions/Unicode9.0.0/</ulink>
          </citetitle> Mountain View, CA: The Unicode Consortium, June 21, 2016.</bibliomixed>

        <bibliomixed id="bib_XML"><abbrev>XML</abbrev> W3C, <title>Extensible Markup Language (XML)
            1.0</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/xml/">http://www.w3.org/TR/xml/</ulink>
          </citetitle> (Fifth Edition) W3C Recommendation 26 November 2008.</bibliomixed>
        <bibliomixed id="xml_namespace"><abbrev>XML namespace</abbrev> W3C, <title>Schema document
            for namespace http://www.w3.org/XML/1998/namespace</title>
          <citetitle><ulink url="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</ulink></citetitle> [<edition><ulink url="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</ulink>]</edition>. at <edition><ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd</ulink></edition>
          in this distribution</bibliomixed>

        <bibliomixed id="XMLCatalogs"><abbrev>XML Catalogs</abbrev> Norman Walsh, <title>XML
            Catalogs</title>, <citetitle>
            <ulink url="https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html">https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html</ulink>
          </citetitle> OASIS Standard V1.1, 07 October 2005.</bibliomixed>


        <bibliomixed id="XMLSchema"><abbrev>XML Schema</abbrev> W3C, <title>XML Schema</title>,
            <citetitle> refers to the two part standard comprising <link linkend="XMLSchema1">[XML
              Schema Structures]</link> and <link linkend="XMLSchema2">[XML Schema Datatypes]</link>
          </citetitle> (Second Editions) W3C Recommendations 28 October 2004.</bibliomixed>

        <bibliomixed id="XMLSchema2"><abbrev>XML Schema Datatypes</abbrev> W3C, <title>XML Schema
            Part 2: Datatypes</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</ulink>
          </citetitle> (Second Edition) W3C Recommendation 28 October 2004.</bibliomixed>

        <bibliomixed id="XMLSchema1"><abbrev>XML Schema Structures</abbrev> W3C, <title>XML Schema
            Part 1: Structures</title>, <citetitle>
            <ulink url="https://www.w3.org/TR/xmlschema-1/">https://www.w3.org/TR/xmlschema-1/</ulink>
          </citetitle> (Second Edition) W3C Recommendation 28 October 2004.</bibliomixed>



      </bibliography>
    </section>

    <section>
      <title>Non-Normative References</title>

      

      <para/>

      <bibliography>
        <title/>


        <bibliomixed id="biblio_ldml"><abbrev>LDML</abbrev>
          <title>Unicode Locale Data Markup Language</title>
          <citetitle>
            <ulink url="http://unicode.org/reports/tr35/">http://unicode.org/reports/tr35/</ulink>
          </citetitle></bibliomixed>
        
        <bibliomixed id="biblio_srx"><abbrev>SRX</abbrev>
          <title>Segmentation Rules eXchange</title>
          <citetitle>
            <ulink url="http://www.unicode.org/uli/pas/srx/">http://www.unicode.org/uli/pas/srx/</ulink>
          </citetitle></bibliomixed>

        <bibliomixed id="uax29"><abbrev>UAX #29</abbrev> M. Davis, <title>UNICODE TEXT
            SEGMENTATION</title>, <citetitle>
            <ulink url="http://www.unicode.org/reports/tr29/">http://www.unicode.org/reports/tr29/</ulink>
          </citetitle> Unicode text Segmentation.</bibliomixed>

        <bibliomixed id="biblio_xmli18nbp"><abbrev>XML I18N BP</abbrev>
          <title>Best Practices for XML Internationalization</title>, 13 February 2008, <citetitle>
            <ulink url="http://www.w3.org/TR/xml-i18n-bp/">http://www.w3.org/TR/xml-i18n-bp/</ulink>
          </citetitle> W3C Working Group.</bibliomixed>

      </bibliography>
    </section>
  </section>
  
  <section id="Conformance">
    <title>Conformance</title>

    <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem id="DocumentConformance">
            <orderedlist continuation="restarts" inheritnum="ignore">
                <title> Document Conformance</title>
                <listitem>
                    <para>XLIFF is an XML vocabulary, therefore conformant <firstterm>XLIFF
                            Documents</firstterm>
                        <glossterm>must</glossterm> be well formed and valid <olink targetdoc="../xliff22.xml" targetptr="bib_XML">[XML]</olink>
                        documents.</para>
                </listitem>
                <listitem>

                    <para>Conformant <firstterm>XLIFF Documents</firstterm>
                        <glossterm>must</glossterm> be valid instances of the official Core XML
                        Schema (<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_core_2.0.xsd">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_core_2.0.xsd</ulink>) that is a part
                        of this multipart Work Product.</para>
                </listitem>
                <listitem>

                    <para> As not all aspects of the XLIFF specification can be expressed in terms
                        of XML Schemas, conformant <firstterm>XLIFF Documents</firstterm>
                        <glossterm>must</glossterm> also comply with all relevant elements and
                        attributes definitions, normative usage descriptions, and Constraints
                        specified in this specification document.</para>
                </listitem>
                <listitem>
                    <para><firstterm>XLIFF Documents</firstterm>
                        <glossterm>may</glossterm> contain custom extensions, as defined in the
                            <olink targetdoc="../extensions/extensions.xml" targetptr="extensions">Extension Mechanisms</olink> section. </para>
                </listitem>
            </orderedlist>
        </listitem>
        <listitem id="ApplicationConformance">
            <orderedlist continuation="restarts" inheritnum="ignore">
                <title> Application Conformance</title>
                <listitem>
                    <para>XLIFF <firstterm>Writers</firstterm>
                        <glossterm>must</glossterm> create conformant <firstterm>XLIFF
                            Documents</firstterm> to be considered XLIFF compliant.</para>
                </listitem>
                <listitem>
                    <para>
                        <firstterm>Agents</firstterm> processing conformant <firstterm>XLIFF
                            Documents</firstterm> that contain custom extensions are not
                            <glossterm>required</glossterm> to understand and process non-XLIFF
                        elements or attributes. However, conformant applications
                            <glossterm>should</glossterm> preserve existing custom extensions when
                        processing conformant <firstterm>XLIFF Documents</firstterm>, provided that
                        the elements that contain custom extensions are not removed according to
                        XLIFF Processing Requirements or the extension's own processing
                        requirements.</para>
                </listitem>
                <listitem>
                    <para>All <firstterm>Agents</firstterm>
                        <glossterm>must</glossterm> comply with Processing Requirements for
                        otherwise unspecified <firstterm>Agents</firstterm> or without a
                        specifically set target <firstterm>Agent</firstterm>.</para>
                </listitem>

                <listitem>
                    <para> Specialized <firstterm>Agents</firstterm> defined in this specification -
                        this is <firstterm>Extractor</firstterm>, <firstterm>Merger</firstterm>,
                            <firstterm>Writer</firstterm>, <firstterm>Modifier</firstterm>, and
                            <firstterm>Enricher</firstterm>
                        <firstterm>Agents</firstterm> - <glossterm>must</glossterm> comply with the
                        Processing Requirements targeting their specifically defined type of
                            <firstterm>Agent</firstterm> on top of Processing Requirements targeting
                        all <firstterm>Agents</firstterm> as per point c. above.</para>
                </listitem>
                <listitem>
                    <para>XLIFF is a format explicitly designed for exchanging data among various
                            <firstterm>Agents</firstterm>. Thus, a conformant XLIFF application
                            <glossterm>must</glossterm> be able to accept <firstterm>XLIFF
                            Documents</firstterm> it had written after those <firstterm>XLIFF
                            Documents</firstterm> were <firstterm>Modified</firstterm> or
                            <firstterm>Enriched</firstterm> by a different application, provided
                        that:</para>
                    <orderedlist continuation="restarts" inheritnum="ignore">
                        <listitem>
                            <para>The processed files are conformant <firstterm>XLIFF
                                    Documents</firstterm>,</para>
                        </listitem>
                        <listitem>
                            <para>in a state compliant with all relevant Processing
                                Requirements.</para>
                        </listitem>
                    </orderedlist>

                </listitem>


            </orderedlist>
        </listitem>
        <listitem>
            <orderedlist continuation="restarts" inheritnum="ignore">
                <title> Backwards Compatibility</title>
                <listitem>
                    <para>Conformant applications are <glossterm>required</glossterm> to support
                        XLIFF 2.1.</para>
                </listitem>
                <listitem>
                    <para>Conformant applications are NOT <glossterm>required</glossterm> to support
                        XLIFF 1.2 or previous Versions. </para>
                </listitem>
            </orderedlist>
        </listitem>
    </orderedlist>

    <note>
        <para><firstterm>XLIFF Documents</firstterm> conformant to this specification are not and
            cannot be conformant to XLIFF 1.2 or earlier versions. If an application needs to
            support for whatever business reason both XLIFF 2 and XLIFF 1.2 or earlier, these will
            need to be supported as separate functionalities. </para>
    </note>
</section>
  <section id="fragid">
  <title>Fragment Identification</title>
  <para>Because <firstterm>XLIFF Documents</firstterm> do not follow the usual behavior of XML documents when it comes to element identifiers, this specification
    defines how <firstterm>Agents</firstterm> <glossterm>must</glossterm> interpret the fragment identifiers in IRIs pointing to <firstterm>XLIFF Documents</firstterm>.</para>
  <note>
    <para>Note that some identifiers may change during the localization process. For example <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> elements may be re-grouped or not depending on how tools treat
     identical original data.</para>
  </note>
  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>A fragment identifier <glossterm>must</glossterm> match the following format:</para>
      <programlisting format="linespecific">
&lt;expression>      ::= "#" ["/"] &lt;selector>
                      {&lt;selectorSeparator> &lt;selector>}
&lt;selector>        ::= [&lt;prefix> &lt;prefixSeparator>] &lt;id>
&lt;prefix>          ::= NMTOKEN
&lt;id>              ::= NMTOKEN
&lt;prefixSeparator> ::= "="
&lt;selectorSeparator>  ::= "/"</programlisting>
    </listitem>
    <listitem>
      <para>There <glossterm>must not</glossterm> be two identical prefixes in the expression.</para>
    </listitem>
    <listitem>
      <para>When used, the following selectors <glossterm>must</glossterm> be declared in this order: file selector, group selector and unit selector.</para>
    </listitem>
    <listitem>
      <para>The selectors for modules or extensions, <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink>, <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> or source inline elements, target inline elements and
        <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> have the following constraints:</para>
      <itemizedlist>
        <listitem><para>Only one of them <glossterm>may</glossterm> be used in the expression.</para></listitem>
        <listitem><para>The one used <glossterm>must</glossterm> be the last selector of the expression.</para></listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <warning><para>Please note that due to the above Constraints, referencing fragments using third party
      namespaces within <firstterm>Modules</firstterm> or extensions (including but not limited to
        <firstterm>XLIFF Core</firstterm> or the Metadata Module) is not possible. This is to
      restrict the complexity of the fragment identification mechanism, as it would otherwise have
      potentially unlimited depth.</para></warning>
  <section>
    <title>Selectors for Core Elements</title>
    <itemizedlist>
      <listitem><para>The prefix <code>f</code> indicates a <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> id and the value of that id is unique among all <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> <code>id</code> attribute values within the enclosing <olink targetdoc="../elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink> element.</para></listitem>

      <listitem><para>The prefix <code>g</code> indicates a <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink> id and the value of that id is unique among all <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink> <code>id</code> attribute values within the enclosing  <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> element.</para></listitem>

      <listitem><para>The prefix <code>u</code> indicates a <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> id and the value of that id is unique among all <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> <code>id</code> attribute values within the enclosing  <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> element.</para></listitem>

      <listitem><para>The prefix <code>n</code> indicates a <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink> id and the value of that id is unique among all <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink> <code>id</code> attribute values within the immediate enclosing
        <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>,
        <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink>, or
        <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para></listitem>

      <listitem><para>The prefix <code>d</code> indicates a <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> id and the value of that id is unique among all <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> <code>id</code> attribute values within the enclosing
        <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para></listitem>

      <listitem><para>The prefix <code>t</code> indicates an id for an inline element in the <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> element and the value of that id is unique within the
        enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element (with the exception of the matching inline elements in the <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink>).</para></listitem>

      <listitem><para>No prefix indicates an id for a <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or an <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> or an inline element in the <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> element and the value of that id
        is unique within the enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element (with the exception of the matching inline elements in the <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink>).</para></listitem>
    </itemizedlist>
  </section>
  <section id="fragid-modandext">
    <title>Selectors for Modules and Extensions</title>
    <para>A selector for a module or an extension uses a registered prefix and the value of that id is unique within the immediate enclosing
      <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>,
      <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink> or <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>
    <itemizedlist>
      <title>Constraints</title>
      <listitem><para>The prefix of a module or an extension <glossterm>must</glossterm> be an NMTOKEN longer than 1
          character and <glossterm>must</glossterm> be defined in the module or extension
          specification.</para></listitem>
      <listitem><para>The prefix of a module or an extension <glossterm>must</glossterm> be registered with the
          XLIFF TC.</para></listitem>
      <listitem><para>A given module or extension namespace URI <glossterm>must</glossterm> be associated with a single prefix.</para></listitem>
      <listitem><para>A prefix <glossterm>may</glossterm> be associated with more than one namespace URI (to allow
          for example different versions of a given module or extension to use the same
          prefix).</para></listitem>
    </itemizedlist>
    <para>See also the <olink targetdoc="../extensions/extensions.xml" targetptr="ext-constraints">constraints related to how IDs need to be specified in
      extensions</olink> (which applies for modules as well).</para>
  </section>
  <section>
    <title>Relative References</title>
    <para>Fragment identifiers that do not start with a character <code>/</code> (U+002F) are relative to their location in the document,
      or to the document being processed.</para>
    <para>Any unit, group or file selector missing to resolve the relative reference is obtained from the immediate enclosing unit, group or file elements.</para>
  </section>
  <section id="fragid-example">
    <title>Examples</title>
    <para>Given the following XLIFF document:</para>
    <programlisting format="linespecific">
&lt;xliff xmlns="urn:oasis:names:tc:xliff:document:2.0" version="2.0"
    srcLang="en" trgLang="fr">
  &lt;file id="f1">
    &lt;notes>
      &lt;note id="n1">note for file.&lt;/note>
    &lt;/notes>
    &lt;unit id="u1">
      &lt;my:elem xmlns:my="myNamespaceURI" id="x1">data&lt;/my:elem>
      &lt;notes>
        &lt;note id="n1">note for unit&lt;/note>
      &lt;/notes>
      &lt;segment id="s1">
        &lt;source>&lt;pc id="1">Hello &lt;mrk id="m1" type="term">World&lt;/mrk>!&lt;/pc>
            &lt;/source>
        &lt;target>&lt;pc id="1">Bonjour le &lt;mrk id="m1" type="term">Monde&lt;/mrk>
            ! &lt;/pc>&lt;/target>
      &lt;/segment>
    &lt;/unit>
  &lt;/file>
&lt;/xliff>
</programlisting>
    <para>You can have the following fragment identifiers:</para>
    <itemizedlist>
      <listitem><para><code>#f=f1/u=u1/1</code> refers to the element <code>&lt;pc id="1"></code> of the source content of the element <code>&lt;unit id="u1"></code>.</para></listitem>
      <listitem><para><code>#f=f1/u=u1/t=1</code> refers to the element <code>&lt;pc id="1"></code> of the target content of the element <code>&lt;unit id="u1"></code>.</para></listitem>
      <listitem><para><code>#f=f1/n=n1</code> refers to the element <code>&lt;note id="n1"></code> of the element <code>&lt;file id="f1"></code>.</para></listitem>
      <listitem><para><code>#f=f1/u=u1/n=n1</code> refers to the element <code>&lt;note id="n1"></code> of the element <code>&lt;unit id="u1"></code>.</para></listitem>
      <listitem><para><code>#f=f1/u=u1/s1</code> refers to the element <code>&lt;segment id="s1"></code> of the element <code>&lt;unit id="u1"></code>.</para></listitem>
      <listitem><para>Assuming the extension defined by the namespace URI <code>myNamespaceURI</code> has registered the prefix <code>myprefix</code>, the expression
        <code>#f=f1/u=u1/myprefix=x1</code> refers to the element <code>&lt;my:element id="x1"></code> of the element <code>&lt;unit id="u1"></code>.</para></listitem>
    </itemizedlist>
  </section>

</section>
  
  <section id="core">
    <title>The Core Specification</title>

    <para>XLIFF is a bilingual document format designed for containing text that needs
        <firstterm>Translation</firstterm>, its corresponding translations and auxiliary data that
      makes the <firstterm>Translation</firstterm> process possible.</para>

    <para>At creation time, an <firstterm>XLIFF Document</firstterm>
      <glossterm>may</glossterm> contain only text in the source language. Translations expressed in
      the target language <glossterm>may</glossterm> be added at a later time.</para>

    <para>The root element of an <firstterm>XLIFF Document</firstterm> is <olink targetdoc="elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink>. It contains a collection of <olink targetdoc="elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>
      elements. Typically, each <olink targetdoc="elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> element contains a set of <olink targetdoc="elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>
      elements that contain the text to be translated in the <olink targetdoc="elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> child of one or more <olink targetdoc="elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> elements. Translations are stored in the <olink targetdoc="elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> child of each <olink targetdoc="elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> element.</para>

    <section>
      <title>General Processing Requirements</title>


      <itemizedlist>
        <title/>

        <listitem>
          <para>An <firstterm>Agent</firstterm> processing a valid <firstterm>XLIFF
              Document</firstterm> that contains <firstterm>XLIFF-defined</firstterm> elements and
            attributes that it cannot handle <glossterm>must</glossterm> preserve those elements and
            attributes.</para>
        </listitem>
        <listitem>
          <para>An <firstterm>Agent</firstterm> processing a valid <firstterm>XLIFF
              Document</firstterm> that contains custom elements and attributes that it cannot
            handle <glossterm>should</glossterm> preserve those elements and attributes.</para>
        </listitem>

      </itemizedlist>
    </section>

    <section>
    <title>Elements</title>
    <para>This section contains a description of all elements used in <firstterm>XLIFF Core</firstterm>.</para>
    <section>
  <title>Tree Structure</title>
  <para>Legend:</para>
  <simplelist type="vert">
    <member>1 = one</member>
    <member>+ = one or more</member>
    <member>? = zero or one</member>
    <member>* = zero or more</member>
  </simplelist>
  <programlisting format="linespecific">
<olink targetdoc="structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink>
|
+---<olink targetdoc="structural/file.xml" targetptr="file"><code>&lt;file></code></olink> +
  |
  +---<olink targetdoc="structural/skeleton.xml" targetptr="skeleton"><code>&lt;skeleton></code></olink> ?
  | |
  | +---&lt;other> *
  |
  +---&lt;other> *
  |
  +---<olink targetdoc="structural/notes.xml" targetptr="notes"><code>&lt;notes></code></olink> ?
  | |
  | +---<olink targetdoc="structural/note.xml" targetptr="note"><code>&lt;note></code></olink> +
  |
  +---At least one of (<olink targetdoc="structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> OR <olink targetdoc="structural/group.xml" targetptr="group"><code>&lt;group></code></olink>)
      | |
      | +---<olink targetdoc="structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>
      |   |
      |   +---&lt;other> *
      |   |
      |   +---<olink targetdoc="structural/notes.xml" targetptr="notes"><code>&lt;notes></code></olink> ?
      |   | |
      |   | +---<olink targetdoc="structural/note.xml" targetptr="note"><code>&lt;note></code></olink> +
      |   |
      |   +---<olink targetdoc="structural/originalData.xml" targetptr="originaldata"><code>&lt;originalData></code></olink> ?
      |   | |
      |   | +---<olink targetdoc="structural/data.xml" targetptr="data"><code>&lt;data></code></olink> +
      |   |
      |   +---At least one of (<olink targetdoc="structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> OR <olink targetdoc="structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>)
      |       | |
      |       | +---<olink targetdoc="structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink>
      |       |   |
      |       |   +---<olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink> 1
      |       |   |
      |       |   +---<olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink> ?
      |       |
      |       +---<olink targetdoc="structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>
      |           |
      |           +---<olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink> 1
      |           |
      |           +---<olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink> ?
      |
      +---<olink targetdoc="structural/group.xml" targetptr="group"><code>&lt;group></code></olink>
          |
          +---&lt;other> *
          |
          +---<olink targetdoc="structural/notes.xml" targetptr="notes"><code>&lt;notes></code></olink> ?
          | |
          | +---<olink targetdoc="structural/note.xml" targetptr="note"><code>&lt;note></code></olink> +
          |
          +---At least one of (<olink targetdoc="structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> OR <olink targetdoc="structural/group.xml" targetptr="group"><code>&lt;group></code></olink>)


  </programlisting>
</section>
    <section id="structural">
    <title>Structural Elements</title>
    <para>The structural elements used in <firstterm>XLIFF Core</firstterm> are: 
        <olink targetdoc="structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink>, 
        <olink targetdoc="structural/file.xml" targetptr="file"><code>&lt;file></code></olink>, 
        <olink targetdoc="structural/skeleton.xml" targetptr="skeleton"><code>&lt;skeleton></code></olink>,
        <olink targetdoc="structural/group.xml" targetptr="group"><code>&lt;group></code></olink>,
        <olink targetdoc="structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>, 
        <olink targetdoc="structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink>, 
        <olink targetdoc="structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>, 
        <olink targetdoc="structural/notes.xml" targetptr="notes"><code>&lt;notes></code></olink>, 
        <olink targetdoc="structural/note.xml" targetptr="note"><code>&lt;note></code></olink>, 
        <olink targetdoc="structural/originaldata.xml" targetptr="originaldata"><code>&lt;originalData></code></olink>, 
        <olink targetdoc="structural/data.xml" targetptr="data"><code>&lt;data></code></olink>, 
        <olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink> 
        and <olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink>.
    </para>

    <section id="xliff">
    <title>xliff</title>
    <para>Root element for XLIFF documents.</para>
    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- One or more <olink targetdoc="structural" targetptr="file"><code>&lt;file></code></olink> 
            elements</member>
    </simplelist>
    
    
    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <olink targetdoc="../../attributes/version.xml" targetptr="version"><code>version</code></olink>, <glossterm>required</glossterm></member>
        <member>- <olink targetdoc="../../attributes/srcLang.xml" targetptr="srcLang"><code>srcLang</code></olink>, <glossterm>required</glossterm></member>
        <member>- <olink targetdoc="../../attributes/trgLang.xml" targetptr="trgLang"><code>trgLang</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/xml_space.xml" targetptr="xml_space"><code>xml:space</code></olink>, <glossterm>optional</glossterm></member>
        <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>
    </simplelist>
    
    <itemizedlist>
        <title>Constraints</title>
        <listitem>
            <para>The <olink targetdoc="../../attributes/trgLang.xml" targetptr="trgLang"><code>trgLang</code></olink> attribute is <glossterm>required</glossterm>
                if and only if the <firstterm>XLIFF Document</firstterm> contains <olink targetdoc="target.xml" targetptr="target"><code>&lt;target></code></olink> elements that are children
                of <olink targetdoc="segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or <olink targetdoc="ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>. </para>
        </listitem>
        <listitem>
            <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly
                allowed by the wildcard <code>other</code>:</para>
            <simplelist type="vert">
                <member>- the <code><olink targetdoc="../../attributes/itsm/itsm_version.xml" targetptr="itsm_version">its:version</olink></code>attribute from the
                    namespace <code>http://www.w3.org/2005/11/its</code>,
                        <glossterm>optional</glossterm>.</member>
            </simplelist>
        </listitem>
    </itemizedlist>
</section>

    <section id="file">
    <title>file</title>
    <para>Container for localization material extracted from an entire single document, or another
        high level self contained logical node in a content structure that cannot be described in the terms of
        documents.</para>
        <note><para>Sub-document artifacts such as particular sheets, pages, chapters and similar are better
            mapped onto the <olink targetdoc="group.xml" targetptr="group"><code>&lt;group></code></olink> element. The
                <code>&lt;file></code> element is intended for the highest logical level. For
            instance a collection of papers would map to a single <firstterm>XLIFF
                Document</firstterm>, each paper will be represented with one <code>&lt;file></code>
            element, whereas chapters and subsections will map onto nested
            <olink targetdoc="group.xml" targetptr="group"><code>&lt;group></code></olink> elements.</para></note>



    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- Zero or one <olink targetdoc="skeleton.xml" targetptr="skeleton"><code>&lt;skeleton></code></olink> element
        followed by</member>
        <member>- elements from other namespaces, <glossterm>optional</glossterm></member>

        <member>- Zero or one
            <olink targetdoc="notes.xml" targetptr="notes"><code>&lt;notes></code></olink>
            element followed by</member>


        <member>- One or more <olink targetdoc="unit.xml" targetptr="unit"><code>&lt;unit></code></olink> or <olink targetdoc="group.xml" targetptr="group"><code>&lt;group></code></olink> elements in any order.</member>

    </simplelist>

    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>,
                <glossterm>required</glossterm></member>
        <member>- <olink targetdoc="../../attributes/canResegment.xml" targetptr="canResegment"><code>canResegment</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/original.xml" targetptr="original"><code>original</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/xml_space.xml" targetptr="xml_space"><code>xml:space</code></olink>, <glossterm>optional</glossterm></member>
        <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>
    </simplelist>

    <itemizedlist>
        <title>Constraints</title>
        <listitem><para>The following <firstterm>XLIFF Module</firstterm> elements are explicitly allowed by the wildcard <code>other</code>:</para>
            <simplelist type="vert">
                
            <member>- Zero or one <olink targetdoc="../metadata/metadata.xml" targetptr="metadata"><code>&lt;mda:metadata></code></olink> elements</member>
            <member>- Zero or one <olink targetdoc="../resourceData/resourceData.xml" targetptr="res_resourceData"><code>&lt;res:resourceData></code></olink>
                    element</member>
            <member>- Zero or one <olink targetdoc="../size_restriction/profiles.xml" targetptr="slr_profiles"><code>&lt;slr:profiles></code></olink>
                    elements</member>
            <member>- Zero or one <olink targetdoc="../size_restriction/data.xml" targetptr="slr_data"><code>&lt;slr:data></code></olink> elements</member>
            <member>- Zero or one <olink targetdoc="../validation/validation.xml" targetptr="validation"><code>&lt;val:validation></code></olink>
                    elements</member>
             <member>- Zero, one, or more <olink targetdoc="../itsm/itsm_provenanceRecords.xml" targetptr="itsm_provenanceRecords"><code>&lt;its:provenanceRecords></code></olink>
                    elements</member>   
            
            </simplelist>
        </listitem>
        <listitem>
            <para><firstterm>Module</firstterm> and Extension elements <glossterm>may</glossterm> be
                used in any order.</para>
        </listitem>
        <listitem>
            <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly
                allowed by the wildcard <code>other</code>:</para>
            <simplelist type="vert">
                <member>- attributes from the namespace
                    <code>urn:oasis:names:tc:xliff:fs:2.0</code>, <glossterm>optional</glossterm>,
                    provided that the Constraints specified in the <olink targetdoc="modules/fs/fs.xml" targetptr="fs-mod">Format Style Module</olink>
                    are met.</member>
                <member>- attributes from the namespace
                    <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>, <glossterm>optional</glossterm>,
                    provided that the Constraints specified in the <olink targetdoc="modules/size_restriction/specification.xml" targetptr="size_restriction_module">Size and Length Restriction Module</olink>
                    are met.</member>
                <member>- attributes from the namespace
                        <code>http://www.w3.org/2005/11/its</code>,
                        <glossterm>optional</glossterm>, provided that the Constraints specified in
                    the <olink targetdoc="modules/itsm/specification.xml" targetptr="ITS-module">ITS Module</olink> are met.</member>
                <member>- attributes from the namespace
                        <code>urn:oasis:names:tc:xliff:itsm:2.1</code>,
                        <glossterm>optional</glossterm>, provided that the Constraints specified in
                    the <olink targetdoc="../../modules/itsm/specification.xml" targetptr="ITS-module">ITS Module</olink> are met.</member>
            </simplelist>
        </listitem>

    
    </itemizedlist>
</section>
    
    <section id="skeleton">
    <title>skeleton</title>
    <para>Container for non-translatable material pertaining to the parent <olink targetdoc="file.xml" targetptr="file"><code>&lt;file></code></olink> element.</para>
    <para><emphasis>Contains:</emphasis></para>
    <para>Either</para>
    <simplelist type="vert">
        <member>- Non-translatable text</member>
        <member>- elements from other namespaces</member>
    </simplelist>
    <para>or</para>
    <simplelist type="vert">
        <member>- is empty.</member>
    </simplelist>

    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <olink targetdoc="../../attributes/href.xml" targetptr="href"><code>href</code></olink>, <glossterm>optional</glossterm></member>
    </simplelist>

    <itemizedlist>
        <title>Constraints</title>
    <listitem><para> The attribute <olink targetdoc="../../attributes/href.xml" targetptr="href"><code>href</code></olink> is <glossterm>required</glossterm> if and only if the
                    <link linkend="skeleton"><code>&lt;skeleton></code></link> element is empty. </para></listitem>
    </itemizedlist>
    <itemizedlist>
        <title>Processing Requirements</title>
        <listitem><para><firstterm>Modifiers</firstterm> and <firstterm>Enrichers</firstterm> processing an
                    <firstterm>XLIFF Document</firstterm> that contains a <link linkend="skeleton"><code>&lt;skeleton></code></link> element <glossterm>must not</glossterm>
                change that element, its attributes, or its content. </para></listitem>
        <listitem><para><firstterm>Extractors</firstterm> creating an <firstterm>XLIFF Document</firstterm> with a <link linkend="skeleton"><code>&lt;skeleton></code></link> element
                    <glossterm>must</glossterm> leave the <link linkend="skeleton"><code>&lt;skeleton></code></link> element empty if and only if they specify
                the attribute <olink targetdoc="../../attributes/href.xml" targetptr="href"><code>href</code></olink>.</para></listitem>
    </itemizedlist>
</section>
    
    <section id="group">
    <title>group</title>
    <para>Provides a way to organize units into a structured hierarchy.</para>
    <para>Note that this is especially useful for mirroring a source format's hierarchical
        structure.</para>

    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- elements from other namespaces, <glossterm>optional</glossterm></member>
        <member>- Zero or one
            <olink targetdoc="notes.xml" targetptr="notes"><code>&lt;notes></code></olink>
            element followed by</member>
        <member>- Zero, one or more
            <olink targetdoc="unit.xml" targetptr="unit"><code>&lt;unit></code></olink>
            or <link linkend="group"><code>&lt;group></code></link>
            elements in any order.</member>





    </simplelist>

    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
      <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>required</glossterm></member>
        <member>- <olink targetdoc="../../attributes/name.xml" targetptr="name"><code>name</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/canResegment.xml" targetptr="canResegment"><code>canResegment</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink>, <glossterm>optional</glossterm></member>
		<member>- <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/xml_space.xml" targetptr="xml_space"><code>xml:space</code></olink>, <glossterm>optional</glossterm></member>

        <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>
    </simplelist>

    <itemizedlist>
        <title>Constraints</title>
        <listitem>
            <para>The following <firstterm>XLIFF Module</firstterm> elements are explicitly allowed
                by the wildcard <code>other</code>:</para>
            <simplelist type="vert">
                

                <member>- Zero or one <olink targetdoc="../metadata/metadata.xml" targetptr="metadata"><code>&lt;mda:metadata></code></olink>
                    elements</member>
                <member>- Zero or one <olink targetdoc="../size_restriction/data.xml" targetptr="slr_data"><code>&lt;slr:data></code></olink> elements</member>
                <member>- Zero or one <olink targetdoc="../validation/validation.xml" targetptr="validation"><code>&lt;val:validation></code></olink>
                    elements</member>
                <member>- Zero, one, or more <olink targetdoc="../itsm/itsm_provenanceRecords.xml" targetptr="itsm_provenanceRecords"><code>&lt;its:provenanceRecords></code></olink>
                    elements</member>
             
            </simplelist>
        </listitem>
        <listitem>
            <para><firstterm>Module</firstterm> and Extension elements <glossterm>may</glossterm> be
                used in any order.</para>
        </listitem>
        <listitem>
            <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly
                allowed by the wildcard <code>other</code>:</para>
            <simplelist type="vert">
                <member>- attributes from the namespace
                    <code>urn:oasis:names:tc:xliff:fs:2.0</code>, <glossterm>optional</glossterm>,
                    provided that the Constraints specified in the <olink targetdoc="modules/fs/fs.xml" targetptr="fs-mod">Format Style Module</olink>
                    are met.</member>
                <member>- attributes from the namespace
                        <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>,
                        <glossterm>optional</glossterm>, provided that the Constraints specified in
                    the <olink targetdoc="modules/size_restriction/specification.xml" targetptr="size_restriction_module">Size and Length Restriction
                        Module</olink> are met.</member>
                <member>- attributes from the namespace
                        <code>http://www.w3.org/2005/11/its</code>,
                        <glossterm>optional</glossterm>, provided that the Constraints specified in
                    the <olink targetdoc="modules/itsm/specification.xml" targetptr="ITS-module">ITS
                        Module</olink> are met.</member>
                <member>- attributes from the namespace
                        <code>urn:oasis:names:tc:xliff:itsm:2.1</code>,
                        <glossterm>optional</glossterm>, provided that the Constraints specified in
                    the <olink targetdoc="../../modules/itsm/specification.xml" targetptr="ITS-module">ITS Module</olink> are met.</member>
            </simplelist>
        </listitem>
    </itemizedlist>

</section>

    <section id="unit">
    <title>unit</title>
    <para>Static container for a dynamic structure of elements holding the extracted translatable source text, aligned with the <firstterm>Translated</firstterm> text.</para>

    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- elements from other namespaces, <glossterm>optional</glossterm></member>
        <member>- Zero or one
            <olink targetdoc="notes.xml" targetptr="notes"><code>&lt;notes></code></olink>
            elements followed by</member>
        <member>- Zero or one
            <olink targetdoc="originaldata.xml" targetptr="originaldata"><code>&lt;originalData></code></olink>
            element followed by</member>
        <member>- One or more
            <olink targetdoc="segment.xml" targetptr="segment"><code>&lt;segment></code></olink>
            or <olink targetdoc="ignorable" targetptr="ignorable"><code>&lt;ignorable></code></olink>
            elements in any order.</member>






    </simplelist>

    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>required</glossterm></member>
        <member>- <olink targetdoc="../../attributes/name.xml" targetptr="name"><code>name</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/canResegment.xml" targetptr="canResegment"><code>canResegment</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/xml_space.xml" targetptr="xml_space"><code>xml:space</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink>, <glossterm>optional</glossterm></member>



        <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>
    </simplelist>

    <itemizedlist>
        <title>Constraints</title>
        <listitem>
            <para>A <link linkend="unit"><code>&lt;unit></code></link> <glossterm>must</glossterm> contain at least one
                <olink targetdoc="segment.xml" targetptr="segment"><code>&lt;segment></code></olink>
                element.
            </para>
        </listitem>
        <listitem>
            <para>The following <firstterm>XLIFF Module</firstterm> elements are explicitly allowed
                by the wildcard <code>other</code>:</para>
            <simplelist type="vert">
                
                <member>- Zero or one
                    <olink targetdoc="matches.xml" targetptr="matches"><code>&lt;mtc:matches></code></olink>
                    elements</member>
                <member>- Zero or one
                    <olink targetdoc="../glosary/glossary.xml" targetptr="glossary"><code>&lt;gls:glossary></code></olink>
                    elements</member>
                <member>- Zero or one <olink targetdoc="../metadata/metadata.xml" targetptr="metadata"><code>&lt;mda:metadata></code></olink>
                    elements</member>
                <member>- Zero or one <olink targetdoc="../resourceData/resourceData.xml" targetptr="res_resourceData"><code>&lt;res:resourceData></code></olink>
                    elements </member>
                <member>- Zero or one <olink targetdoc="../size_restriction/data.xml" targetptr="slr_data"><code>&lt;slr:data></code></olink>
                    elements </member>
                <member>- Zero or one <olink targetdoc="../validation/validation.xml" targetptr="validation"><code>&lt;val:validation></code></olink>
                    elements </member>
                <member>- Zero, one, or more <olink targetdoc="../itsm/itsm_locQualityIssues.xml" targetptr="itsm_locQualityIssues"><code>&lt;its:locQualityIssues></code></olink>
                    elements</member>
                <member>- Zero, one, or more <olink targetdoc="../itsm/itsm_provenanceRecords.xml" targetptr="itsm_provenanceRecords"><code>&lt;its:provenanceRecords></code></olink>
                    elements</member>
                
            </simplelist>
        </listitem>
        <listitem>
            <para><firstterm>Module</firstterm> and Extension elements <glossterm>may</glossterm> be
                used in any order.</para>
        </listitem>
        <listitem>
            <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly
                allowed by the wildcard <code>other</code>:</para>
            <simplelist type="vert">
                <member>- attributes from the namespace
                    <code>urn:oasis:names:tc:xliff:fs:2.0</code>, <glossterm>optional</glossterm>,
                    provided that the Constraints specified in the <olink targetdoc="modules/fs/fs.xml" targetptr="fs-mod">Format Style Module</olink>
                    are met.</member>
                <member>- attributes from the namespace
                        <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>,
                        <glossterm>optional</glossterm>, provided that the Constraints specified in
                    the <olink targetdoc="modules/size_restriction/specification.xml" targetptr="size_restriction_module">Size and Length Restriction
                        Module</olink> are met.</member>
                <member>- attributes from the namespace
                        <code>http://www.w3.org/2005/11/its</code>,
                        <glossterm>optional</glossterm>, provided that the Constraints specified in
                    the <olink targetdoc="modules/itsm/specification.xml" targetptr="ITS-module">ITS
                        Module</olink> are met.</member>
                <member>- attributes from the namespace
                        <code>urn:oasis:names:tc:xliff:itsm:2.1</code>,
                        <glossterm>optional</glossterm>, provided that the Constraints specified in
                    the <olink targetdoc="../../modules/itsm/specification.xml" targetptr="ITS-module">ITS Module</olink> are met.</member>
            </simplelist>
        </listitem>
        
        
        </itemizedlist>
</section>
    
    <section id="segment">
  <title>segment</title>

  <para>This element is a container to hold in its aligned pair of children elements the minimum portion of
    translatable source text and its <firstterm>Translation</firstterm> in the given <olink targetdoc="../../segmentation/segmentation.xml" targetptr="segmentation">Segmentation</olink>.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>- One <olink targetdoc="source.xml" targetptr="source"><code>&lt;source></code></olink> element followed
    by</member>

    <member>- Zero or one <olink targetdoc="target.xml" targetptr="target"><code>&lt;target></code></olink> element</member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    
    
    <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>optional</glossterm></member>
    
    <member>- <olink targetdoc="../../attributes/canResegment.xml" targetptr="canResegment"><code>canResegment</code></olink>, <glossterm>optional</glossterm></member>

    
    
    <member>- <olink targetdoc="../../attributes/state.xml" targetptr="state"><code>state</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/subState.xml" targetptr="substate"><code>subState</code></olink>, <glossterm>optional</glossterm></member>

  </simplelist>

  
  
  
</section>
    
    <section id="ignorable">
    <title>ignorable</title>
    <para>Part of the extracted content that is not included in a segment (and therefore not
        translatable). For example tools can use <code>&lt;ignorable></code> to store the white
        space and/or codes that are between two segments.</para>
    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- One <olink targetdoc="source.xml" targetptr="source"><code>&lt;source></code></olink> element 
            followed by</member>
        <member>- Zero or one <olink targetdoc="target.xml" targetptr="target"><code>&lt;target></code></olink> element</member>
    </simplelist>
    
    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>optional</glossterm></member>
    </simplelist>
    
    
    
</section>
    
    <section id="notes">
    <title>notes</title>
    <para>Collection of comments.</para>
    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- One or more <olink targetdoc="note.xml" targetptr="note"><code>&lt;note></code></olink>
            elements</member>
    </simplelist>

</section>
    
    <section id="note">
    <title>note</title>
    <para>This is an XLIFF specific way how to present end user readable comments and annotations. A
        note can contain information about <olink targetdoc="source.xml" targetptr="source"><code>&lt;source></code></olink>, <olink targetdoc="target.xml" targetptr="target"><code>&lt;target></code></olink>, <olink targetdoc="unit.xml" targetptr="unit"><code>&lt;unit></code></olink>, <olink targetdoc="group.xml" targetptr="group"><code>&lt;group></code></olink>, or <olink targetdoc="file.xml" targetptr="file"><code>&lt;file></code></olink> elements.</para>
    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- Text</member>
    </simplelist>
    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/appliesto.xml" targetptr="appliesto"><code>appliesTo</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/category.xml" targetptr="category"><code>category</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/priority.xml" targetptr="priority"><code>priority</code></olink>, <glossterm>optional</glossterm></member>


        <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>
    </simplelist>

    <itemizedlist>
        <title>Constraints</title>
        <listitem>
            <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly
                allowed by the wildcard <code>other</code>:</para>
            <simplelist type="vert">
                <member>- <olink targetdoc="../../attributes/fs.xml" targetptr="fs"><code>fs:fs</code></olink>, <glossterm>optional</glossterm></member>
                <member>- <olink targetdoc="../../attributes/subFs.xml" targetptr="subFs"><code>fs:subFs</code></olink>, <glossterm>optional</glossterm></member>
            </simplelist>
        </listitem>
    </itemizedlist>
</section>
    
    <section id="originaldata">
  <title>originalData</title>

  <para>Unit-level collection of original data for the inline codes.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>- One or more <olink targetdoc="data.xml" targetptr="data"><code>&lt;data></code></olink> elements</member>
  </simplelist>


</section>
    
    <section id="data">
  <title>data</title>

  <para>Storage for the original data of an inline code.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>- Non-translatable text</member>

    <member>- Zero, one or more <olink targetdoc="../inline/cp.xml" targetptr="cp"><code>&lt;cp></code></olink> elements.</member>
  </simplelist>

  <para>Non-translatable text and <olink targetdoc="../inline/cp.xml" targetptr="cp"><code>&lt;cp></code></olink> elements <glossterm>may</glossterm> appear in any
    order.</para>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>required</glossterm></member>

    <member>- <olink targetdoc="../../attributes/dir.xml" targetptr="dir"><code>dir</code></olink>, <glossterm>optional</glossterm></member>
    
    <member>- <olink targetdoc="../../attributes/xml_space.xml" targetptr="xml_space"><code>xml:space</code></olink>, <glossterm>optional</glossterm>, the value is restricted
      to <code>preserve</code> on this element</member>
	
	

  </simplelist>

  
</section>
    
    <section id="source">
    <title>source</title>
    <para>Portion of text to be translated.</para>
    <para><emphasis>Contains:</emphasis></para>
    <simplelist type="vert">
        <member>- Text</member>
        <member>- Zero, one or more <olink targetdoc="../inline/cp.xml" targetptr="cp"><code>&lt;cp></code></olink> elements</member>
        <member>- Zero, one or more <olink targetdoc="../inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink> elements</member>
        <member>- Zero, one or more <olink targetdoc="../inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> elements</member>
        <member>- Zero, one or more <olink targetdoc="../inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> elements</member>
        <member>- Zero, one or more <olink targetdoc="../inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements</member>
        <member>- Zero, one or more <olink targetdoc="../inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> elements</member>
        <member>- Zero, one or more <olink targetdoc="../inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink> elements</member>
        <member>- Zero, one or more <olink targetdoc="../inline/em.xml" targetptr="em"><code>&lt;em></code></olink> elements</member>
    </simplelist>
    <para>Text and inline elements may appear in any order.</para>
    <para><emphasis>Attributes:</emphasis></para>
    <simplelist type="vert">
        <member>- <olink targetdoc="../../attributes/xml_lang.xml" targetptr="xml_lang"><code>xml:lang</code></olink>, <glossterm>optional</glossterm></member>
        <member>- <olink targetdoc="../../attributes/xml_space.xml" targetptr="xml_space"><code>xml:space</code></olink>, <glossterm>optional</glossterm></member>    
        
    </simplelist>
    
        <itemizedlist>
        
        <title>Constraints</title>
        <listitem>
            <para>When a <link linkend="source"><code>&lt;source></code></link> element is a child of 
                <olink targetdoc="segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or 
                <olink targetdoc="ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>, 
              the explicit or inherited value of the <glossterm>optional</glossterm>
                <olink targetdoc="../../attributes/xml_lang.xml" targetptr="xml_lang"><code>xml:lang</code></olink> 
                attribute <glossterm>must</glossterm> be equal to the value of the
                <olink targetdoc="../../attributes/srcLang.xml" targetptr="srcLang"><code>srcLang</code></olink> attribute 
                of the enclosing 
                <olink targetdoc="xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink> 
                element.</para>
        </listitem>
       
    </itemizedlist>
</section>
    
    <section id="target">
  <title>target</title>
  <para>The translation of the sibling <olink targetdoc="source.xml" targetptr="source"><code>&lt;source></code></olink> element.</para>
  <para><emphasis>Contains:</emphasis></para>
  <simplelist type="vert">
    <member>- Text</member>
    <member>- Zero, one or more <olink targetdoc="../inline/cp.xml" targetptr="cp"><code>&lt;cp></code></olink> elements</member>
    <member>- Zero, one or more <olink targetdoc="../inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink> elements</member>
    <member>- Zero, one or more <olink targetdoc="../inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> elements</member>
    <member>- Zero, one or more <olink targetdoc="../inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> elements</member>
    <member>- Zero, one or more <olink targetdoc="../inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements</member>
    <member>- Zero, one or more <olink targetdoc="../inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> elements</member>
    <member>- Zero, one or more <olink targetdoc="../inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink> elements</member>
    <member>- Zero, one or more <olink targetdoc="../inline/em.xml" targetptr="em"><code>&lt;em></code></olink> elements</member>
  </simplelist>
  <para>Text and inline elements may appear in any order.</para>
  <para><emphasis>Attributes:</emphasis></para>
  <simplelist type="vert">
    <member>- <olink targetdoc="../../attributes/xml_lang.xml" targetptr="xml_lang"><code>xml:lang</code></olink>, <glossterm>optional</glossterm></member>
    <member>- <olink targetdoc="../../attributes/xml_space.xml" targetptr="xml_space"><code>xml:space</code></olink>, <glossterm>optional</glossterm></member>    
    
    <member>- <olink targetdoc="../../attributes/order.xml" targetptr="order"><code>order</code></olink>, <glossterm>optional</glossterm></member>
  </simplelist>  
  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>When a <link linkend="target"><code>&lt;target></code></link> element is a child of 
        <olink targetdoc="segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or 
        <olink targetdoc="ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>, 
        the explicit or inherited value of the <glossterm>optional</glossterm>
        <olink targetdoc="../../attributes/xml_lang.xml" targetptr="xml_lang"><code>xml:lang</code></olink> 
        <glossterm>must</glossterm> be equal to the value of the 
        <olink targetdoc="../../attributes/trgLang.xml" targetptr="trgLang"><code>trgLang</code></olink> 
        attribute of the enclosing 
        <olink targetdoc="xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink> 
        element.</para>
    </listitem>
    
  </itemizedlist>
  
</section>
    
</section>
    <section id="inlineelements">
  <title>Inline Elements</title>

    <para>The <firstterm>XLIFF Core</firstterm> inline elements at the <olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink> or <olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink> level are: <olink targetdoc="inline/cp.xml" targetptr="cp"><code>&lt;cp></code></olink>, <olink targetdoc="inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink>, <olink targetdoc="inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, <olink targetdoc="inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>, <olink targetdoc="inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink>, <olink targetdoc="inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink> and <olink targetdoc="inline/em.xml" targetptr="em"><code>&lt;em></code></olink>.</para>

    <para>The elements at the <olink targetdoc="structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> level directly related
    to inline elements are: <olink targetdoc="structural/originaldata.xml" targetptr="originaldata"><code>&lt;originalData></code></olink> and
    <olink targetdoc="structural/data.xml" targetptr="data"><code>&lt;data></code></olink>.</para>

    <section id="cp">
  <title>cp</title>

  <para>Represents a Unicode character that is invalid in XML.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><olink targetdoc="structural/data.xml" targetptr="data"><code>&lt;data></code></olink>, <olink targetdoc="mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink>,
    <olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink>, <olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink> and <olink targetdoc="pc.xml" targetptr="pc"><code>&lt;pc></code></olink></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <olink targetdoc="../../attributes/hex.xml" targetptr="hex"><code>hex</code></olink>, <glossterm>required</glossterm></member>


  </simplelist>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Ctrl+C=&lt;cp hex="0003"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>The example above shows a character U+0003 (Control C) as it has to be represented in
    XLIFF.</para>

  <itemizedlist>
    <title>Processing Requirements</title>

    <listitem>
      <para><firstterm>Writers</firstterm> <glossterm>must</glossterm> encode all invalid XML characters of the content
      using <link linkend="cp"><code>&lt;cp></code></link>.</para>
    </listitem>

    <listitem>
      <para><firstterm>Writers</firstterm> <glossterm>must not</glossterm> encode valid XML characters of the content using
      <link linkend="cp"><code>&lt;cp></code></link>.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="ph">
  <title>ph</title>

  <para>Represents a standalone code of the original format.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink>, <olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink>, <olink targetdoc="pc.xml" targetptr="pc"><code>&lt;pc></code></olink> and
    <olink targetdoc="mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <olink targetdoc="../../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/candelete.xml" targetptr="cancopy"><code>canDelete</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/copyof.xml" targetptr="copyof"><code>copyOf</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/disp.xml" targetptr="disp"><code>disp</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/equiv.xml" targetptr="equiv"><code>equiv</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>required</glossterm>.</member>

    <member>- <olink targetdoc="../../attributes/dataref.xml" targetptr="dataref"><code>dataRef</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/subflows.xml" targetptr="subflows"><code>subFlows</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/subtype.xml" targetptr="subtype"><code>subType</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink>, <glossterm>optional</glossterm></member>
    <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>


  </simplelist>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">%d&lt;/data>
    &lt;data id="d2">&amp;lt;br/>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Number of entries: &lt;ph id="1" dataRef="d1" />&lt;ph id="2"
        dataRef="d2"/>(These entries are only the ones matching the
        current filter settings)&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly
        allowed by the wildcard <code>other</code>:</para>
      <simplelist type="vert">
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:fs:2.0</code>,
          <glossterm>optional</glossterm>, provided that the Constraints specified in the <olink targetdoc="modules/fs/fs.xml" targetptr="fs-mod">Format Style Module</olink> are
          met.</member>
        <member>- attributes from the namespace
          <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>,
          <glossterm>optional</glossterm>, provided that the Constraints specified in the <olink targetdoc="modules/size_restriction/specification.xml" targetptr="size_restriction_module">Size and Length Restriction Module</olink> are
          met.</member>
        
      </simplelist>
    </listitem>
    <listitem><para>No other attributes <glossterm>must</glossterm> be used.</para></listitem>

  </itemizedlist>
  <itemizedlist>
    <title>Processing Requirements</title>
    <listitem>
      <para><firstterm>Extractors</firstterm>
        <glossterm>must not</glossterm> use the <link linkend="ph"><code>&lt;ph></code></link> element to represent spanning codes.</para>
      <para><emphasis>Rationale:</emphasis> Using a standalone placeholder code for a spanning code
        does not allow for controlling the span (for instance tag order and data integrity) when
          <firstterm>Modifying</firstterm> inline content and is in <emphasis>direct
            contradiction</emphasis> to the business logic described in <olink targetdoc="../../inline/inline.xml" targetptr="representingcodes">Representation of the
              codes</olink> and normative statements included in <olink targetdoc="../../inline/inline.xml" targetptr="spanningcodeusage">Usage of &lt;pc> and &lt;sc>/&lt;ec></olink>
      </para>
    </listitem>
  </itemizedlist>
  <note><para>It is possible although not advised to use <link linkend="ph">&lt;ph></link> to mask non
      translatable inline content. The preferred way of protecting portions of inline content from
      translation is the <firstterm>Core</firstterm>
      <olink targetptr="translateAnnotation">Translate Annotation</olink>. See also discussion in
      the <olink targetptr="Translate_Inline">ITS Module section on representing translatability
        inline.</olink>. </para></note>
</section>

    <section id="pc">
  <title>pc</title>

  <para>Represents a well-formed spanning original code.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>- Text</member>

    <member>- Zero, one or more <olink targetdoc="../inline/cp.xml" targetptr="cp"><code>&lt;cp></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/cs.xml" targetptr="sc"><code>&lt;sc></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/cs.xml" targetptr="ec"><code>&lt;ec></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/em.xml" targetptr="em"><code>&lt;em></code></olink> elements</member>
  </simplelist>

  <para>Text and inline elements may appear in any order.</para>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member>- <olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink></member>
    <member>- <olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink></member>
    <member>- <link linkend="pc"><code>&lt;pc></code></link></member>
    <member>-<olink targetdoc="mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <olink targetdoc="../../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/candelete.xml" targetptr="cancopy"><code>canDelete</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/canoverlap.xml" targetptr="canoverlap"><code>canOverlap</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/copyof.xml" targetptr="copyof"><code>copyOf</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/dispend.xml" targetptr="dispend"><code>dispEnd</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/dispstart.xml" targetptr="dispstart"><code>dispStart</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/equivend.xml" targetptr="equivend"><code>equivEnd</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/equivstart.xml" targetptr="equivstart"><code>equivStart</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>required</glossterm></member>

    <member>- <olink targetdoc="../../attributes/datarefend.xml" targetptr="datarefend"><code>dataRefEnd</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/datarefstart.xml" targetptr="datarefstart"><code>dataRefStart</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/subflowsend.xml" targetptr="subflowsend"><code>subFlowsEnd</code></olink>,
    <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/subflowsstart.xml" targetptr="subflowsstart"><code>subFlowsStart</code></olink>,
    <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/subtype.xml" targetptr="subtype"><code>subType</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/dir.xml" targetptr="dir"><code>dir</code></olink>, <glossterm>optional</glossterm></member>
    <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>




  </simplelist>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="1">&amp;lt;B&amp;gt;&lt;/data>
    &lt;data id="2">&amp;lt;/B&amp;gt;&lt;/data>
  &lt;/originalData>
  &lt;segment>&lt;pc id="1" dataRefStart="1" dataRefEnd="2">
      Important&lt;/pc> text&lt;/source>&lt;/segment>
&lt;/unit>
</programlisting>

  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly
        allowed by the wildcard <code>other</code>:</para>
      <simplelist type="vert">
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:fs:2.0</code>,
            <glossterm>optional</glossterm>, provided that the Constraints specified in the <olink targetdoc="modules/fs/fs.xml" targetptr="fs-mod">Format Style Module</olink> are
          met.</member>
        <member>- attributes from the namespace
            <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>,
            <glossterm>optional</glossterm>, provided that the Constraints specified in the <olink targetdoc="modules/size_restriction/specification.xml" targetptr="size_restriction_module">Size and Length Restriction Module</olink> are
          met.</member>
        
      </simplelist>
    </listitem>
    <listitem><para>No other attributes <glossterm>must</glossterm> be used.</para></listitem>

  </itemizedlist>

  <itemizedlist>
    <title>Processing Requirements</title>

    <listitem>
      <para><firstterm>Extractors</firstterm>
        <glossterm>must not</glossterm> use the <olink targetdoc="../inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element to represent standalone codes.</para>
      <para>Rationale: Using a spanning code for a standalone code can easily result in having
        text inside a span where the original format does not allow it.</para>
          </listitem>
  </itemizedlist>
</section>

    <section id="sc">
  <title>sc</title>

  <para>Start of a spanning original code.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink>, <olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink>, <olink targetdoc="pc.xml" targetptr="pc"><code>&lt;pc></code></olink> and
    <olink targetdoc="mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <olink targetdoc="../../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/candelete.xml" targetptr="cancopy"><code>canDelete</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/canoverlap.xml" targetptr="canoverlap"><code>canOverlap</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/copyof.xml" targetptr="copyof"><code>copyOf</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/dataref.xml" targetptr="dataref"><code>dataRef</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/dir.xml" targetptr="dir"><code>dir</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/disp.xml" targetptr="disp"><code>disp</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/equiv.xml" targetptr="equiv"><code>equiv</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>required</glossterm></member>

    <member>- <olink targetdoc="../../attributes/isolated.xml" targetptr="isolated"><code>isolated</code></olink>, <glossterm>optional</glossterm></member>


    <member>- <olink targetdoc="../../attributes/subflows.xml" targetptr="subflows"><code>subFlows</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/subtype.xml" targetptr="subtype"><code>subType</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink>, <glossterm>optional</glossterm></member>



    <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>




  </simplelist>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>&lt;sc id="1" type="fmt" subType="xlf:b"/>
        First sentence. &lt;/source>
  &lt;/segment>
  &lt;segment>
    &lt;source>Second sentence.&lt;ec startRef="1" type="fmt"
        subType="xlf:b"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <itemizedlist>
    <title>Constraints</title>

    <listitem>
      <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly
        allowed by the wildcard <code>other</code>:</para>

        <simplelist type="vert">
          <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:fs:2.0</code>,
            <glossterm>optional</glossterm>, provided that the Constraints specified in the <olink targetdoc="modules/fs/fs.xml" targetptr="fs-mod">Format Style Module</olink> are
            met.</member>
          <member>- attributes from the namespace
            <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>,
            <glossterm>optional</glossterm>, provided that the Constraints specified in the <olink targetdoc="modules/size_restriction/specification.xml" targetptr="size_restriction_module">Size and Length Restriction Module</olink> are
            met.</member>
          
        </simplelist>

    </listitem>
    <listitem><para>No other attributes <glossterm>must</glossterm> be used.</para></listitem>

    <listitem>
      <para>The values of the attributes <olink targetdoc="../../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink>, <olink targetdoc="../../attributes/candelete.xml" targetptr="candelete"><code>canDelete</code></olink>, <olink targetdoc="../../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> and <olink targetdoc="../../attributes/canoverlap.xml" targetptr="canoverlap"><code>canOverlap</code></olink>
        <glossterm>must</glossterm> be the same as the values the ones in the <olink targetdoc="../inline/cs.xml" targetptr="ec"><code>&lt;ec></code></olink> element
        corresponding to this start code.</para>
    </listitem>

    <listitem>
      <para>The attribute <olink targetdoc="../../attributes/isolated.xml" targetptr="isolated"><code>isolated</code></olink> <glossterm>must</glossterm> be set to
      <code>yes</code> if and only if the <olink targetdoc="../inline/cs.xml" targetptr="ec"><code>&lt;ec></code></olink> element corresponding to
      this start marker is not in the same <olink targetdoc="../../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>, and set to
      <code>no</code> otherwise.</para>
    </listitem>
    </itemizedlist>
    <itemizedlist>
      <title>Processing Requirements</title>

    <listitem>
      <para><firstterm>Extractors</firstterm>
        <glossterm>must not</glossterm> use the <olink targetdoc="../inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> / <olink targetdoc="../inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> pair to represent standalone codes.</para>
        <para>Rationale: Using a spanning code for a standalone code can easily result in having
        text inside a span where the original format does not allow it.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="ec">
  <title>ec</title>

  <para>End of a spanning original code.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink>, <olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink>, <olink targetdoc="pc.xml" targetptr="pc"><code>&lt;pc></code></olink> and
    <olink targetdoc="mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <olink targetdoc="../../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/candelete.xml" targetptr="cancopy"><code>canDelete</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/canoverlap.xml" targetptr="canoverlap"><code>canOverlap</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/copyof.xml" targetptr="copyof"><code>copyOf</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/dataref.xml" targetptr="dataref"><code>dataRef</code></olink>, <glossterm>optional</glossterm></member>
    <member>- <olink targetdoc="../../attributes/dir.xml" targetptr="dir"><code>dir</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/disp.xml" targetptr="disp"><code>disp</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/equiv.xml" targetptr="equiv"><code>equiv</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/isolated.xml" targetptr="isolated"><code>isolated</code></olink>, <glossterm>optional</glossterm></member>


    <member>- <olink targetdoc="../../attributes/startref.xml" targetptr="startref"><code>startRef</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/subflows.xml" targetptr="subflows"><code>subFlows</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/subtype.xml" targetptr="subtype"><code>subType</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink>, <glossterm>optional</glossterm></member>

    <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>


    </simplelist>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">\b &lt;/data>
    &lt;data id="d2">\i &lt;/data>
    &lt;data id="d3">\b0 &lt;/data>
    &lt;data id="d4">\i0 &lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Text in &lt;sc id="1" dataRef="d1"/>bold &lt;sc id="2"
        dataRef="d2"/> and&lt;ec startRef="1" dataRef="d3"/>
         italics&lt;ec startRef="2" dataRef="d4"/>. &lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly
        allowed by the wildcard <code>other</code>:</para>
      <simplelist type="vert">
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:fs:2.0</code>,
          <glossterm>optional</glossterm>, provided that the Constraints specified in the <olink targetdoc="modules/fs/fs.xml" targetptr="fs-mod">Format Style Module</olink> are
          met.</member>
        <member>- attributes from the namespace
          <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>,
          <glossterm>optional</glossterm>, provided that the Constraints specified in the <olink targetdoc="modules/size_restriction/specification.xml" targetptr="size_restriction_module">Size and Length Restriction Module</olink> are
          met.</member>
        
      </simplelist>
    </listitem>
    <listitem><para>No other attributes <glossterm>must</glossterm> be used.</para></listitem>



    <listitem>
      <para>The values of the attributes <olink targetdoc="../../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink>, <olink targetdoc="../../attributes/candelete.xml" targetptr="candelete"><code>canDelete</code></olink> and <olink targetdoc="../../attributes/canoverlap.xml" targetptr="canoverlap"><code>canOverlap</code></olink> <glossterm>must</glossterm> be the same
        as the values the ones in the <olink targetdoc="../inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> element corresponding to
        this end code.</para>
    </listitem>

    <listitem>
      <para>The value of the attribute <olink targetdoc="../../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> <glossterm>must</glossterm> be <code>no</code>
        if the value of <olink targetdoc="../../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> is <code>firstNo</code> in the <olink targetdoc="../inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> element corresponding to
        this end code.</para>
    </listitem>

    <listitem>
      <para>The attribute <olink targetdoc="../../attributes/isolated.xml" targetptr="isolated"><code>isolated</code></olink>
        <glossterm>must</glossterm> be set to <code>yes</code> if and only if the <olink targetdoc="../inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> element
        corresponding to this end code is not in the same <olink targetdoc="../../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> and set to <code>no</code> otherwise.</para>
    </listitem>

    <listitem id="ecIFF">
      <para>If and only if the attribute <olink targetdoc="../../attributes/isolated.xml" targetptr="isolated"><code>isolated</code></olink> is set to <code>yes</code>, the
        attribute <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>
        <glossterm>must</glossterm> be used instead of the attribute <olink targetdoc="../../attributes/startref.xml" targetptr="startref"><code>startRef</code></olink> that <glossterm>must</glossterm> be used otherwise.</para>
    </listitem>
    <listitem>
      <para> If and only if the attribute <olink targetdoc="../../attributes/isolated.xml" targetptr="isolated"><code>isolated</code></olink> is set to <code>yes</code>, the attribute <olink targetdoc="../../attributes/dir.xml" targetptr="dir"><code>dir</code></olink>
        <glossterm>may</glossterm> be used, otherwise the attribute <olink targetdoc="../../attributes/dir.xml" targetptr="dir"><code>dir</code></olink>
        <glossterm>must not</glossterm> be used on the <link linkend="ec"><code>&lt;ec></code></link> element. </para>
    </listitem>
  </itemizedlist>
    <itemizedlist>
      <title>Processing Requirements</title>

    <listitem>
      <para><firstterm>Extractors</firstterm>
        <glossterm>must not</glossterm> use the <olink targetdoc="../inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> / <olink targetdoc="../inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> pair to represent standalone codes.</para>
      <para>Rationale: Using a spanning code for a standalone code can easily result in having
        text inside a span where the original format does not allow it.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="mrk">
  <title>mrk</title>

  <para>Represents an annotation pertaining to the marked span.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>- Text</member>

    <member>- Zero, one or more <olink targetdoc="../inline/cp.xml" targetptr="cp"><code>&lt;cp></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/cs.xml" targetptr="sc"><code>&lt;sc></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/cs.xml" targetptr="ec"><code>&lt;ec></code></olink> elements</member>

    <member>- Zero, one or more <olink targetdoc="../inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> elements</member>
    <member>- Zero, one or more <olink targetdoc="../inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink> elements</member>
    <member>- Zero, one or more <olink targetdoc="../inline/em.xml" targetptr="em"><code>&lt;em></code></olink> elements</member>
  </simplelist>

  <para>Text and inline elements may appear in any order.</para>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink>, <olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink>, <olink targetdoc="pc.xml" targetptr="pc"><code>&lt;pc></code></olink> and
    <olink targetdoc="mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>required</glossterm></member>

    <member>- <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/ref.xml" targetptr="ref"><code>ref</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/value.xml" targetptr="value"><code>value</code></olink>, <glossterm>optional</glossterm></member>
    
    
    <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>

  </simplelist>
  
  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>The <olink targetdoc="../../xliff22.xml" targetptr="xml_namespace">[XML
          namespace]</olink>
        <glossterm>must not</glossterm> be used at this extension point.</para>
    </listitem>
    <listitem>
      <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly
        allowed by the wildcard <code>other</code>:</para>
      <simplelist type="vert">
        <member>- attributes from the namespace
          <code>urn:oasis:names:tc:xliff:fs:2.0</code>, <glossterm>optional</glossterm>,
          provided that the Constraints specified in the <olink targetdoc="modules/fs/fs.xml" targetptr="fs-mod">Format Style Module</olink>
          are met.</member>
        <member>- attributes from the namespace
          <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>,
          <glossterm>optional</glossterm>, provided that the Constraints specified in
          the <olink targetdoc="modules/size_restriction/specification.xml" targetptr="size_restriction_module">Size and Length Restriction
            Module</olink> are met.</member>
        <member>- attributes from the namespace
          <code>http://www.w3.org/2005/11/its</code>,
          <glossterm>optional</glossterm>, provided that the Constraints specified in
          the <olink targetdoc="modules/itsm/specification.xml" targetptr="ITS-module">ITS
            Module</olink> are met.</member>
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:itsm:2.1</code>,
            <glossterm>optional</glossterm>, provided that the Constraints specified in the <olink targetdoc="../../modules/itsm/specification.xml" targetptr="ITS-module">ITS
            Module</olink> are met.</member>
      </simplelist>
    </listitem>
    
    
  </itemizedlist>

  <para>See the <olink targetdoc="../../inline/inline.xml" targetptr="annotations">Annotations section</olink> for more details and
  examples on how to use the <olink targetdoc="mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> element.</para>
</section>
    <section id="sm">
  <title>sm</title>

  <para>Start marker of an annotation where the spanning marker cannot be used for wellformedness
    reasons.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink>, <olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink>, <olink targetdoc="pc.xml" targetptr="pc"><code>&lt;pc></code></olink> and
    <olink targetdoc="mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink>, <glossterm>required</glossterm></member>

    <member>- <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/ref.xml" targetptr="ref"><code>ref</code></olink>, <glossterm>optional</glossterm></member>

    <member>- <olink targetdoc="../../attributes/value.xml" targetptr="value"><code>value</code></olink>, <glossterm>optional</glossterm></member>
    
    
    <member>- attributes from other namespaces, <glossterm>optional</glossterm></member>

  </simplelist>
  
  <itemizedlist>
    <title>Constraints</title>
    <listitem>
      <para>The <olink targetdoc="../../xliff22.xml" targetptr="xml_namespace">[XML
          namespace]</olink>
        <glossterm>must not</glossterm> be used at this extension point.</para>
    </listitem>
    <listitem>
      <para>The following <firstterm>XLIFF Module</firstterm> attributes are explicitly allowed by
        the wildcard <code>other</code>:</para>
      <simplelist type="vert">
        <member>- attributes from the namespace
          <code>urn:oasis:names:tc:xliff:fs:2.0</code>, <glossterm>optional</glossterm>,
          provided that the Constraints specified in the <olink targetdoc="modules/fs/fs.xml" targetptr="fs-mod">Format Style Module</olink>
          are met.</member>
        <member>- attributes from the namespace
          <code>urn:oasis:names:tc:xliff:sizerestriction:2.0</code>,
          <glossterm>optional</glossterm>, provided that the Constraints specified in
          the <olink targetdoc="modules/size_restriction/specification.xml" targetptr="size_restriction_module">Size and Length Restriction
            Module</olink> are met.</member>
        <member>- attributes from the namespace
          <code>http://www.w3.org/2005/11/its</code>,
          <glossterm>optional</glossterm>, provided that the Constraints specified in
          the <olink targetdoc="modules/itsm/specification.xml" targetptr="ITS-module">ITS
            Module</olink> are met.</member>
        <member>- attributes from the namespace <code>urn:oasis:names:tc:xliff:itsm:2.1</code>,
            <glossterm>optional</glossterm>, provided that the Constraints specified in the <olink targetdoc="../../modules/itsm/specification.xml" targetptr="ITS-module">ITS
            Module</olink> are met.</member>
      </simplelist>
    </listitem>
    
    
  </itemizedlist>

  <para>See the <olink targetdoc="../../inline/inline.xml" targetptr="annotations">Annotations section</olink> for more details and
  examples on how to use the <olink targetdoc="sm.xml" targetptr="sm"><code>&lt;sm></code></olink> element.</para>
</section>
    <section id="em">
  <title>em</title>

  <para>End marker of an annotation where the spanning marker cannot be used for wellformedness
    reasons.</para>

  <para><emphasis>Contains:</emphasis></para>

  <simplelist type="vert">
    <member>This element is always empty.</member>
  </simplelist>

  <para><emphasis>Parents:</emphasis></para>

  <simplelist type="vert">
    <member><olink targetdoc="structural/source.xml" targetptr="source"><code>&lt;source></code></olink>, <olink targetdoc="structural/target.xml" targetptr="target"><code>&lt;target></code></olink>, <olink targetdoc="pc.xml" targetptr="pc"><code>&lt;pc></code></olink> and
    <olink targetdoc="mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink></member>
  </simplelist>

  <para><emphasis>Attributes:</emphasis></para>

  <simplelist type="vert">
    <member>- <olink targetdoc="../../attributes/startref.xml" targetptr="startref"><code>startRef</code></olink>, <glossterm>required</glossterm></member>
    
  </simplelist>

  <para>See the <olink targetdoc="../../inline/inline.xml" targetptr="annotations">Annotations section</olink> for more details and
  examples on how to use the <olink targetdoc="em.xml" targetptr="em"><code>&lt;em></code></olink> element.</para>
</section>
 </section>
</section>

    <section>
  <title>Attributes</title>

  <para>This section lists all the various attributes used in XLIFF core elements.</para>

  <section>
    <title>XLIFF Attributes</title>

    <para>The attributes defined in XLIFF 2.0 are: <olink targetdoc="appliesto.xml" targetptr="appliesto"><code>appliesTo</code></olink>,
      
      <olink targetdoc="cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink>,
      <olink targetdoc="candelete.xml" targetptr="candelete"><code>canDelete</code></olink>,
      <olink targetdoc="canoverlap.xml" targetptr="canoverlap"><code>canOverlap</code></olink>,
      <olink targetdoc="canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink>,
      <olink targetdoc="canResegment.xml" targetptr="canResegment"><code>canResegment</code></olink>,
      <olink targetdoc="category.xml" targetptr="category"><code>category</code></olink>,
      <olink targetdoc="copyof.xml" targetptr="copyof"><code>copyOf</code></olink>,

      <olink targetdoc="dataref.xml" targetptr="dataref"><code>dataRef</code></olink>,
      <olink targetdoc="datarefend.xml" targetptr="datarefend"><code>dataRefEnd</code></olink>,
      <olink targetdoc="datarefstart.xml" targetptr="datarefstart"><code>dataRefStart</code></olink>,
      <olink targetdoc="dir.xml" targetptr="dir"><code>dir</code></olink>,
      <olink targetdoc="disp.xml" targetptr="disp"><code>disp</code></olink>,
      <olink targetdoc="dispend.xml" targetptr="dispend"><code>dispEnd</code></olink>,
      <olink targetdoc="dispstart.xml" targetptr="dispstart"><code>dispStart</code></olink>,
      <olink targetdoc="equiv.xml" targetptr="equiv"><code>equiv</code></olink>,
      <olink targetdoc="equivend.xml" targetptr="equivend"><code>equivEnd</code></olink>,
      <olink targetdoc="equivstart.xml" targetptr="equivstart"><code>equivStart</code></olink>,
      <olink targetdoc="hex.xml" targetptr="hex"><code>hex</code></olink>,
      <olink targetdoc="href.xml" targetptr="href"><code>href</code></olink>,
      <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink>,
      <olink targetdoc="isolated.xml" targetptr="isolated"><code>isolated</code></olink>,
      <olink targetdoc="name.xml" targetptr="name"><code>name</code></olink>,
      <olink targetdoc="order.xml" targetptr="order"><code>order</code></olink>,
      <olink targetdoc="original.xml" targetptr="original"><code>original</code></olink>,
      <olink targetdoc="priority.xml" targetptr="priority"><code>priority</code></olink>,
      <olink targetdoc="ref.xml" targetptr="ref"><code>ref</code></olink>,


      <olink targetdoc="srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink>,
      <olink targetdoc="srcLang.xml" targetptr="srcLang"><code>srcLang</code></olink>,

      <olink targetdoc="startref.xml" targetptr="startref"><code>startRef</code></olink>,

      <olink targetdoc="state.xml" targetptr="state"><code>state</code></olink>,

      <olink targetdoc="subflows.xml" targetptr="subflows"><code>subFlows</code></olink>,
      <olink targetdoc="subflowsend.xml" targetptr="subflowsend"><code>subFlowsEnd</code></olink>,
      <olink targetdoc="subflowsstart.xml" targetptr="subflowsstart"><code>subFlowsStart</code></olink>,

      <olink targetdoc="subState.xml" targetptr="substate"><code>subState</code></olink>,

      <olink targetdoc="subType.xml" targetptr="subtype"><code>subType</code></olink>,


      <olink targetdoc="trgLang.xml" targetptr="trgLang"><code>trgLang</code></olink>,
      <olink targetdoc="translate.xml" targetptr="translate"><code>translate</code></olink>,
      <olink targetdoc="trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink>,
      <olink targetdoc="type.xml" targetptr="type"><code>type</code></olink>,
      <olink targetdoc="value.xml" targetptr="value"><code>value</code></olink>
      and <olink targetdoc="version.xml" targetptr="version"><code>version</code></olink>.</para>

    

    <section id="appliesto">
    <title>appliesTo</title>
    
    <para>Comment target - indicates the element to what the content of the note applies.</para>
    
    <para><emphasis>Value description:</emphasis> <code>source</code> or <code>target</code>.</para>
    
    <para><emphasis>Default value:</emphasis> undefined.</para>
    
    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink>.</para>
    
</section>

    <section id="cancopy">
    <title>canCopy</title>
    
    <para>Replication editing hint - indicates whether or not the inline code can be copied.</para>
    
    <para><emphasis>Value description:</emphasis>
        <code>yes</code> if the code can be copied, <code>no</code> if the code is not intended to
        be copied.</para>
    
    <para><emphasis>Default value:</emphasis> <code>yes</code>.</para>
    
    <para><emphasis>Used in:</emphasis>
     <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>,
     <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>,
     <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>,
     <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink>.</para>
    
</section>

    <section id="candelete">
    <title>canDelete</title>
    
    <para>Deletion editing hint - indicates whether or not the inline code can be deleted.</para>
    
    <para><emphasis>Value description:</emphasis>
        <code>yes</code> if the code can be deleted, <code>no</code> if the code is not allowed to
        be deleted.</para>
    
    <para><emphasis>Default value:</emphasis> <code>yes</code>.</para>
    
    <para><emphasis>Used in:</emphasis>
     <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>,
     <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>,
     <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>,
     <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink>.</para>
    
</section>

    <section id="canoverlap">
  <title>canOverlap</title>

  <para>Code can overlap - indicates whether or not the spanning code where this attribute is used
    can enclose partial spanning codes (i.e. a start code without its corresponding end code, or an
    end code without its corresponding start code).</para>

  <para><emphasis>Value description:</emphasis> <code>yes</code> or
  <code>no</code>.</para>

  <para><emphasis>Default value:</emphasis> default values for this
  attribute depend on the element in which it is used:</para>

  <itemizedlist>
    <listitem>
      <para>When used in <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>: <code>no</code>.</para>
    </listitem>

    <listitem>
      <para>When used in <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> or <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>: <code>yes</code>.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> and <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink></para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="1">\i1 &lt;/data>
    &lt;data id="2">\i0 &lt;/data>
    &lt;data id="3">{\b &lt;/data>
    &lt;data id="4">}&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>&lt;pc id="1" dataRefStart="3" dataRefEnd="4" canOverlap="no">
        Bold, &lt;sc id="2" dataRef="1" canOverlap="yes"/>both&lt;/pc>,
         italics&lt;ec startRef="2" dataRef="2"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>
</section>

    <section id="canreorder">
  <title>canReorder</title>

  <para>Re-ordering editing hint - indicates whether or not the inline code can be re-ordered. See
      <olink targetdoc="../inline/inline.xml" targetptr="editinghints">Editing Hints section</olink>
    for more details.</para>

  <para><emphasis>Value description:</emphasis>
    <code>yes</code> in case the code can be re-ordered, <code>firstNo</code> when the code is the
    first element of a sequence that cannot be re-ordered, <code>no</code> when it is another
    element of such a sequence.</para>

  <para><emphasis>Default value:</emphasis> <code>yes</code>.</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>, <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink>.</para>
  
  <para>For the normative Usage Description see Constraints and Processing Requirements in the <olink targetdoc="../inline/inline.xml" targetptr="editinghints">Editing Hints</olink> section.</para>
</section>

    <section id="canResegment">
    <title>canResegment</title>
    
    <para>Can resegment - indicates whether or not the source text in the scope of the given
            <code>canResegment</code> flag can be reorganized into a different structure of <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> elements within the same parent <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>.</para>
    
    <para><emphasis>Value description:</emphasis> <code>yes</code> or <code>no</code>.</para>
        
    <para><emphasis>Default value:</emphasis> default values for this attribute
        depend on the element in which it is used:</para>
    
    <itemizedlist>
        <listitem>
            <para>When used in <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>:</para>
            
            <para>The value <code>yes</code>.</para>
        </listitem>
        <listitem>
            <para>When used in any other element:</para>
            <para>The value of the <olink targetdoc="canResegment.xml" targetptr="canResegment"><code>canResegment</code></olink> attribute of its parent element.
            </para>   
                
        </listitem>
        
        
        
    </itemizedlist>
    
    
    <para><emphasis>Used in:</emphasis>
        <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>
        <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink>
        <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>, and
        <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink>.    
    </para>
    
</section>

    <section id="category">
    <title>category</title>
    
    <para>Category - provides a way to categorize notes.</para>
    
    <para><emphasis>Value description:</emphasis> Text.</para>
    
    <para><emphasis>Default value:</emphasis> undefined</para>
    
    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink>.</para>
    
</section>

    <section id="copyof">
  <title>copyOf</title>

  <para>Reference to base code - holds the <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> of the base code of a copied code.</para>

  <para><emphasis>Value description:</emphasis> NMTOKEN. The <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> value of the base
  code of which this code is a copy.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink>, <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Äter &lt;pc id="1">katter möss&lt;/pc>?&lt;/source>
    &lt;target>Do &lt;pc id="1">cats&lt;/pc> eat &lt;pc id="2" copyOf="1">
        mice&lt;/pc>? &lt;/target>
  &lt;/segment>
&lt;/unit>
 </programlisting>
</section>


    <section id="dataref">
  <title>dataRef</title>

  <para>Original data reference - holds the identifier of the <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink>
    element that contains the original data for a given inline code.</para>

  <para><emphasis>Value description:</emphasis> An <olink targetdoc="../xliff22.xml" targetptr="XMLSchema2">[XML Schema Datatypes]</olink> NMTOKEN that
    <glossterm>must</glossterm> be the value of the <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> attribute of
  one of the <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> element listed in the
  same <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>

  <para><emphasis>Default value:</emphasis> undefined.</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">{0}&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Error in '&lt;ph id="1" dataRef="d1"/>'.&lt;/source>
    &lt;target>Erreur dans '&lt;ph id="1" dataRef="d1"/>'.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>The example above shows a <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink> element that has its original
  data stored outside the content, in a <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> element.</para>

 </section>

    <section id="datarefend">
  <title>dataRefEnd</title>

  <para>Original data reference - holds the identifier of the <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink>
    element that contains the original data for the end marker of a given inline code.</para>

  <para><emphasis>Value description:</emphasis> An <olink targetdoc="../xliff22.xml" targetptr="XMLSchema2">[XML Schema Datatypes]</olink> NMTOKEN that <glossterm>must</glossterm> be
  the value of the <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> attribute of one of the <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> element listed in the
  same <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>

  <para><emphasis>Default value:</emphasis> undefined.</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;EM>&lt;/data>
    &lt;data id="d2">&amp;lt;/EM>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>&lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Efficiency&lt;/pc> is the operative word here.&lt;/source>
    &lt;target>&lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Efficacité&lt;/pc> est le mot clé ici.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>The example above shows two <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> elements with their original
  data stored outside the content, in two <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> elements.</para>
</section>

    <section id="datarefstart">
  <title>dataRefStart</title>

  <para>Original data reference - holds the identifier of the <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink>
    element that contains the original data for the start marker of a given inline code.</para>

  <para><emphasis>Value description:</emphasis> An <olink targetdoc="../xliff22.xml" targetptr="XMLSchema2">[XML Schema Datatypes]</olink> NMTOKEN that <glossterm>must</glossterm> be
  the value of the <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> attribute of one of the <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> element listed in the
  same <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>

  <para><emphasis>Default value:</emphasis> undefined.</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;EM>&lt;/data>
    &lt;data id="d2">&amp;lt;/EM>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>&lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Efficiency&lt;/pc> is the operative word here.&lt;/source>
    &lt;target>&lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Efficacité&lt;/pc> est le mot clé ici.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>The example above shows two <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> elements with their original
  data stored outside the content, in two <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> elements.</para>
</section>


    <section id="dir">
  <title>dir</title>

  <para>Directionality - indicates the directionality of content.</para>

  <para><emphasis>Value description:</emphasis>
    <code>ltr</code> (Left-To-Right), <code>rtl</code> (Right-To-Left), or <code>auto</code>
    (determined heuristically, based on the first strong directional character in scope, see <olink targetdoc="xliff20.xml" targetptr="uax9">[UAX #9]</olink>).</para>

  <para><emphasis>Default value:</emphasis> default values for this attribute
  depend on the element in which it is used:</para>

  <itemizedlist>
    <listitem>
      <para>When used in a <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, or <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>
        element that has a <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> element as its parent:</para>

      <para>The value of the <olink targetdoc="srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink> attribute of the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element, in which the elements are located.</para>
    </listitem>

    <listitem>
      <para>When used in a <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, or <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>
        element that has a <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> element as its parent: </para>

      <para>The value of the <olink targetdoc="trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink> attribute of the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element, in which the elements are located.</para>
    </listitem>

    <listitem>
      <para>When used in a <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, or <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>
        element that has a <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element as its parent:</para>

      <para>The value of the <olink targetdoc="dir.xml" targetptr="dir"><code>dir</code></olink>
        attribute of the parent <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element.</para>
    </listitem>

    <listitem>
      <para>When used in <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink>:</para>

      <para>The value <code>auto</code>.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Used in:</emphasis> 
     <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink>, <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, and <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>.</para>
</section>

    <section id="disp">
  <title>disp</title>

  <para>Display text - holds an alternative user-friendly display representation of the original
    data of the inline code.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">{1}&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Welcome back &lt;ph id="1" disp="[UserName]" dataRef="d1"/>!
        &lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <note>
    <para>To provide a plain text equivalent of the code, use the <olink targetdoc="equiv.xml" targetptr="equiv"><code>equiv</code></olink>
    attribute.</para>
  </note>
</section>

    <section id="dispend">
  <title>dispEnd</title>

  <para>Display text - holds an alternative user-friendly display representation of the original
    data of the end marker of an inline code.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">\cf1\ul\b\f1\fs24 &lt;/data>
    &lt;data id="d2">\cf0\ulnone\b0\f0\fs22 &lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Example of &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2"
        dispStart="&amp;lt;span>" dispEnd="&amp;lt;/span>">
        formatted text&lt;/pc>.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>In the example above, the <olink targetdoc="dispstart.xml" targetptr="dispstart"><code>dispStart</code></olink> and <olink targetdoc="dispend.xml" targetptr="dispend"><code>dispEnd</code></olink>
  attributes provide a more user-friendly representation of the original
  formatting codes.</para>

  <note>
    <para>To provide a plain text equivalent of the code, use the <olink targetdoc="equivend.xml" targetptr="equivend"><code>equivEnd</code></olink> attribute.</para>
  </note>
</section>

    <section id="dispstart">
  <title>dispStart</title>

  <para>Display text - holds an alternative user-friendly display representation of the original
    data of the start marker of an inline code.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">\cf1\ul\b\f1\fs24 &lt;/data>
    &lt;data id="d2">\cf0\ulnone\b0\f0\fs22 &lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Example of &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2"
        dispStart="&amp;lt;span>" dispEnd="&amp;lt;/span>">
        formatted text&lt;/pc>.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>In the example above, the <olink targetdoc="dispstart.xml" targetptr="dispstart"><code>dispStart</code></olink> and <olink targetdoc="dispend.xml" targetptr="dispend"><code>dispEnd</code></olink>
  attributes provide a more user-friendly representation of the original
  formatting codes.</para>

  <note>
    <para>To provide a plain text equivalent of the code, use the <olink targetdoc="equivstart.xml" targetptr="equivstart"><code>equivStart</code></olink> attribute.</para>
  </note>
</section>

    <section id="equiv">
  <title>equiv</title>

  <para>Equivalent text - holds a plain text representation of the original data of the inline code
    that can be used when generating a plain text representation of the content.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> an empty string.</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;amp;&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Open &lt;ph id="1" equiv="" dataRef="d1"/>File&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <para>In this example the <olink targetdoc="equiv.xml" targetptr="equiv"><code>equiv</code></olink> attribute of the <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink> element is used to indicate
  that the original data of the code can be ignored in the text representation
  of the string. This could, for instance, help a spell-checker tool to
  process the content as "Open File".</para>

  <note>
    <para>To provide a user-friendly representation, use the <olink targetdoc="disp.xml" targetptr="disp"><code>disp</code></olink>
    attribute.</para>
  </note>
</section>

    <section id="equivend">
  <title>equivEnd</title>

  <para>Equivalent text - holds a plain text representation of the original data of the end marker
    of an inline code that can be used when generating a plain text representation of the
    content.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> an empty string</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;span class="link" onclick="linkTo('dbId5345')">
        &lt;/data>
    &lt;data id="d2">&amp;lt;/span>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>The jam made of &lt;pc id="1" dataRefStart="d1" equivStart=""
        dataRefEnd="d2" equivEnd="">lingonberries&lt;/pc> is quite
        tasty.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <note>
    <para>To provide a user-friendly representation, use the <olink targetdoc="dispend.xml" targetptr="dispend"><code>dispEnd</code></olink>
    attribute.</para>
  </note>
</section>

    <section id="equivstart">
  <title>equivStart</title>

  <para>Equivalent text - holds a plain text representation of the original data of the start marker
    of an inline code that can be used when generating a plain text representation of the
    content.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <para><emphasis>Default value:</emphasis> an empty string</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;span class="link" onclick="linkTo('dbId5345')">
        &lt;/data>
    &lt;data id="d2">&amp;lt;/span>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>The jam made of &lt;pc id="1" dataRefStart="d1" equivStart=""
        dataRefEnd="d2" equivEnd="">lingonberries&lt;/pc> is quite
        tasty.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

  <note>
    <para>To provide a user-friendly representation, use the <olink targetdoc="dispstart.xml" targetptr="dispstart"><code>dispStart</code></olink> attribute.</para>
  </note>
</section>

    <section id="hex">
  <title>hex</title>

  <para>Hexadecimal code point - holds the value of a Unicode code point that is invalid in
    XML.</para>

  <para><emphasis>Value description:</emphasis> A canonical representation of
    the hexBinary <olink targetdoc="../xliff22.xml" targetptr="XMLSchema2">[XML Schema Datatypes]</olink> data type: Two hexadecimal digits to represent each octet
  of the Unicode code point. The allowed values are any of the values
  representing code points invalid in XML, between hexadecimal 0000 and 10FFFF
  (both included).</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/cp.xml" targetptr="cp"><code>&lt;cp></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;cp hex="001A"/>&lt;cp hex="0003"/></programlisting>

  <para>The example above shows a character U+001A and a character U+0003 as they have to be
    represented in XLIFF.</para>
</section>

    <section id="href">
    <title>href</title>
    
    <para>href - a pointer to the location of an external skeleton file pertaining to the
        enclosing <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> element..</para>
    
    <para><emphasis>Value description:</emphasis> IRI.</para>
        
    <para><emphasis>Default value:</emphasis> undefined</para>
    
    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/skeleton.xml" targetptr="skeleton"><code>&lt;skeleton></code></olink>.</para>
    
</section>

    <section id="id">
  <title>id</title>

  <para>Identifier - a character string used to identify an element.</para>

  <para><emphasis>Value description:</emphasis> NMTOKEN. The scope of the values for this attribute
    depends on the element, in which it is used.</para>

  <itemizedlist>
    <listitem>
      <para>When used in a <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> element:</para>
      <para>The value <glossterm>must</glossterm> be unique among all <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> <code>id</code> attribute values within the enclosing  <olink targetdoc="../elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink> element.</para>
    </listitem>

    <listitem>
      <para>When used in <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink> elements:</para>
      <para>The value <glossterm>must</glossterm> be unique among all <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink> <code>id</code> attribute values within the enclosing  <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> element.</para>
    </listitem>
    
    <listitem>
      <para>When used in <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> elements:</para>
      <para>The value <glossterm>must</glossterm> be unique among all <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> <code>id</code> attribute values within the enclosing <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> element.</para>
    </listitem>
    
    <listitem>
      <para>When used in <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink> elements:</para>
      <para>The value <glossterm>must</glossterm> be unique among all <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink> <code>id</code> attribute values within the immediate enclosing 
        <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>,
        <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink>, or
        <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>
    </listitem>
    
    <listitem>
      <para>When used in <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> elements:</para>
      <para>The value <glossterm>must</glossterm> be unique among all <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> <code>id</code> attribute values within the enclosing 
        <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>
    </listitem>
    
    <listitem>
      <para>When used in 
        <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink>,
        <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>,
        <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink>,
        <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink>,
        <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>,
        <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>,
        <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>,
        or <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink> elements:</para>
      <itemizedlist>
        <listitem><para>The inline elements enclosed by a <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> element <glossterm>must</glossterm> use the duplicate <code>id</code> values
      of their corresponding inline elements enclosed within the sibling <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> element if and only if those corresponding elements exist.</para></listitem>
        <listitem><para>Except for the above exception, the value <glossterm>must</glossterm> be unique among all of the above within the
          enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> 
          element.</para></listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <note><para>All of the above defined uniqueness scopes ignore <firstterm>Module</firstterm> and
        <firstterm>Extension</firstterm> data. It would be impossible to impose those uniqueness
      requirements onto <firstterm>Module</firstterm> or <firstterm>Extension</firstterm> data. As
        <firstterm>Core</firstterm> only <firstterm>Modifiers</firstterm> could inadvertently cause
      conflicts with <firstterm>Modules</firstterm> or <firstterm>Extensions</firstterm> based data
      they cannot access. <firstterm>Modules</firstterm> and <firstterm>Extensions</firstterm>
      reusing <firstterm>Core</firstterm> need to specify their own uniqueness scopes for the <link linkend="id">xlf:id</link>. In general, <firstterm>Modules</firstterm> and
        <firstterm>Extensions</firstterm> are advised to mimic the <firstterm>Core</firstterm>
      uniqueness requirement within their specific wrapper elements enclosing the reused
        <firstterm>Core</firstterm> elements or attributes, yet <firstterm>Module</firstterm> or
        <firstterm>Extensions</firstterm> are free to set wider uniqueness scopes if it makes
      business sense.</para></note>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>,
    <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink>,
    <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>,
    <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink>,
    <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink>, <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>, <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>, <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink>, <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> and <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink>.</para>
</section>

    <section id="isolated">
  <title>isolated</title>

  <para>Orphan code flag - indicates if the start or end marker of a spanning inline code is not in
    the same <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> as its corresponding end or start code.</para>

  <para><emphasis>Value description:</emphasis>
    <code>yes</code> if this start or end code is not in the same <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>
    as its corresponding end or start code, <code>no</code> if both codes are in the same <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>.</para>

  <para><emphasis>Default value:</emphasis> <code>no</code>.</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">

&lt;file id="f2" xmlns:abc="urn:abc">
  &lt;unit id="1">
    &lt;mtc:matches>
      &lt;mtc:match id="tc01" ref="seg2">
        &lt;source>&lt;sc id="1" isolated="yes"/>Warning:&lt;/source>
        &lt;target>&lt;sc id="1" isolated="yes"/>Attention :&lt;/target>
      &lt;/mtc:match>
    &lt;/mtc:matches>
    &lt;segment id="seg2">
      &lt;source>&lt;pc id="1">Warning: File not found.&lt;/pc>&lt;/source>
    &lt;/segment>
  &lt;/unit>
&lt;/file>
</programlisting>

  <para>In the example above the <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> elements have their <olink targetdoc="isolated.xml" targetptr="isolated"><code>isolated</code></olink>
  attribute set to <code>yes</code> because they do not have their
  corresponding <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements.</para>
</section>

    <section id="name">
    <title>name</title>

    <para>Resource name - the original identifier of the resource corresponding to the
            <firstterm>Extracted</firstterm>
        <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> or <olink targetdoc="../elements/structural/group.xml" targetptr="unit"><code>&lt;group></code></olink>.</para>
    <para>For example: the key in the key/value
        pair in a Java properties file, the ID of a string in a Windows string table, the index
        value of an entry in a database table, etc.</para>

    <para><emphasis>Value description:</emphasis> Text.</para>

    <para><emphasis>Default value:</emphasis> undefined.</para>

    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> and <olink targetdoc="../elements/structural/group.xml" targetptr="unit"><code>&lt;group></code></olink>.</para>

</section>


    <section id="order">
    <title>order</title>
    
    <para>target order - indicates the order, in which to compose the target content parts.</para>
    
    <para><emphasis>Value description:</emphasis> A positive integer.</para>
        
    <para><emphasis>Default value:</emphasis> implicit, see below</para>
    <para>When order is not explicitly set, the <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink>
        <link linkend="order"><code>order</code></link> corresponds to its sibling <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink>, i.e. it is not being moved anywhere when
        composing target content of the enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> and the implicit <link linkend="order"><code>order</code></link> value is of that position within the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>. </para>
    
    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink>.</para>
<itemizedlist>
    <title>Constraints</title>
    <listitem><para>The value of the <link linkend="order"><code>order</code></link> attribute <glossterm>must</glossterm> be unique
        within the enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para></listitem>
        <listitem>
            <para>The value of each of the <link linkend="order"><code>order</code></link> attributes used within a 
                <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element <glossterm>must not</glossterm> be higher than N,
                where N is the number of all current <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink>
                and <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> children of the said
                <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>
        </listitem>
</itemizedlist>    
<para>See the <olink targetdoc="../segmentation/segmentation.xml" targetptr="segorder">Segments
            Order</olink> section for the normative usage description.</para>
</section>

    <section id="original">
    <title>original</title>
    
    <para>Original file - a pointer to the location of the original document from which the content
        of the enclosing <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> element is extracted.</para>
    
    <para><emphasis>Value description:</emphasis> IRI.</para>
        
    <para><emphasis>Default value:</emphasis> undefined</para>
    
    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>.</para>
    
</section>

    <section id="priority">
    <title>priority</title>

    <para>Priority - provides a way to prioritize notes.</para>

    <para><emphasis>Value description:</emphasis> Integer 1-10.</para>

    <para><emphasis>Default value:</emphasis> <code>1</code></para>

    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink>.</para>

    <note><para>Please note that 1 is the highest priority that can be interpreted as an alert,
        e.g. an <olink targetdoc="../xliff22.xml" targetptr="ITS20">[ITS]</olink> <ulink url="http://www.w3.org/TR/its20/#locNote-datacat">Localization Note</ulink> of the type alert.
        The best practice is to use only one alert per an annotated element, and the full scale of 2-10 can be used for prioritizing notes of lesser importance than the alert.</para></note>
</section>

    <section id="ref">
  <title>ref</title>

  <para>Reference - holds a reference for the associated annotation.</para>

  <para><emphasis>Value description:</emphasis> A value of the <olink targetdoc="../xliff22.xml" targetptr="XMLSchema2">[XML Schema Datatypes]</olink> type
  anyURI. The semantics of the value depends on the type of annotation:</para>

  <itemizedlist>
    <listitem>
      <para>When used in a <olink targetdoc="../inline/inline.xml" targetptr="termAnnotation">term
          annotation</olink>, the URI value is referring to a resource providing information about
        the term.</para>
    </listitem>

    <listitem>
      <para>When used in a <olink targetdoc="../inline/inline.xml" targetptr="matchAnnotation">translation candidates annotation</olink>, the URI value is referring
        to an external resource providing information about the translation candidate.</para>
    </listitem>

    <listitem>
      <para>When used in a <olink targetdoc="../inline/inline.xml" targetptr="commentAnnotation">comment annotation</olink>, the value is referring to a <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink> element within the same enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>.</para>
    </listitem>

    <listitem>
      <para>When used in a <olink targetdoc="../inline/inline.xml" targetptr="customAnnotation">custom annotation</olink>, the value is
      defined by each custom annotation.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> or <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>The &lt;pc id="1">ref&lt;/pc> attribute of a term
        annotation holds a &lt;mrk id="m1" type="term"
        ref="http://dbpedia.org/page/Uniform_Resource_Identifier">
        URI&lt;/mrk> pointing to more information about the given
        term.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

</section>



    

    <section id="srcdir">
  <title>srcDir</title>

  <para>Source directionality - indicates the directionality of the source content.</para>

  <para><emphasis>Value description:</emphasis>
    <code>ltr</code> (Left-To-Right), <code>rtl</code> (Right-To-Left), , or <code>auto</code>
    (determined heuristically, based on the first strong directional character in scope, see <olink targetdoc="xliff20.xml" targetptr="uax9">[UAX #9]</olink>).</para>

  <para><emphasis>Default value:</emphasis> default values for this attribute depend on the element
    in which it is used:</para>

  <itemizedlist>
    <listitem>
      <para>When used in <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>:</para>

      <para>The value <code>auto</code>.</para>
    </listitem>

    <listitem>
      <para>When used in any other element:</para>

      <para>The value of the <olink targetdoc="srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink> attribute of its parent element.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Used in:</emphasis>
    <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>, <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink>, and <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>. </para>
</section>

    <section id="srcLang">
    <title>srcLang</title>
    
    <para>Source language - the code of the language, in which the text to be <firstterm>Translated</firstterm> is
        expressed.</para>
    
    <para><emphasis>Value description:</emphasis> A language code as described in <olink targetdoc="../xliff22.xml" targetptr="bcp47">[BCP 47]</olink>.</para>
    
    <para><emphasis>Default value:</emphasis> undefined</para>
    
    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink>.</para>
</section>

    <section id="startref">
  <title>startRef</title>

  <para>Start code or marker reference - The <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> of the <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> element or the <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink> element a given <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> element
    or <olink targetdoc="../elements/inline/em.xml" targetptr="em"><code>&lt;em></code></olink>
    element corresponds.</para>

  <para><emphasis>Value description:</emphasis> NMTOKEN.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>, <olink targetdoc="../elements/inline/em.xml" targetptr="em"><code>&lt;em></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>&lt;sc id="1"/>Bold, &lt;sc id="2"/>both
        &lt;ec startRef="1"/>, italics&lt;ec startRef="2"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>
</section>
    <section id="state">
  <title>state</title>

  <para>State - indicates the state of the translation of a segment.</para>

    <para><emphasis>Value description:</emphasis> The value <glossterm>must</glossterm> be set to one of the following values:</para>

  <simplelist type="vert">
   <member><code>initial</code> - indicates the segment is in its initial state.</member>
   <member><code>translated</code> - indicates the segment has been translated.</member>
   <member><code>reviewed</code> - indicates the segment has been reviewed.</member>
   <member><code>final</code> - indicates the segment is finalized and ready to be used.</member>
  </simplelist>
  <para>The 4 defined states constitute a simple linear state machine that advances in the above
        given order. No particular workflow or process is prescribed, except that the three states
        more advanced than the default <code>initial</code> assume the existence of a
            <firstterm>Translation</firstterm> within the segment. One can further specify the state
        of the <firstterm>Translation</firstterm> using the <olink targetdoc="substate.xml" targetptr="substate"><code>subState</code></olink> attribute.</para>

    <para><emphasis>Default value:</emphasis> <code>initial</code></para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink></para>

    
    <itemizedlist>
        <title>Processing Requirements</title>
        <listitem>
            <para><firstterm>Writers</firstterm>
                <glossterm>must not</glossterm> set the <link linkend="state"><code>state</code></link> attribute values to other than the default
                    <code>initial</code> if and only if the <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> element where the attribute is set
                doesn't have the <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> child. </para>
        </listitem>


        <listitem>
            <para><firstterm>Writers</firstterm> updating the attribute <link linkend="state"><code>state</code></link> <glossterm>must</glossterm> also update or delete
                <olink targetdoc="subState.xml" targetptr="substate"><code>subState</code></olink>.</para>
        </listitem>
    </itemizedlist>
    
    <note><para><link linkend="state"><code>state</code></link> is an <glossterm>optional</glossterm>
            attribute of segments with a default value and segmentation can change as the XLIFF
            roundtrip progresses, hence implementers don't have to make explicit use of the
            attribute. However setting of the attribute is advantageous if a workflow needs to make
            use of Advanced Validation methods. For instance missing non-removable codes will only
            be reported as an Error by the <olink targetdoc="../xliff22.xml" targetptr="CoreSchematron">XLIFF Core Schematron Schema</olink> when the <link linkend="state"><code>state</code></link> is <code>final</code>.</para></note>
</section>


    <section id="subflows">
  <title>subFlows</title>

  <para>Sub-flows list - holds a list of <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> attributes corresponding to the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>
    elements that contain the sub-flows for a given inline code.</para>

  <para><emphasis>Value description:</emphasis> A list of NMTOKEN values
  separated by spaces. Each value corresponds to the <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> attribute of a <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <para>See the example in the <olink targetdoc="../inline/inline.xml" targetptr="subflowsdesc">Sub-Flows section</olink>.</para>
</section>

    <section id="subflowsend">
  <title>subFlowsEnd</title>

  <para>Sub-flows list - holds a list of <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> attributes corresponding to the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>
    elements that contain the sub-flows for the end marker of a given inline code.</para>

  <para><emphasis>Value description:</emphasis> A list of NMTOKEN values
  separated by spaces. Each value corresponds to the <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> attribute of a <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <para>See the example in the <olink targetdoc="../inline/inline.xml" targetptr="subflowsdesc">Sub-Flows section</olink>.</para>
</section>

    <section id="subflowsstart">
  <title>subFlowsStart</title>

  <para>Sub-flows list - holds a list of <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> attributes corresponding to the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>
    elements that contain the sub-flows for the start marker of a given inline code.</para>

  <para><emphasis>Value description:</emphasis> A list of NMTOKEN values
  separated by spaces. Each value corresponds to the <olink targetdoc="id.xml" targetptr="id"><code>id</code></olink> attribute of a <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>.</para>

  <para><emphasis>Example:</emphasis></para>

  <para>See the example in the <olink targetdoc="../inline/inline.xml" targetptr="subflowsdesc">Sub-Flows section</olink>.</para>
</section>

    <section id="substate">
  <title>subState</title>

  <para>subState - indicates a user-defined status for the <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> element.</para>

  <para><emphasis>Value description:</emphasis></para>

  <para>The value is composed of a prefix and a sub-value separated by a
  character <code>:</code> (U+003A).</para>

  <para>The prefix is a string uniquely identifying a collection of values for
  a specific authority. The sub-value is any string value defined by an
  authority.</para>

  <para>The prefix <code>xlf</code> is reserved for this specification.</para>

  <para>Other prefixes and sub-values <glossterm>may</glossterm> be defined by the users.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink></para>

  <itemizedlist>
    <title>Constraints</title>

    <listitem>
      <para>If the attribute <olink targetdoc="subState.xml" targetptr="substate"><code>subState</code></olink> is used, the attribute <olink targetdoc="state.xml" targetptr="state"><code>state</code></olink>
        <glossterm>must</glossterm> be explicitly set.</para>
    </listitem>
    </itemizedlist>
    <itemizedlist>
      <title>Processing Requirements</title>
      
  
    <listitem>
      <para><firstterm>Writers</firstterm> updating the attribute <olink targetdoc="state.xml" targetptr="state"><code>state</code></olink> <glossterm>must</glossterm> also update or delete <link linkend="substate"><code>subState</code></link>.</para>
      </listitem>
  </itemizedlist>
</section>
    <section id="subtype">
  <title>subType</title>

  <para>subType - indicates the secondary level type of an inline code.</para>

  <para><emphasis>Value description:</emphasis></para>

  <para>The value is composed of a prefix and a sub-value separated by a
  character <code>:</code> (U+003A).</para>

  <para>The prefix is a string uniquely identifying a collection of sub-values for a specific authority.
    The sub-value is any string value defined by the authority.</para>

  <para>The prefix <code>xlf</code> is reserved for this specification, and
  the following sub-values are defined:</para>

  <simplelist type="vert">
    <member><code>xlf:lb</code> - Line break</member>

    <member><code>xlf:pb</code> - Page break</member>

    <member><code>xlf:b</code> - Bold</member>

    <member><code>xlf:i</code> - Italics</member>

    <member><code>xlf:u</code> - Underlined</member>

    <member><code>xlf:var</code> - Variable</member>
  </simplelist>

  <para>Other prefixes and sub-values <glossterm>may</glossterm> be defined by the users.</para>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> and <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph></code></olink></para>

  <itemizedlist>
    <title>Constraints</title>

    <listitem>
      <para>If the attribute <olink targetdoc="subtype.xml" targetptr="subtype"><code>subType</code></olink> is used, the attribute <olink targetdoc="type.xml" targetptr="type"><code>type</code></olink>
        <glossterm>must</glossterm> be specified as well.</para>
    </listitem>
    <listitem>
      <para>The reserved <code>xlf:</code> prefixed values map onto the <olink targetdoc="type.xml" targetptr="type"><code>type</code></olink> attribute values as follows:</para>
      <simplelist type="vert">
        <member> For <code>xlf:b</code>, <code>xlf:i</code>, <code>xlf:u</code>,
          <code>xlf:lb</code>, and <code>xlf:pb</code>, the <glossterm>required</glossterm> value of
          the <olink targetdoc="type.xml" targetptr="type"><code>type</code></olink> attribute is
            <code>fmt</code>.</member>
        <member> For <code>xlf:var</code>, the <glossterm>required</glossterm> value of the <olink targetdoc="type.xml" targetptr="type"><code>type</code></olink> attribute is
            <code>ui</code>.</member>
      </simplelist>
    </listitem>
  </itemizedlist>
  <itemizedlist>
    <title>Processing Requirements</title>
    
    
    <listitem>
      <para><firstterm>Modifiers</firstterm> updating the attribute <olink targetdoc="type.xml" targetptr="type"><code>type</code></olink>
        <glossterm>must</glossterm> also update or delete <link linkend="subtype"><code>subType</code></link>.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="trgLang">
    <title>trgLang</title>
    
    <para>Target language - the code of the language, in which the <firstterm>Translated</firstterm> text is
        expressed.</para>
    
    <para><emphasis>Value description:</emphasis> A language code as described in <olink targetdoc="../xliff22.xml" targetptr="bcp47">[BCP 47]</olink>.</para>
    
    <para><emphasis>Default value:</emphasis> undefined</para>
    
    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink>.</para>
</section>

    <section id="translate">
    <title>translate</title>

    <para>Translate - indicates whether or not the source text in the scope of the given <code>translate</code> flag is intended
        for <firstterm>Translation</firstterm>.</para>

    <para><emphasis>Value description:</emphasis> <code>yes</code> or <code>no</code>.</para>

    <para><emphasis>Default value:</emphasis> default values for this attribute
        depend on the element in which it is used:</para>

    <itemizedlist>
        <listitem>
            <para>When used in <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>:</para>

            <para>The value <code>yes</code>.</para>
        </listitem>
        <listitem>
            <para>When used in any other admissible structural element (<olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink> or <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>):</para>
            <para>The value of the <olink targetdoc="translate.xml" targetptr="translate"><code>translate</code></olink> attribute of its parent element.
            </para>

        </listitem>
        <listitem>
            <para>When used in annotations markers
                <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> or
                <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink>:</para>


            <para>The value of the <olink targetdoc="translate.xml" targetptr="translate"><code>translate</code></olink> attribute of the innermost <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> or <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element, in which the marker in question is located.
            </para>

        </listitem>

        
    </itemizedlist>


    <para><emphasis>Used in:</emphasis>
        <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>
        <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink>
        <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>,
        <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> and
        <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink>.
    </para>

</section>

    <section id="trgdir">
  <title>trgDir</title>

  <para>Target directionality - indicates the directionality of the target content.</para>

  <para><emphasis>Value description:</emphasis>
    <code>ltr</code> (Left-To-Right), <code>rtl</code> (Right-To-Left), or <code>auto</code>
    (determined heuristically, based on the first strong directional character in scope, see <olink targetdoc="xliff20.xml" targetptr="uax9">[UAX #9]</olink>).</para>

  <para><emphasis>Default value:</emphasis> default values for this attribute
  depend on the element in which it is used:</para>

  <itemizedlist>
    <listitem>
      <para>When used in <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>:</para>

      <para>The value <code>auto</code>.</para>
    </listitem>

    <listitem>
      <para>When used in any other element:</para>

      <para>The value of the <olink targetdoc="trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink> attribute of its parent element.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Used in:</emphasis>
    <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>, <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink>, and <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>. </para>
</section>

    <section id="type">
  <title>type</title>
  <para>Type - indicates the type of an element.</para>
  <para><emphasis>Value description:</emphasis> allowed values for this attribute depend on the
    element in which it is used.</para>
  <itemizedlist>
    <listitem>
      <para>When used in <olink targetdoc="../elements/inline/pc.xml" targetptr="pc">
          <code>&lt;pc></code>
        </olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc">
          <code>&lt;sc></code>
        </olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec">
          <code>&lt;ec></code>
        </olink> or <olink targetdoc="../elements/inline/ph.xml" targetptr="ph">
          <code>&lt;ph></code>
        </olink>:</para>
      <para>The value  <glossterm>must</glossterm> be set to one of the following values:</para>
      <simplelist type="vert">
        <member><code>fmt</code> - Formatting (e.g. a &lt;b> element in HTML)</member>
        <member><code>ui</code> - User interface element</member>
        <member><code>quote</code> - Inline quotation (as opposed to a block citation)</member>
        <member><code>link</code> - Link (e.g. an &lt;a> element in HTML)</member>
        <member><code>image</code> - Image or graphic</member>
        <member><code>other</code> - Type of element not covered by any of the other top-level types.</member>
      </simplelist>
      <para><emphasis>Example:</emphasis>
        <programlisting format="linespecific">
&lt;segment>
  &lt;source xml:lang="cs">&lt;pc type="quote"><foreignphrase lang="cs">Blázen,
      chce dobýt točnu v takovém počasí&lt;/pc>, dodal slovy svého
      oblíbeného imaginárního autora.</foreignphrase>&lt;/source>
  &lt;target xml:lang="en">&lt;pc type="quote">Madman, he wants to conquer the
      pole in this weather&lt;/pc>, offered he the words of his
      favourite imaginary playwright.&lt;/target>
&lt;/segment>
</programlisting>
      </para>
      <para>One can further specify the type of a code using the <olink targetdoc="subtype.xml" targetptr="subtype">
          <code>subType</code>
        </olink>
      attribute.</para>
      <para><emphasis>Default value:</emphasis> Undefined</para>
    </listitem>
    <listitem>
      <para>When used in <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk">
          <code>&lt;mrk></code>
        </olink> or <olink targetdoc="../elements/inline/sm.xml" targetptr="sm">
          <code>&lt;sm></code>
        </olink>:</para>
      <para>One of the following values: <code>generic</code>, <code>comment</code>,
          <code>term</code>, or a user-defined value that is composed of a prefix and a sub-value
        separated by a character <code>:</code> (U+003A).</para>
      <para>The prefix is a string uniquely identifying a collection of sub-values for a specific authority.
        The sub-value is any string value defined by the authority.</para>
      <para><emphasis>Default value:</emphasis> <code>generic</code></para>
    </listitem>
    <listitem>
      <para>When used in <olink targetdoc="../elements/structural/group.xml" targetptr="group">
          <code>&lt;group></code>
        </olink> or <olink targetdoc="../elements/structural/unit.xml" targetptr="unit">
          <code>&lt;unit></code>
        </olink>:</para>
      <para>A value that is composed of a prefix and a sub-value
        separated by a character <code>:</code> (U+003A).</para>
      <para>The prefix is a string uniquely identifying a collection of sub-values for a specific authority.
        The sub-value is any string value defined by the authority. The prefix <code>xlf</code> is reserved.</para>
      <para><emphasis>Default value:</emphasis> Undefined</para>
    </listitem>
  </itemizedlist>
  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/group.xml" targetptr="group">
      <code>&lt;group></code>
    </olink>, <olink targetdoc="../elements/structural/unit.xml" targetptr="unit">
      <code>&lt;unit></code>
    </olink>, <olink targetdoc="../elements/inline/pc.xml" targetptr="pc">
      <code>&lt;pc></code>
    </olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc">
      <code>&lt;sc></code>
    </olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec">
      <code>&lt;ec></code>
    </olink>, <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk">
      <code>&lt;mrk></code>
    </olink>,  <olink targetdoc="../elements/inline/ph.xml" targetptr="ph">
      <code>&lt;ph></code>
    </olink> and <olink targetdoc="../elements/inline/sm.xml" targetptr="sm">
      <code>&lt;sm></code>
    </olink>.</para>
  <itemizedlist>
    <title>Processing Requirements</title>
    <listitem>
      <para><firstterm>Modifiers</firstterm> updating the attribute <link linkend="type">
          <code>type</code>
        </link> on <olink targetdoc="../elements/inline/pc.xml" targetptr="pc">
          <code>&lt;pc></code>
        </olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc">
          <code>&lt;sc></code>
        </olink>, <olink targetdoc="../elements/inline/ec.xml" targetptr="ec">
          <code>&lt;ec></code>
        </olink>, or
          <olink targetdoc="../elements/inline/ph.xml" targetptr="ph">
          <code>&lt;ph></code>
        </olink>
        <glossterm>must</glossterm> also update or delete <olink targetdoc="subType.xml" targetptr="subtype">
          <code>subType</code>
        </olink>.</para>
    </listitem>
  </itemizedlist>
</section>

    <section id="value">
  <title>value</title>

  <para>Value - holds a value for the associated annotation.</para>

  <para><emphasis>Value description:</emphasis> Text.</para>

  <itemizedlist>
    <listitem>
      <para>When used in a <olink targetdoc="../inline/inline.xml" targetptr="termAnnotation">term annotation</olink>, the value is a
      definition of the term.</para>
    </listitem>

    <listitem>
      <para>When used in a <olink targetdoc="../inline/inline.xml" targetptr="commentAnnotation">comment annotation</olink>, the value is
      the text of the comment.</para>
    </listitem>

    <listitem>
      <para>When used in a <olink targetdoc="../inline/inline.xml" targetptr="customAnnotation">custom annotation</olink>, the value is
      defined by each custom annotation.</para>
    </listitem>
  </itemizedlist>

  <para><emphasis>Default value:</emphasis> undefined</para>

  <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> and <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink>.</para>
</section>

    <section id="version">
    <title>version</title>

    <para>XLIFF Version - is used to specify the Version of the <firstterm>XLIFF Document</firstterm>. This corresponds to
        the Version number of the XLIFF specification that the <firstterm>XLIFF Document</firstterm> adheres to.</para>

    <para><emphasis>Value description:</emphasis> Text.</para>

    <para><emphasis>Default value:</emphasis> undefined</para>

    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink>.</para>

</section>
  </section>

  <section>
    <title>XML namespace</title>

    <para>The attributes from XML namespace used in XLIFF 2.0 are: <olink targetdoc="xml_lang.xml" targetptr="xml_lang">xml:lang</olink> and <olink targetdoc="xml_space.xml" targetptr="xml_space">xml:space</olink>.</para>

    <section id="xml_lang">
    <title>xml:lang</title>
    
    <para>Language - the xml:lang attribute specifies the language variant of the text of a given
        element. For example: <code>xml:lang="fr-FR"</code> indicates the French language as spoken
        in France.</para>
    
    <para><emphasis>Value description:</emphasis> A language code as described in <olink targetdoc="../xliff22.xml" targetptr="bcp47">[BCP 47]</olink>.</para>
    
    <para><emphasis>Default value:</emphasis> default values for this attribute
        depend on the element in which it is used:</para>
    
    <itemizedlist>
        <listitem>
            <para>When used in a <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> element:</para>
            
            <para>The value set in the <olink targetdoc="srcLang" targetptr="srcLang"><code>srcLang</code></olink> attribute of the enclosing
                <olink targetdoc="../elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink> element.</para>
        </listitem>
        <listitem>
            <para>When used in a <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> element:</para>
            
            <para>The value set in the <olink targetdoc="trgLang" targetptr="trgLang"><code>trgLang</code></olink> attribute of the enclosing
                <olink targetdoc="../elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink> element.</para>
        </listitem>        
        <listitem>
          <para>When used in any other element:</para>
          <para>The value of the <code>xml:lang</code> attribute of its parent element.
          </para>   
        </listitem>
      
    </itemizedlist>
    
    <para><emphasis>Used in:</emphasis>
        <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink>, <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> and where extension attributes are allowed.</para>
    
  
</section>

    <section id="xml_space">
    <title>xml:space</title>
    
    <para>White spaces - the xml:space attribute specifies how white spaces (ASCII spaces, tabs and
        line-breaks) are to be treated.</para>
    
    
    <para><emphasis>Value description:</emphasis>
        <code>default</code> or <code>preserve</code>. The value <code>default</code> signals that
        an application's default white-space processing modes are acceptable for this element; the
        value <code>preserve</code> indicates the intent that applications preserve all the white
        space. This declared intent is considered to apply to all elements within the content of the
        element where it is specified, unless overridden with another instance of the xml:space
        attribute. For more information see <ulink url="http://www.w3.org/TR/REC-xml/#sec-white-space">the section on xml:space</ulink> in the <olink targetdoc="../xliff22.xml" targetptr="bib_XML">[XML]</olink> specification. </para>
    
    <para><emphasis>Default value:</emphasis>  default values for this attribute
        depend on the element in which it is used:</para>
    
    <itemizedlist>
        <listitem>
            <para>When used in <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink>:</para>
            
            <para>The value <code>preserve</code>.</para>
        </listitem>
        <listitem>
            <para>When used in <olink targetdoc="../elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink>:</para>
            
            <para>The value <code>default</code>.</para>
        </listitem>
        <listitem>
            <para>When used in any other element:</para>
            <para>The value of the <code>xml:space</code> attribute of its parent element.
            </para>   
        </listitem>
    </itemizedlist>
    
    <para><emphasis>Used in:</emphasis> <olink targetdoc="../elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink>, 
        <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>,
        <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink>,
        <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>,
        <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink>,
        <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink>,
        and <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink>.
    </para>
</section>
  </section>
</section>

    <section>
      <title>CDATA sections</title>

      <para>CDATA sections (<code>&lt;![CDATA[...]]&gt;</code>) are allowed in XLIFF content, but on
        output they <glossterm>may</glossterm> be changed into normal escaped content.</para>

      <para>Note that avoiding CDATA sections is considered a best practice from the
        internationalization viewpoint <link linkend="biblio_xmli18nbp">[XML I18N BP]</link>.</para>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para><firstterm>Agents</firstterm>
            <glossterm>must</glossterm> process CDATA sections.</para>
        </listitem>

        <listitem>
          <para><firstterm>Writers</firstterm>
            <glossterm>may</glossterm> preserve the original CDATA sections.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>XML Comments</title>

      <para>XML comments (<code>&lt;!--...--!></code>) are allowed in XLIFF content, but they are
        ignored in the parsed content.</para>

      <para>For example:</para>

      <programlisting format="linespecific">
&lt;source>Text content &lt;!--IMPORTANT-->that is important&lt;/source>
</programlisting>

      <para>and</para>

      <programlisting format="linespecific">
&lt;source>Text content that is important&lt;/source>
</programlisting>

      <para>are identical after parsing and correspond to the same following parsed content:</para>

      <programlisting format="linespecific">
Text content that is important</programlisting>

      <para>To annotate a section of the content with a comment that is recognized and preserved by
        XLIFF user agents, use the <olink targetdoc="elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink> element, or the <olink targetdoc="inline/inline.xml" targetptr="commentAnnotation"><code>&lt;mrk></code></olink> element.</para>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para><firstterm>Agents</firstterm>
            <glossterm>must</glossterm> ignore XML comments. That is the XLIFF parsed content is the
            same whether or not there is an XML comment in the document.</para>
        </listitem>

        <listitem>
          <para><firstterm>Writers</firstterm>
            <glossterm>may</glossterm> preserve XML comments on output.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>XML Processing Instructions</title>

      <para>XML Processing Instructions <olink targetptr="bib_XML">[XML]</olink> (see specifically
          <ulink url="http://www.w3.org/TR/REC-xml/#sec-pi">http://www.w3.org/TR/REC-xml/#sec-pi</ulink>) are an XML mechanism to "allow documents to
        contain instructions for applications." XML Processing Instructions are allowed in XLIFF
        content but they are ignored in the parsed content in the same sense as XML Comments.</para>
      <itemizedlist>
        <title>Processing Requirements</title>
        <listitem>
          <para><firstterm>Agents</firstterm>
            <glossterm>must not</glossterm> use Processing Instructions as a means to implement a
            feature already specified in <firstterm>XLIFF Core</firstterm> or
              <firstterm>Modules</firstterm>.</para>
        </listitem>
        <listitem>
          <para><firstterm>Writers</firstterm>
            <glossterm>should</glossterm> preserve XML Processing Instructions in an
              <firstterm>XLIFF Document</firstterm>.</para>
        </listitem>
      </itemizedlist>

      <warning>
        <para> Please note that <firstterm>Agents</firstterm> using Processing Instructions to
          implement <firstterm>XLIFF Core</firstterm> or <firstterm>Module</firstterm> features are
          not compliant XLIFF applications disregarding whether they are otherwise conformant.
        </para>
      </warning>
      <warning>
        <para>Although this specification encourages XLIFF <firstterm>Agents</firstterm> to preserve
          XML Processing Instructions, it is not and cannot be, for valid processing reasons, an
          absolute protection and it is for instance highly unlikely that Processing Instructions
          could survive an XLIFF roundtrip at the <olink targetdoc="elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> level or lower. Hence implementers
          are discouraged from using XML Processing Instructions at the <olink targetdoc="elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> and lower levels.</para>
      </warning>

    </section>

    <section id="inline">
  <title>Inline Content</title>

  <para>The XLIFF inline content defines how to encode the content <firstterm>Extracted</firstterm>
  from the original source. The content includes the following types of
  data:</para>

  <itemizedlist>
    <listitem>
      <para><link linkend="text">Text</link> -- Textual content.</para>
    </listitem>

    <listitem>
      <para><link linkend="inlineCodes">Inline codes</link> -- Sequences of
      content that are not linguistic text, such as formatting codes, variable
      placeholders, etc.</para>

      <para>For example: the element <code>&lt;b></code> in HTML, or the
      placeholder <code>{0}</code> in a Java string.</para>
    </listitem>

    <listitem>
      <para><link linkend="annotations">Annotations</link> -- Markers that
      delimit a span of the content and carry or point to information about
      the specified content.</para>

      <para>For example: a flag indicating that a given section of text is not intended for translation, or
        an element indicating that a given expression in the text is a term associated with a
        definition.</para>
    </listitem>
  </itemizedlist>

  <para>There are two elements that contain inline markup in XLIFF: <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> and <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink>.</para>

  <para>In some cases, data directly associated with inline elements <glossterm>may</glossterm> also
    be stored at the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> level in an <olink targetdoc="../elements/structural/originaldata.xml" targetptr="originaldata"><code>&lt;originalData></code></olink> element.</para>

  <section id="text">
    <title>Text</title>

    <para>The XLIFF inline markup does not prescribe how to represent normal
    text, besides that it <glossterm>must</glossterm> be valid XML.</para>

    <section>
      <title>Characters invalid in XML</title>

      <para>Because the content represented in XLIFF can be extracted from
      anywhere, including software resources and other material that can contain
      control characters, XLIFF needs to be able to represent all Unicode code
      points <olink targetdoc="../xliff22.xml" targetptr="Unicode">[Unicode]</olink>.</para>

      <para>However, XML does not have the capability to represent all Unicode 
        code points <olink targetdoc="../xliff22.xml" targetptr="Unicode">[Unicode]</olink>, and does not provide any official mechanism to escape the
      forbidden code points.</para>

      <para>To remedy this, the inline markup provides the <olink targetdoc="../elements/inline/cp.xml" targetptr="cp"><code>&lt;cp></code></olink> element.</para>

      <para>The syntax and semantic of <olink targetdoc="../elements/inline/cp.xml" targetptr="cp"><code>&lt;cp></code></olink> in XLIFF are similar to
      the ones of <code>&lt;cp></code> in the Unicode Locale Data Markup
      Language <olink targetdoc="../xliff22.xml" targetptr="biblio_ldml">[LDML]</olink>.</para>
    </section>
  </section>

  <section id="inlineCodes">
    <title>Inline Codes</title>

    <para>The specification takes into account two types of codes:</para>

    <variablelist>
      <varlistentry id="originalCode">
        <term>Original code</term>

        <listitem>
          <para>An <emphasis>original code</emphasis> is a code that exists in
          the original document being extracted into XLIFF.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="addedCode">
        <term>Added code</term>

        <listitem>
          <para>An <emphasis>added code</emphasis> is a code that does not
          exist in the original document, but has been added to the content at
          some point after extraction.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Any code (original or added) belongs to one of the two following
    categories:</para>

    <variablelist>
      <varlistentry id="standalone">
        <term>Standalone</term>

        <listitem>
          <para>A <emphasis>standalone</emphasis> code is a code that
          corresponds to a single position in the content. An example of such
          code is the <code>&lt;br/></code> element in HTML.</para>
        </listitem>
      </varlistentry>

      <varlistentry id="spanLike">
        <term>Spanning</term>

        <listitem>
          <para>A <emphasis>spanning</emphasis> code is a code that encloses a
          section of the content using a start and an end marker. There are
          two kinds of spanning codes:</para>

          <itemizedlist>
            <listitem>
              <para>Codes that can overlap, that is: they can enclose a
              non-closing or a non-opening spanning code. Such codes do not
              have an XML-like behavior. For example the RTF code
              <code>\b1...\b0</code> is a spanning code that is allowed to
              overlap.</para>
            </listitem>

            <listitem>
              <para>Codes that cannot overlap, that is: they cannot enclose a partial spanning code
                and have an XML-like behavior at the same time. An example of such code is the
                  <code>&lt;emphasis>...&lt;/emphasis></code> element in DocBook.</para>
            </listitem>
          </itemizedlist>

          <para>When the opening or closing marker of a spanning code does not
          have its corresponding closing or opening marker in the same unit,
          it is an <emphasis>orphan code</emphasis>.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <section id="representingcodes">
      <title>Representation of the codes</title>

      <para>Spanning codes present a set of challenges in XLIFF:</para>

      <para>First, because the code format of the original data extracted to
      XLIFF does not need to be XML, spanning codes can overlap.</para>

      <para>For example, in the following RTF content, the format markers are
      in a sequence: start bold, start italics, end bold, end italics. This
      does not translate into a well-formed mapping.</para>

      <programlisting format="linespecific">
Text in \b bold \i and\b0  italics\i0</programlisting>

      <para>Another challenge is the possible effect of segmentation: A
      spanning code can start in one segment and end in another.</para>

      <para>For example, in the following HTML content, the segmentation
      splits the text independently of the codes so the starting and ending
      tags of the <code>&lt;B>...&lt;/B></code> element end up in
      different parts of the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element:</para>

      <programlisting format="linespecific">
[Sentence &lt;B>one. ][Sentence two.][ ][Sentence&lt;/B> three.]</programlisting>

      <para>Finally, a third potential cause of complication is that the start
      or the end markers of a spanning code can become orphans if their
      segment is used outside of its original <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>.</para>

      <para>For example, an entry with bold text can be broken down into two
      segments:</para>

      <programlisting format="linespecific">
Segment 1 = "&lt;b>Warning found: "
Segment 2 = "The file is read-only&lt;/b>"</programlisting>

      <para>And later, one of the segments can be re-used outside its original
      <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>, for instance as a
      translation candidate:</para>

      <programlisting format="linespecific">
New segment = "&lt;b>Warning found - see log&lt;/b>"
Fuzzy match = "&lt;b>Warning found: "</programlisting>

      <para>Because of these use cases, the representation of a spanning code
      cannot always be mapped to a similar spanning element in XLIFF.</para>

      <para>When taking into account these issues, the possible use cases and
      their corresponding XLIFF representations are as follow:</para>

      <table>
        <title>Inline code use cases</title>

        <tgroup cols="2">
          <thead>
            <row>
              <entry>Use Case</entry>

              <entry>Example of Representation</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Standalone code</entry>

              <entry><olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph id='1'/></code></olink></entry>
            </row>

            <row>
              <entry>Well-formed spanning code</entry>

              <entry><olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc
              id='1'>text&lt;/pc></code></olink></entry>
            </row>

            <row>
              <entry>Start marker of spanning code</entry>

              <entry><olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc id='1'/></code></olink></entry>
            </row>

            <row>
              <entry>End marker of spanning code</entry>

              <entry><olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec startRef='1'/></code></olink></entry>
            </row>

            <row>
              <entry>Orphan start marker of spanning code</entry>

              <entry><olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc id='1'
              isolated='yes'/></code></olink></entry>
            </row>

            <row>
              <entry>Orphan end marker of spanning code</entry>

              <entry><olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec id='1'
              isolated='yes'/></code></olink></entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>

    <section id="spanningcodeusage">
      <title>Usage of &lt;pc> and &lt;sc>/&lt;ec></title>

      <para>A spanning code <glossterm>must</glossterm> be represented using a <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> element and a <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> element if the code is
      not well-formed or orphan.</para>

      <para>For example, the following RTF content has two spans of
      formatting:</para>

      <programlisting format="linespecific">
Text in \b bold \i and\b0  italics\i0</programlisting>

      <para>They can only be represented using two pairs of <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> and <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements:</para>

      <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">\b &lt;/data>
    &lt;data id="d2">\i &lt;/data>
    &lt;data id="d3">\b0 &lt;/data>
    &lt;data id="d4">\i0 &lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Text in &lt;sc id="1" dataRef="d1"/>bold &lt;sc id="2"
      dataRef="d2"/> and&lt;ec startRef="1" dataRef="d3"/>
       italics&lt;ec startRef="2" dataRef="d4"/>. &lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

      <para>If the spanning code is well-formed it <glossterm>may</glossterm> be represented using
      either a single <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element or using a pair
      of <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> and a <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements.</para>

      <para>For example, the following RTF content has a single span of
      formatting:</para>

      <programlisting format="linespecific">
Text in \b bold\b0 .</programlisting>

      <para>It can be represented using either notations:</para>

      <programlisting format="linespecific">
Text in &lt;pc id="1" canOverlap="yes" dataRefStart="c1" dataRefEnd="c2">
bold&lt;/pc>.</programlisting>

      <programlisting format="linespecific">
Text in &lt;sc id="1" dataRef="c1"/>bold&lt;ec startRef="1" dataRef="c2"/>.</programlisting>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para>When both the <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> and the <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>/<olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> representations are
            possible, <firstterm>Extractors</firstterm> and <firstterm>Modifiers</firstterm> <glossterm>may</glossterm> use either one as long as all the information
          of the inline code (e.g. original data, sub-flow indicators, etc.)
          are preserved.</para>
        </listitem>

        <listitem>
          <para>When converting representation between a pair of <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> and <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements and a <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element or
            vice-versa, <firstterm>Modifiers</firstterm> <glossterm>must</glossterm> map their attributes as shown in
          the following table:</para>

          <table>
            <title>Mapping between attributes</title>

            <tgroup cols="3">
              <tbody>
                <row>
                  <entry><olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>
                  attributes</entry>

                  <entry><olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>
                  attributes</entry>

                  <entry><olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink>
                  attributes</entry>
                </row>

                <row>
                  <entry>id</entry>

                  <entry>id</entry>

                  <entry>startRef / id (see <olink targetdoc="../elements/inline/ec.xml" targetptr="ecIFF"><code>&lt;ec></code></olink>)</entry>
                </row>

                <row>
                  <entry>type</entry>

                  <entry>type</entry>

                  <entry>type</entry>
                </row>
                
                <row>
                  <entry>subType</entry>
                  
                  <entry>subType</entry>
                  
                  <entry>subType</entry>
                </row>

                <row>
                  <entry>dispStart</entry>

                  <entry>disp</entry>

                  <entry/>
                </row>

                <row>
                  <entry>dispEnd</entry>

                  <entry/>

                  <entry>disp</entry>
                </row>

                <row>
                  <entry>equivStart</entry>

                  <entry>equiv</entry>

                  <entry/>
                </row>

                <row>
                  <entry>equivEnd</entry>

                  <entry/>

                  <entry>equiv</entry>
                </row>

                <row>
                  <entry>subFlowsStart</entry>

                  <entry>subFlows</entry>

                  <entry/>
                </row>

                <row>
                  <entry>subFlowsEnd</entry>

                  <entry/>

                  <entry>subFlows</entry>
                </row>

                <row>
                  <entry>dataRefStart</entry>

                  <entry>dataRef</entry>

                  <entry/>
                </row>

                <row>
                  <entry>dataRefEnd</entry>

                  <entry/>

                  <entry>dataRef</entry>
                </row>

                <row>
                  <entry/>

                  <entry>isolated</entry>

                  <entry>isolated</entry>
                </row>

                <row>
                  <entry>canCopy</entry>

                  <entry>canCopy</entry>

                  <entry>canCopy</entry>
                </row>

                <row>
                  <entry>canDelete</entry>

                  <entry>canDelete</entry>

                  <entry>canDelete</entry>
                </row>

                <row>
                  <entry>canReorder</entry>

                  <entry>canReorder</entry>

                  <entry>canReorder</entry>
                </row>

                <row>
                  <entry>copyOf</entry>

                  <entry>copyOf</entry>

                  <entry>copyOf</entry>
                </row>

                <row>
                  <entry>canOverlap</entry>

                  <entry>canOverlap</entry>

                  <entry>canOverlap</entry>
                </row>

                <row>
                  <entry>dir</entry>

                  <entry>dir</entry>

                  <entry>dir</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </listitem>

        <listitem>
          <para><firstterm>Agents</firstterm> <glossterm>must</glossterm> be able to handle any of the above two types of inline code
          representation.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Storage of the original data</title>

      <para>Most of the time, inline codes correspond to an original construct
      in the format from which the content was extracted. This is the
      <emphasis>original data</emphasis>.</para>

      <para>XLIFF tries to abstract and normalize as much as possible the
      extracted content because this allows a better re-use of the material
      across projects. Some tools require access to the original data in order
      to create the translated document back into its original format. Others
      do not.</para>

      <section>
        <title>No storage of the original data</title>

        <para>In this option, the original data of the inline code is not
        preserved inside the XLIFF document.</para>

        <para>The tool that created the initial XLIFF document is responsible
        for providing a way to re-create the original format properly when
        merging back the content.</para>

        <para>For example, for the following HTML content:</para>

        <programlisting format="linespecific">
This &lt;B>naked mole rat&lt;/B> is &lt;B>pretty ugly&lt;/B>.</programlisting>

        <para>one possible XLIFF representation is the following:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>This &lt;pc id="1">naked mole rat&lt;/pc> is 
        &lt;pc id="2">pretty ugly&lt;/pc>.&lt;/source>
    &lt;target>Cet &lt;pc id="1">hétérocéphale&lt;/pc> est 
        &lt;pc id="2">plutôt laid&lt;/pc>.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>
      </section>

      <section>
        <title>Storage of the original data</title>

        <para>In this option, the original data of the inline code is stored
        in a structure that resides outside the content (i.e. outside <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> or <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink>) but still
        inside the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>

        <para>The structure is an element <olink targetdoc="../elements/structural/originaldata.xml" targetptr="originaldata"><code>&lt;originalData></code></olink>
        that contains a list of <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> entries uniquely
        identified within the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> by an <olink targetdoc="../attributes/id.xml" targetptr="id"><code>id</code></olink> attribute. In the content, each
        inline code using this mechanism includes a <olink targetdoc="../attributes/dataref.xml" targetptr="dataref"><code>dataRef</code></olink> attribute that points to a
        <code><olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink></code> element
        where its corresponding original data is stored.</para>

        <para>For example, for the following HTML content:</para>

        <programlisting format="linespecific">
This &lt;B>naked mole rat&lt;/B> is &lt;B>pretty ugly&lt;/B>.</programlisting>

        <para>The following XLIFF representation stores the original
        data:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;B>&lt;/data>
    &lt;data id="d2">&amp;lt;/B>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>This &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2"> naked
        mole rat&lt;/pc> is &lt;pc id="2" dataRefStart="d1"
        dataRefEnd="d2"> pretty ugly&lt;/pc>.&lt;/source>
    &lt;target>Cet &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        hétérocéphale&lt;/pc> est &lt;pc id="2" dataRefStart="d1"
        dataRefEnd="d2"> plutôt laid&lt;/pc>.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <note>
          <para>This mechanism allows to re-use identical original data by
          pointing to the same <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> element.</para>
        </note>
      </section>
    </section>

    <section id="addingcodes">
      <title>Adding Codes</title>

      <para>When processing content, there are possible cases when new inline
      codes need to be added.</para>

      <para>For example, in the following HTML help content, the text has the
      name of a button in bold:</para>

      <programlisting format="linespecific">
Press the &lt;b>Emergency Stop&lt;/b> button
to interrupt the count-down sequence.</programlisting>

      <para>In the translated version, the original label needs to remain in
      English because the user interface, unlike the help, is not translated.
      However, for convenience, a translation is also provided and emphasized
      using another style. That new formatting needs to be added:</para>

      <programlisting format="linespecific">
Appuyez sur le bouton &lt;b>Emergency Stop&lt;/b> (&lt;i>Arrêt d'urgence&lt;/i>)
pour interrompre le compte à rebours.</programlisting>

      <para>Having to split a single formatted span of
        text into several separate parts during translation, can serve as another example. For instance, the
      following sentence in Swedish uses bold on the names of two
      animals:</para>

      <programlisting format="linespecific">
Äter &lt;b>katter möss&lt;/b>?</programlisting>

      <para>But the English translation separates the two names and therefore
      needs to duplicate the bold codes.</para>

      <programlisting format="linespecific">
Do &lt;b>cats&lt;/b> eat &lt;b>mice&lt;/b>?</programlisting>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> add inline codes.</para>
        </listitem>

        <listitem>
          <para>The <olink targetdoc="../attributes/id.xml" targetptr="id"><code>id</code></olink> value of the added code <glossterm>must</glossterm>
          be different from all <olink targetdoc="../attributes/id.xml" targetptr="id"><code>id</code></olink> values in both source and
          target content of the unit where the new code is added.</para>
        </listitem>

        <listitem>
          <para><firstterm>Mergers</firstterm> <glossterm>may</glossterm> ignore added inline codes when <firstterm>Merging</firstterm>
          the <firstterm>Translated</firstterm> content back into the original format.</para>
        </listitem>
      </itemizedlist>

      <para>There are several ways to add codes:</para>

      <section id="duplicatingexistingcode">
        <title>Duplicating an existing code</title>

        <para>One way to create a new code is to duplicate an existing one
        (called the <emphasis>base code</emphasis>).</para>

        <para>If the base code is associated with some original data: the new code simply uses the same
          data.</para>

        <para>For example, the translation in the following unit, the second
        inline code is a duplicate of the first one:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;b>&lt;/data>
    &lt;data id="d2">&amp;lt;/b>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Äter &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">katter
        möss&lt;/pc>?&lt;/source>
    &lt;target>Do &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        cats&lt;/pc> eat &lt;pc id="2" dataRefStart="d1"
        dataRefEnd="d2">mice&lt;/pc>?&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <para>If the base code has no associated data, the new code <glossterm>must</glossterm> use
        the <olink targetdoc="../elements/inline/copyof.xml" targetptr="copyof"><code>copyOf</code></olink> attribute to indicate
        the <code>id</code> of the base code. This allows the merging tool to
        know what original data to re-use.</para>

        <para>For example, the translation in the following unit, the second
        inline code is a duplicate of the first one:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Esznek &lt;pc id="1">a magyarok svéd húsgombócot
        &lt;/pc>?&lt;/source>
    &lt;target>Do &lt;pc id="1">Hungarians&lt;/pc> eat &lt;pc id="2"
        copyOf="1">Swedish meatballs&lt;/pc>?&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <itemizedlist>
          <title>Processing Requirements</title>

          <listitem>
            <para><firstterm>Modifiers</firstterm> <glossterm>must not</glossterm> clone a code that has its <olink targetdoc="../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink> attribute is set
            to <code>no</code>.</para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../attributes/copyof.xml" targetptr="copyof"><code>copyOf</code></olink> attribute <glossterm>must</glossterm> be
            used when, and only when, the base code has no associated original
            data.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section>
        <title>Creating a brand-new code</title>

        <para>Another way to add a code is to create it from scratch. For
        example, this can happen when the translated text requires
        additional formatting.</para>

        <para>For example, in the following unit, the UI text needs to stay in
        English, and is also translated into French as a hint for the French user.
        The French translation for the UI text is formatted in italics:</para>

        <para><programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;b>&lt;/data>
    &lt;data id="d2">&amp;lt;/b>&lt;/data>
    &lt;data id="n1">&amp;lt;i>&lt;/data>
    &lt;data id="n2">&amp;lt;/i>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Press the &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Emergency Stop&lt;/pc> button to interrupt the count-down
        sequence. &lt;/source>
    &lt;target>Appuyez sur le bouton &lt;pc id="1" dataRefStart="d1"
        dataRefEnd="d2">Emergency Stop&lt;/pc> (&lt;pc id="2"
        dataRefStart="n1" dataRefEnd="n2">Arrêt d'urgence
        &lt;/pc>) pour interrompre le compte à rebours. &lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting></para>
      </section>

      <section>
        <title>Converting text into a code</title>

        <para>Another way to add a code is to convert part of the extracted
        text into code. In some cases the inline code can be created after
        extraction, using part of the text content. This can be done, for
        instance, to get better matches from an existing TM, or better
        candidates from an MT system.</para>

        <para>For example, it can happen that a tool extracting a Java properties file to XLIFF
        is not sophisticated enough to treat HTML or XML snippets inside
        the extracted text as inline code:</para>

        <programlisting format="linespecific">
# text property for the widget 'next'
nextText: Click &lt;ui>Next&lt;/ui></programlisting>

        <para>Resulting XLIFF content:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Click &amp;lt;ui>Next&amp;lt;/ui>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <para>But another tool, later in the process, can be used to process
        the initial XLIFF document and detect additional inline codes. For
        instance here the XML elements such as <code>&lt;ui></code>.</para>

        <para>The original data of the new code is the part of the text
        content that is converted as inline code.</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;ui>&lt;/data>
    &lt;data id="d2">&amp;lt;/ui>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Click &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">
        Next&lt;/pc>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <warning>
          <para>Converting XLIFF text content into original data for inline
          code might need a tool-specific process as the tool which did the
          initial extraction could have applied some conversion to the original
          content to create the XLIFF content (e.g. un-escape special
          characters).</para>
        </warning>
      </section>
    </section>

    <section id="removingcodes">
      <title>Removing Codes</title>

      <para>When processing content, there are some possible cases when existing inline
      codes need to be removed.</para>

      <para>For an example the translation of a sentence can result in
      grouping of several formatted parts into a single one. For instance, the
      following sentence in English uses bold on the names of two
      animals:</para>

      <programlisting format="linespecific">
Do &lt;b>cats&lt;/b> eat &lt;b>mice&lt;/b>?</programlisting>

      <para>But the Swedish translation group the two names and therefore
      needs only a single bolded part.</para>

      <programlisting format="linespecific">
Äter &lt;b>katter möss&lt;/b>?</programlisting>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para>User agents <glossterm>may</glossterm> remove a given inline code only if its <olink targetdoc="../attributes/candelete.xml" targetptr="candelete"><code>canDelete</code></olink> attribute is
          set to <code>yes</code>.</para>
        </listitem>

        <listitem>
          <para>When removing a given inline code, the user agents <glossterm>must</glossterm> remove
          its associated original data, except if the original data is shared
          with another inline code that remains in the unit.</para>
          <para>Note that having
          to delete the original data is unlikely because such original data
          is likely to be associated to an inline code in the source
          content.</para>
        </listitem>
      </itemizedlist>

      <para>There are several ways to remove codes:</para>

      <section>
        <title>Deleting a code</title>

        <para>One way to remove a code is to delete it from the extracted
        content. For example, in the following unit, the translated text does
        not use the italics formatting. It is removed from the target content,
        but the original data are preserved because they are still used in the
        source content.</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">&amp;lt;i>&lt;/data>
    &lt;data id="d2">&amp;lt;/i>&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>I read &lt;pc id="1" dataRefStart="d1" dataRefEnd="d2">Little
        House on the Prairie&lt;/pc> to my children.&lt;/source>
    &lt;target><foreignphrase lang="ja">子供に「大草原の小さな家」を読みました。</foreignphrase>&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>
      </section>

      <section>
        <title>Converting a code into text</title>

        <para>Another way to remove an inline code is to convert it into text
        content. This is likely to be a rare use case. It is equivalent to
        deleting the code, with the addition to place the original data for
        the given code into the content, as text. This can be done, for
        example, to get better matches from an existing TM, or better
        candidates from an MT system.</para>

        <para>For instance, the following unit has an inline code
        corresponding to a variable place-holder. A tool can
        temporarily treat this variable as text to get better matches from an
        existing TM.</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">%s&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Cannot find '&lt;ph id="1" dataRef="d1"/>'.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <para>The modified unit would end up like as shown below. Note that
        because the original data was not associated with other inline code it
        has been removed from the unit:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Cannot find '%s'.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

        <warning>
          <para>Converting the original data of an inline code into text
          content might need a tool-specific process as the tool which did the
          initial extraction could have applied some conversion to the original
          content.</para>
        </warning>
      </section>
    </section>

    <section id="editinghints">
      <title>Editing Hints</title>

      <para>XLIFF provides some information about what editing operations are
      applicable to inline codes:</para>

      <itemizedlist>
        <listitem>
          <para>A code can be deleted: That is, the code element as well as
          its original data (if any are attached) are removed from the
          document. This hint is represented with the <olink targetdoc="../attributes/candelete.xml" targetptr="candelete"><code>canDelete</code></olink> attribute. The
          default value is <code>yes</code>: deletion is allowed.</para>

          <para>For example, the following extracted C string has the code
          <olink targetdoc="../elements/inline/ph.xml" targetptr="ph"><code>&lt;ph id='1'/></code></olink> set to be not
          deletable because removing the original data (the variable
          placeholder <code>%s</code>) from the string would result in an
          error when running the application:</para>
        </listitem>

        <listitem>
          <para>A code can be copied: That is, the code is used as a
          <emphasis>base code</emphasis> for adding another inline code. See
          <xref linkend="duplicatingexistingcode"/> for more details. This
          hint is represented with the <olink targetdoc="../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink> attribute. The
          default value is <code>yes</code>: copy is allowed.</para>
        </listitem>

        <listitem>
          <para>A code can be re-ordered: That is, a given code can be moved
          before or after another inline code. This hint is represented with
          the <olink targetdoc="../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> attribute.
          The default value is <code>yes</code>: re-ordering is
          allowed.</para>
        </listitem>
      </itemizedlist>
<note>
      <para>Please note that often those properties are related and appear together. For example, the code
        in the first unit shown below is a variable placeholder that has to be preserved and cannot
        be duplicated, and when several of such variables are present, as in the second unit, they
        cannot be re-ordered:</para></note>

      <programlisting format="linespecific">
&lt;unit id="1">
  &lt;originalData>
    &lt;data id="d1">%s&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Can't open '&lt;ph id="1" dataRef="d1" canCopy="no"
        canDelete="no"/>'.&lt;/source>
  &lt;/segment>
&lt;/unit>
&lt;unit id="2">
  &lt;originalData>
    &lt;data id="d1">%s&lt;/data>
    &lt;data id="d2">%d&lt;/data>
  &lt;/originalData>
  &lt;segment>
    &lt;source>Number of &lt;ph id="1" dataRef="d1" canCopy="no"
        canDelete="no" canReorder="firstNo"/>: &lt;ph id="2" dataRef="d2"
        canCopy="no" canDelete="no" canReorder="no"/>. &lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

      <para>See the <link linkend="contentmodification">Target Content
      Modification section</link> for additional details on editing.</para>

      <itemizedlist>
        <title>Constraints</title>
        <listitem>
          <para>When the attribute <olink targetdoc="../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> is set to <code>no</code> or <code>firstNo</code>,
            the attributes <olink targetdoc="../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink> and <olink targetdoc="../attributes/candelete.xml" targetptr="candelete"><code>canDelete</code></olink>
            <glossterm>must</glossterm> also be set to <code>no</code>.</para>
        </listitem>
		<listitem>
          <para>Inline codes re-ordering within a source or target content
              <glossterm>may</glossterm> be limited by defining non-reorderable sequences. Such
            sequence is made of a first inline code with the attribute <olink targetdoc="../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> set to <code>firstNo</code> and zero or more
            following codes with <olink targetdoc="../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> set to <code>no</code>.</para>
        </listitem>
        <listitem>
          <para>A non-reorderable sequence of codes <glossterm>must not</glossterm> start with a code with the attribute <olink targetdoc="../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> set to <code>No</code> and zero or more
            following codes with <olink targetdoc="../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> set to <code>no</code></para>
          <note>
            <para>A non-reorderable sequence made of a single code with <olink targetdoc="../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> set to <code>firstNo</code> are allowed just for
                <firstterm>Extraction</firstterm> convenience and are equivalent to a code with the
              attribute <olink targetdoc="../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> set to <code>yes</code>.</para>
          </note>
        </listitem>
        </itemizedlist>

        <itemizedlist>
          <title>Processing Requirements</title>
        <listitem>
          <para><firstterm>Extractors</firstterm> <glossterm>should</glossterm> set the <olink targetdoc="../attributes/candelete.xml" targetptr="candelete"><code>canDelete</code></olink>, <olink targetdoc="../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink> and <olink targetdoc="../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> attributes
          for the codes that need to be treated differently than with the
          default settings.</para>
        </listitem>
        <listitem>
          <para><firstterm>Modifiers</firstterm>
            <glossterm>must not</glossterm> change the number and order of the inline codes making
            up a non-reorderable sequence.</para>
        </listitem>
          <listitem>
            <para><firstterm>Modifiers</firstterm>
            <glossterm>may</glossterm> move a whole non-reorderable sequence before or after another
            non-reorderable sequence.</para>
          </listitem>
          <listitem>
            <para>When a non-reorderable sequence is made of a single non-reorderable code,
              <firstterm>Modifiers</firstterm>
            <glossterm>MAY</glossterm> remove the <olink targetdoc="../attributes/canreorder.xml" targetptr="canreorder"><code>canReorder</code></olink> attribute of that code or
            change its value to <code>yes</code>.</para>
          </listitem>
          <listitem>
          <para><firstterm>Modifiers</firstterm> <glossterm>must not</glossterm> delete inline codes that have their
          attribute <olink targetdoc="../attributes/candelete.xml" targetptr="candelete"><code>canDelete</code></olink> set to
          <code>no</code>.</para>
        </listitem>

        <listitem>
          <para><firstterm>Modifiers</firstterm>
            <glossterm>must not</glossterm> replicate inline codes that have their attribute <olink targetdoc="../attributes/cancopy.xml" targetptr="cancopy"><code>canCopy</code></olink>
            set to <code>no</code>.</para>
        </listitem>

        
      </itemizedlist>
      <note>
        <para>Conformance of codes to <link linkend="editinghints">Editing Hints</link> Processing
          Requirements within <firstterm>Translations</firstterm> can only be checked on existing
            <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> elements, i.e. non-conformance is not reported on
            <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> elements without <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> children.</para>
        <para>The <olink targetdoc="xliff21.xml" targetptr="CoreSchematron">XLIFF Core Schematron
            Schema</olink> will throw <emphasis>Warnings</emphasis> for all existing <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> elements where codes don't conform to the <link linkend="editinghints">Editing Hints</link> Processing Requirements, except for <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> children of <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> elements with the <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink> attribute set to
            <code>final</code>, where it will throw <emphasis>Errors</emphasis>.</para>
      </note>
      
    </section>
  </section>

  <section id="annotations">
    <title>Annotations</title>

    <para>An annotation is an element that associates a section of the content
    with some metadata information.</para>

    <para>Annotations <glossterm>may</glossterm> be created by an <firstterm>Extractor</firstterm>
      that generated the initial <firstterm>XLIFF Document</firstterm>, or by any other
      <firstterm>Modifier</firstterm> or <firstterm>Enricher</firstterm> later in the process. For
      example, after an <firstterm>Extractor</firstterm> creates the document, an <firstterm>Enricher</firstterm> can
    annotate the source content with terminological information.</para>

    <para>Annotations are represented using either the <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> element, or the pair of
    <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink> and <olink targetdoc="../elements/inline/em.xml" targetptr="em"><code>&lt;em></code></olink> elements.</para>

    <section id="annotationTypes">
      <title>Type of Annotations</title>

      <para>There are several pre-defined types of annotation and definition of  <link linkend="customAnnotation">custom types</link> is also allowed.</para>

      <section id="translateAnnotation">
        <title>Translate Annotation</title>

        <para>This annotation is used to indicate whether a span of content is
        translatable or not.</para>

        <para>Usage:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para>The <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink> attribute is
            <glossterm>required</glossterm></para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink> attribute is
            <glossterm>required</glossterm> and set to <code>yes</code> or <code>no</code></para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink> attribute is <glossterm>optional</glossterm>
            and set to <code>generic</code> (this is the default value)</para>
          </listitem>
        </itemizedlist>

        <para>For example:</para>

        <programlisting format="linespecific">
He saw his &lt;mrk id="m1" translate="no">doppelgänger&lt;/mrk>.</programlisting>

        <note>
          <para>This annotation overrides the <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink> attribute set
          or inherited at the <olink targetdoc="../../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>
          level.</para>
        </note>

        <note>
          <para>The <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink> attribute can
          also be used at the same time as another type of annotation. For
          example:</para>

          <programlisting format="linespecific">
He saw his &lt;mrk id="m1" translate="no" type="term">doppelgänger
&lt;/mrk>.</programlisting>
        </note>
      </section>

      <section id="termAnnotation">
        <title>Term Annotation</title>

        <para>This annotation is used to mark up a term in the content, and
        possibly associate information to it.</para>

        <para>Usage:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para>The <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink> attribute is
            <glossterm>required</glossterm></para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink> attribute is <glossterm>required</glossterm>
            and set to <code>term</code></para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../../attributes/value.xml" targetptr="value"><code>value</code></olink> attribute is <glossterm>optional</glossterm>
            and contains a short definition of the term</para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../../attributes/ref.xml" targetptr="ref"><code>ref</code></olink> attribute is <glossterm>optional</glossterm> and
            contains a URI pointing to information on the term</para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink> attribute is
            <glossterm>optional</glossterm> and set to <code>yes</code> or <code>no</code></para>
          </listitem>
        </itemizedlist>
        
        
        <para>For example:</para>

        <programlisting format="linespecific">
&lt;file id="f-t_a">
  &lt;unit id="1">
    &lt;segment>
      &lt;source>He is my &lt;mrk id="m1" type="term"
          ref="http://dbpedia.org/page/Doppelgänger">
          doppelgänger&lt;/mrk>. &lt;/source>
    &lt;/segment>
  &lt;/unit>
&lt;/file>
 </programlisting>
      </section>


      <section id="commentAnnotation">
        <title>Comment Annotation</title>

        <para>This annotation is used to associate a span of content with a
        comment.</para>

        <para>Usage:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para>The <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink> attribute is
            <glossterm>required</glossterm></para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink> attribute is <glossterm>required</glossterm>
            and set to <code>comment</code></para>
          </listitem>

          <listitem>
            <para>If the <olink targetdoc="../../attributes/value.xml" targetptr="value"><code>value</code></olink> attribute is present it contains the text of the
              comment. If and only if the <olink targetdoc="../../attributes/value.xml" targetptr="value"><code>value</code></olink> attribute is not present, the <olink targetdoc="../../attributes/ref.xml" targetptr="ref"><code>ref</code></olink>
              attribute <glossterm>must</glossterm> be present and contain the URI of a <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink> element within the same enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element that holds the comment.</para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink> attribute is
            <glossterm>optional</glossterm> and set to <code>yes</code> or <code>no</code></para>
          </listitem>
        </itemizedlist>

        <para>For example, here with the <code><olink targetdoc="../../attributes/value.xml" targetptr="value"><code>value</code></olink></code> attribute:</para>

        <programlisting format="linespecific">
The &lt;mrk id="m1" type="comment"
 value="Possible values: Printer or Stacker">&lt;ph id="1" dataRef="d1"/>
&lt;/mrk>
has been enabled.</programlisting>

        <para>And here using the <olink targetdoc="../../attributes/ref.xml" targetptr="ref"><code>ref</code></olink> attribute:</para>

        <programlisting format="linespecific">
&lt;unit id="1">
  &lt;notes>
    &lt;note id="n1" appliesTo="target">Please check the translation for
        'namespace'. One also can use 'espace de nom', but I think most
        technical manuals use the English term.&lt;/note>
  &lt;/notes>
  &lt;segment>
    &lt;source>You use your own namespace.&lt;/source>
    &lt;target>Vous pouvez utiliser votre propre &lt;mrk id="m1"
        type="comment" ref="#n=n1">namespace&lt;/mrk>.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting>
      </section>

      <section id="customAnnotation">
        <title>Custom Annotation</title>

        <para>The <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> element can be used
        to implement custom annotations.</para>

        <para>A custom annotation <glossterm>must not</glossterm> provide the same functionality as a
        pre-defined annotation.</para>

        <para>Usage:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para>The <olink targetdoc="../../attributes/id.xml" targetptr="id"><code>id</code></olink> attribute is
            <glossterm>required</glossterm></para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../../attributes/type.xml" targetptr="type"><code>type</code></olink> attribute is <glossterm>required</glossterm>
            and set to a unique user-defined value.</para>
          </listitem>

          <listitem>
            <para>The <olink targetdoc="../../attributes/translate.xml" targetptr="translate"><code>translate</code></olink> attribute is
            <glossterm>optional</glossterm> and set to <code>yes</code> or <code>no</code></para>
          </listitem>

          <listitem>
            <para>The use and semantics of the <olink targetdoc="../../attributes/value.xml" targetptr="value"><code>value</code></olink> and <olink targetdoc="../../attributes/ref.xml" targetptr="ref"><code>ref</code></olink> attributes are
            user-defined.</para>
          </listitem>
        </itemizedlist>

        <para>For example:</para>

        <programlisting format="linespecific">
One of the earliest surviving works of literature is
&lt;mrk id="m1" type="myCorp:isbn" value="978-0-14-44919-8">The 
Epic of Gilgamesh&lt;/mrk>.</programlisting>
      </section>
    </section>

    <section id="splittingAnnotations">
      <title>Splitting Annotations</title>

      <para>Annotations can overlap spanning inline codes or other
      annotations. They also can be split by segmentation. Because of this, a
      single annotation span can be represented using a pair of <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink> and <olink targetdoc="../elements/inline/em.xml" targetptr="em"><code>&lt;em></code></olink> elements instead of a
      single <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> element.</para>

      <para>For example, one can have the following content:</para>

      <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Sentence A. &lt;mrk id="m1" type="comment" value="Comment for B
        and C">Sentence B. Sentence C.&lt;/mrk>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>

      <para>After a user agent performs segmentation, the annotation element
      <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink> is changed to a pair of
      <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink> and <olink targetdoc="../elements/inline/em.xml" targetptr="em"><code>&lt;em></code></olink> elements:</para>

      <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Sentence A. &lt;/source>
  &lt;/segment>
  &lt;segment>
    &lt;source>&lt;sm id="m1" type="comment" value="Comment for B and C"/>
        Sentence B. &lt;/source>
  &lt;/segment>
  &lt;segment>
    &lt;source>Sentence C.&lt;em startRef="m1"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting>
    </section>
  </section>

  <section id="subflowsdesc">
    <title>Sub-Flows</title>

    <para>A sub-flow is a section of text embedded inside an inline code, or
    inside another section of text.</para>

    <para>For example, the following HTML content includes two sub-flows: The
    first one is the value of the <code>title</code> attribute ("<code>Start
    button</code>"), and the second one is the value of the <code>alt</code>
    attribute ("<code>Click here to start!</code>"):</para>

    <programlisting format="linespecific">
Click to start: &lt;img title="Start button"
 src="btnStart.png" alt="Click here to start!"/></programlisting>

    <para>Another example is the following DITA content where the footnote
    "<code>A Palouse horse is the same as an Appaloosa.</code>" is defined at
    the middle of a sentence:</para>

    <programlisting format="linespecific">
Palouse horses&lt;fn>A Palouse horse is the same as
 an Appaloosa.&lt;/fn> have spotted coats.</programlisting>

    <para>In XLIFF, each sub-flow is stored in its own <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element, and the
    <code><olink targetdoc="../../attributes/subflows.xml" targetptr="subflows"><code>subFlows</code></olink></code> attribute is
    used to indicate the location of the embedded content.</para>

    <para>Therefore the HTML content of the example above can be represented
    like below:</para>

    <programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>Start button&lt;/source>
  &lt;/segment>
&lt;/unit>
&lt;unit id="2">
  &lt;segment>
    &lt;source>Click here to start!&lt;/source>
  &lt;/segment>
&lt;/unit>
&lt;unit id="3">
  &lt;segment>
    &lt;source>Click to start: &lt;ph id="1" subFlows="1 2"/>&lt;/source>
  &lt;/segment>
&lt;/unit>
 </programlisting>
    
    <itemizedlist>
      <title>Constraints</title>
      <listitem>
        <para>An inline code containing or delimiting one or more sub-flows
            <glossterm>must</glossterm> have an attribute <olink targetdoc="../../attributes/subflows.xml" targetptr="subflows"><code>subFlows</code></olink> that holds a list of the identifiers of the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> elements where the sub-flows are stored.</para>
      </listitem>
      <listitem>
        <para>Sub-flows <glossterm>must</glossterm> be in the same <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> element as the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element from which they are referenced.</para>
      </listitem>
    </itemizedlist>
    
    <itemizedlist>
      <title>Processing Requirements</title>

      <listitem>
        <para><firstterm>Extractors</firstterm> <glossterm>should</glossterm> store each sub-flow in its own <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>
      </listitem>

      

      <listitem>
        <para><firstterm>Extractors</firstterm>
          <glossterm>may</glossterm> order the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> elements of the sub-flows and the
            <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element, from where the sub-flows are referenced,
          as they see fit. </para>
      </listitem>
      
    </itemizedlist>
    <note><para>Please note that the static structure encoded by <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>, <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink>, and <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> elements is principally immutable in <firstterm>XLIFF Documents</firstterm>
      and hence the unit order initially set by the <firstterm>Extractor</firstterm> will be preserved throughout the roundtrip
      even in the special case of sub-flows.</para></note>
  </section>

  <section>
    <title>White Spaces</title>

    <para>While white spaces can be significant or insignificant in the original format, they are
      always treated as significant when stored as original data in XLIFF. See the definition of the <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> element.</para>

    <itemizedlist>
      <title>Processing Requirements</title>

      

      <listitem>
        <para>For the inline content and all non empty inline elements: The white spaces
            <glossterm>must</glossterm> be preserved if the value for <code>xml:space</code> set or
          inherited at the enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> level is <code>preserve</code>, and
          they <glossterm>may</glossterm> be preserved if the value is <code>default</code>.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="BiDi">
    <title>Bidirectional Text</title>

    <para>Text directionality in XLIFF content is defined by inheritance.
    Source and target content can have different directionality.</para>

    <para>The initial directionality for both the source and the target content is defined in the
        <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink> element, using the <glossterm>optional</glossterm>
      attributes <olink targetdoc="../../attributes/srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink> for the source and <olink targetdoc="../../attributes/trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink> for
      the target. The default value for both attributes is <code>auto</code>.</para>

    <para>The <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink> and <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> elements also have the two
        <glossterm>optional</glossterm> attributes <olink targetdoc="../../attributes/srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink> and <olink targetdoc="../../attributes/trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink>. The
      default value of the <olink targetdoc="../../attributes/srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink> is inherited from the value of the <olink targetdoc="../../attributes/srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink>
      attribute of the respective parent element. The default value of the <olink targetdoc="../../attributes/trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink>
      attribute is inherited from the value of the <olink targetdoc="../../attributes/trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink> attribute of the respective parent
      element.</para>

    <para>The <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink>, <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink>, and isolated <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements have an <glossterm>optional</glossterm>
      attribute <olink targetdoc="../../attributes/dir.xml" targetptr="dir"><code>dir</code></olink>
      with a value <code>ltr</code>, <code>rtl</code>, or <code>auto</code>. The default value is
      inherited from the parent <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element. In case the inline element is a child of a
        <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> element, the default value is inherited from the <olink targetdoc="../../attributes/srcdir.xml" targetptr="srcdir"><code>srcDir</code></olink> value
      of the enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element. In case the inline element is a child of a
        <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> element, the default value is inherited from the
        <olink targetdoc="../../attributes/trgdir.xml" targetptr="trgdir"><code>trgDir</code></olink> value of the enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>
    <warning><para> While processing isolated <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements with explicitly set directionality, please beware
        that unlike directionality set on the <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> and <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> , this
        method decreases the stack level as per [UAX #9].</para>
    </warning>
    <para>In addition, the <olink targetdoc="../elements/structural/data.xml" targetptr="data"><code>&lt;data></code></olink> element has an <glossterm>optional</glossterm>
      attribute <olink targetdoc="../../attributes/dir.xml" targetptr="dir"><code>dir</code></olink>
      with a value <code>ltr</code>, <code>rtl</code>, or <code>auto</code> that is not inherited.
      The default value is <code>auto</code>.</para>

    <para>Directionality of source and target text contained in the <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> and <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> elements is fully governed by <olink targetdoc="../xliff22.xml" targetptr="uax9">[UAX #9]</olink>, whereas explicit
        <firstterm>XLIFF-defined</firstterm> structural and directionality markup is a higher-level
      protocol in the sense of <olink targetdoc="../xliff22.xml" targetptr="uax9">[UAX #9]</olink>.
      The <firstterm>XLIFF-defined</firstterm> value <code>auto</code> determines the directionality
      based on the first strong directional character in its scope and
        <firstterm>XLIFF-defined</firstterm> inline directionality markup behaves exactly as
      Explicit Directional Isolate Characters, see <olink targetdoc="../xliff22.xml" targetptr="uax9">[UAX #9]</olink>, <ulink url="http://www.unicode.org/reports/tr9/#Directional_Formatting_Characters">http://www.unicode.org/reports/tr9/#Directional_Formatting_Characters</ulink>.</para>
  <note>
    <para>Please note that this specification does not define explicit markup for inline directional Overrides or Embeddings;
      in case those are needed. <firstterm>Extractors</firstterm> and <firstterm>Modifiers</firstterm> will need
      to use [UAX #9] defined Directional Formatting Characters.</para>
    <para>For instance, HTML elements <code>&lt;bdi></code> and <code>&lt;bdo></code> need both <firstterm>Extracted</firstterm> as a <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> or
      <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> / <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec/></code></olink> pair with the <olink targetdoc="../attributes/dir.xml" targetptr="dir"><code>dir</code></olink> attribute set respectively.</para>
      <para>All XLIFF defined inline
      directionality markup isolates and <code>&lt;sc></code> / <code>&lt;ec/></code> isolated spans can reach over segment
        (but not unit) boundaries. This needs to be taken into account when splitting or joining
        segments (see <olink targetdoc="../segmentation/segmentation.xml" targetptr="segmentationModification">Segmentation Modification</olink>) that contain inline directionality markup. Albeit It is not
        advisable to split segments, so that corresponding inline directionality markup start and
        end would fall into different segments, such a situation is not too confusing. If this
        happens, the "watertight" BiDi box will simply span two or more segments. This is not too
        confusing because no XLIFF defined directionality markup is allowed on <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink>,
        <olink targetdoc="../elements/structural/target.xml" targetptr="target">&lt;target></olink>, or <olink targetdoc="../elements/structural/segment.xml" targetptr="segment">&lt;segment></olink>, so all higher level protocol inheritance of directionality in such cases is
        from <olink targetdoc="../elements/structural/unit.xml" targetptr="unit">&lt;unit></olink> or higher. </para>
  </note>
    
  </section>

  <section id="contentmodification">
    <title>Target Content Modification</title>

    <para>This section defines the rules <firstterm>Writers</firstterm> need to follow when working
    with the target content of a given segment in order to provide
    interoperability throughout the whole process.</para>

    <para>The <firstterm>Extractor</firstterm> <glossterm>may</glossterm> create the initial target content as it sees
    fit.</para>

    <para>The <firstterm>Merger</firstterm> is assumed to have the same level of processing and
      native format knowledge as the <firstterm>Extractor</firstterm>. Providing an interoperable
    way to convert native documents into XLIFF with one tool and back to the
    native format with another tool without the same level of knowledge is
    outside the scope of this specification.</para>

    <para>The <firstterm>Writers</firstterm> <firstterm>Modifying</firstterm> the target content of an <firstterm>XLIFF Document</firstterm> between
      the <firstterm>Extractor</firstterm> and the <firstterm>Merger</firstterm> ensure interoperability by applying
    specific rules. These rules are separated into two cases: When there is an
    existing target and when there is no existing target.</para>

    <section id="contentmodificationwithouttarget">
      <title>Without an Existing Target</title>

      <para>When there is no existing target, the processing requirements for
      a given segment are the following:</para>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para><firstterm>Writers</firstterm> <glossterm>may</glossterm> leave the segment without a target.</para>
        </listitem>

        <listitem>
          <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> create a new target as follows:</para>

          <itemizedlist>
            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> add translation of the source text.</para>
            </listitem>

            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>must</glossterm> put all <link linkend="editinghints">non-removable</link> inline codes in the
              target.</para>
            </listitem>

            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>must</glossterm> preserve the order of all the <link linkend="editinghints">non-reorderable</link> inline
              codes.</para>
            </listitem>

            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> put any <link linkend="editinghints">removable</link> inline code in the
              target.</para>
            </listitem>

            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> add inline codes.</para>
            </listitem>

            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> add or remove annotations.</para>
            </listitem>


            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> convert any <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element into a
              pair of <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> and <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements.</para>
            </listitem>

            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> convert, if it is possible, any pair of
              <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> and <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements into a
              <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>

    <section id="contentmodificationwithtarget">
      <title>With an Existing Target</title>

      <para>When working with a segment with content already in the target,
        <firstterm>Writers</firstterm> <glossterm>must</glossterm> choose one of the three behaviors described below:</para>

      <itemizedlist>
        <title>Processing Requirements</title>

        <listitem>
          <para><firstterm>Writers</firstterm> <glossterm>may</glossterm> leave the existing target unchanged.</para>
        </listitem>

        <listitem>
          <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> modify the existing target as follow:</para>

          <itemizedlist>
            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> add or <firstterm>Modify</firstterm> translatable text.</para>
            </listitem>

            <listitem>
              <para><firstterm>Writers</firstterm> <glossterm>must</glossterm> preserve all <link linkend="editinghints">non-removable</link> inline codes,
              regardless whether or not they exist in the source.</para>
            </listitem>

            <listitem>
              <para><firstterm>Writers</firstterm> <glossterm>must</glossterm> preserve any <link linkend="editinghints">non-reorderable</link> inline codes in
              the existing target.</para>
            </listitem>

            <listitem>
              <para><firstterm>Writers</firstterm> <glossterm>must not</glossterm> add any <link linkend="editinghints">non-reorderable</link> inline codes to
              the target.</para>
            </listitem>

            

            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> remove any <link linkend="editinghints">removable</link> inline codes in the
              target.</para>
            </listitem>

            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> add inline codes (including copying any
              <link linkend="editinghints">cloneable</link> inline codes of
              the existing target).</para>
            </listitem>

            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> add or remove annotations.</para>
            </listitem>
            
            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> convert any <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element into a
              pair of <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> and <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements.</para>
            </listitem>

            <listitem>
              <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> convert, if it is possible, any pair of
              <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> and <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements into a
              <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element.</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para><firstterm>Modifiers</firstterm> <glossterm>may</glossterm> delete the existing target and start over as
          if working without an existing target.</para>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section>
    <title>Content Comparison</title>

    <para>This specification defines two types of content equality:</para>

    <itemizedlist>
      <listitem>
        <para>Equality type A: Two contents are equal if their normalized forms are equal.</para>
      </listitem>

      <listitem>
        <para>Equality type B: Two contents are equal if, in their normalized forms and with all
          inline code markers replaced by the value of their <olink targetdoc="../../attributes/equiv.xml" targetptr="equiv"><code>equiv</code></olink>
          attributes, the resulting strings are equal.</para>
      </listitem>
    </itemizedlist>

    <para>A content is normalized when:</para>

    <itemizedlist>
      <listitem>
        <para>The text nodes are in Unicode Normalized Form C defined in the
        Unicode Annex #15: Unicode Normalization Forms <olink targetdoc="../xliff22.xml" targetptr="uax15">[UAX #15]</olink>.</para>
      </listitem>

      <listitem>
        <para>All annotation markers are removed.</para>
      </listitem>

      <listitem>
        <para>All pairs of <olink targetdoc="../elements/inline/sc.xml" targetptr="sc"><code>&lt;sc></code></olink> and <olink targetdoc="../elements/inline/ec.xml" targetptr="ec"><code>&lt;ec></code></olink> elements that can be
        converted into a <olink targetdoc="../elements/inline/pc.xml" targetptr="pc"><code>&lt;pc></code></olink> element, are
        converted.</para>
      </listitem>

      <listitem>
        <para>All adjacent text nodes are merged into a single text
        node.</para>
      </listitem>

      <listitem>
        <para>For all the text nodes with the white space property set to
        <code>default</code>, all adjacent white spaces are collapsed into a
        single space.</para>
      </listitem>
    </itemizedlist>
  </section>
</section>
    <section id="segmentation">
  <title>Segmentation</title>

  <para>In the context of XLIFF, a segment is content which is either a unit
  of extracted text, or has been created from a unit of extracted text by
  means of a segmentation mechanism such as sentence boundary detection. For
  example, a segment can be a title, the text of a menu item, a paragraph or a
  sentence in a paragraph.</para>

  <para>In the context of XLIFF, other types representations sometimes called
  "segmentation" can be represented using annotations. For example: the terms
  in a segment can be identified and marked up using the <olink targetdoc="../inline/inline.xml" targetptr="termAnnotation">term
  annotation</olink>.</para>

  <para>XLIFF does not specify how segmentation is carried out, only how to represent its result.
    Material provisions regarding segmentation can be found for instance in the Segmentation Rules
    eXchange standard <olink targetdoc="../xliff22.xml" targetptr="biblio_srx">[SRX]</olink> or <olink targetdoc="../xliff22.xml" targetptr="uax29">[UAX #29]</olink>.</para>

  <section id="segmentationRepresentation">
    <title>Segments Representation</title>

    <para>In XLIFF each segment of processed content is represented by a <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> element.</para>

    <para>A <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> can comprise a single <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink>.</para>

    <para>Each <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> element has one
    <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> element that
    contains the source content and one <glossterm>optional</glossterm> <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> element that can be
    empty or contain the translation of the source content at a given
    state.</para>

    <para>Content parts between segments are represented with the <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> element,
    which has the same content model as <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink>.</para>

    <para>For example:</para>

    <para><programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment>
    &lt;source>First sentence.&lt;/source>
    &lt;target>Première phrase.&lt;/target>
  &lt;/segment>
  &lt;ignorable>
    &lt;source> &lt;/source>
  &lt;/ignorable>
  &lt;segment>
    &lt;source>Second sentence.&lt;/source>
  &lt;/segment>
&lt;/unit>
</programlisting></para>
  </section>

  <section id="segorder">
    <title>Segments Order</title>

    <para>Some <firstterm>Agents</firstterm> (e.g. aligner tools) can segment content, so that
    the target segments are not in the same order as the source segments.</para>

    <para>To be able to map order differences, the <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> element has an <glossterm>optional</glossterm> <olink targetdoc="../attributes/order.xml" targetptr="order"><code>order</code></olink> attribute
      that indicates its position in the sequence of segments (and inter-segments). Its value is an
      integer from 1 to N, where N is the sum of the numbers of the <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> and <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> elements within the given enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para>
    <warning><para>When <firstterm>Writers</firstterm> set explicit <code><olink targetdoc="../attributes/order.xml" targetptr="order">order</olink></code> on <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> elements,
      they have to check for conflicts with implicit <code><olink targetdoc="../attributes/order.xml" targetptr="order">order</olink></code>, as <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> elements without explicit
      <code><olink targetdoc="../attributes/order.xml" targetptr="order">order</olink></code> correspond to their sibling <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> elements.
      Beware that moving one <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> element is likely to cause a renumbering domino effect throughout the enclosing <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element.</para></warning>

    <para>For example, the following HTML documents have the same paragraph
    with three sentences in different order:<programlisting format="linespecific">
&lt;p lang='en'>Sentence A. Sentence B. Sentence C.&lt;/p>
</programlisting><programlisting format="linespecific">
&lt;p lang='fr'>Phrase B. Phrase C. Phrase A.&lt;/p>
</programlisting>The
    XLIFF representation of the content, after segmentation and alignment,
    would be:</para>

    <para><programlisting format="linespecific">
&lt;unit id="1">
  &lt;segment id="1">
    &lt;source>Sentence A.&lt;/source>
    &lt;target order="5">Phrase A.&lt;/target>
  &lt;/segment>
  &lt;ignorable>
    &lt;source> &lt;/source>
  &lt;/ignorable>
  &lt;segment id="2">
    &lt;source>Sentence B.&lt;/source>
    &lt;target order="1">Phrase B.&lt;/target>
  &lt;/segment>
  &lt;ignorable>
    &lt;source> &lt;/source>
  &lt;/ignorable>
  &lt;segment id="3">
    &lt;source>Sentence C.&lt;/source>
    &lt;target order="3">Phrase C.&lt;/target>
  &lt;/segment>
&lt;/unit>
</programlisting></para>
  </section>

  <section id="segmentationModification">
    <title>Segmentation Modification</title>
    <para>When <firstterm>Modifying</firstterm> segmentation of a <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>,
      <firstterm>Modifiers</firstterm> <glossterm>must</glossterm> meet the Constraints and follow the Processing Requirements defined below:</para>
    <itemizedlist>
      <title>Constraints</title>
      <listitem>
        <para>Integrity of the inline codes <glossterm>must</glossterm> be preserved. See the section on <olink targetdoc="../inline/inline.xml" targetptr="inlineCodes">Inline Codes</olink> and on <olink targetdoc="../inline/inline.xml" targetptr="annotations">Annotations</olink> for details.</para>
      </listitem>
      <listitem>
        <para>The entire source content of any one <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> element
          <glossterm>must</glossterm> remain logically unchanged: <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> elements or their data <glossterm>must not</glossterm> be moved or joined across units.</para>
      </listitem>
    </itemizedlist>
    <warning><para>Note that when splitting or joining segments that have both source and target content it is advisable
      to keep the resulting segments linguistically aligned, which is likely to require human linguistic expertise and
      hence manual re-segmentation. If the linguistically correct alignment cannot be guaranteed, discarding the target
      content and retranslating the resulting source segments is worth considering.</para></warning>

    <itemizedlist>
      <title>Processing Requirements</title>

      <listitem id="splittingSegments">
        <para>When the <firstterm>Modifiers</firstterm> perform a split operation:</para>
        <itemizedlist>
          <listitem>
            <para>Only <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or
              <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> elements
              that have their <olink targetdoc="../attributes/canResegment.xml" targetptr="canResegment"><code>canResegment</code></olink> value resolved to <code>yes</code>
              <glossterm>may</glossterm> be split.</para>
          </listitem>
          <listitem>
            <para>All new <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or
              <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> elements
              created and their <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> and
              <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> children <glossterm>must</glossterm> have
              the same attribute values as the original elements they were
              created from, as applicable, except for the <olink targetdoc="../attributes/id.xml" targetptr="id"><code>id</code></olink> attributes and, possibly, for the
              <olink targetdoc="../attributes/order.xml" targetptr="order"><code>order</code></olink>,
              <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink> and
              <olink targetdoc="../attributes/subState.xml" targetptr="substate"><code>subState</code></olink> attributes.</para>
          </listitem>
          <listitem>
            <para>Any new <olink targetdoc="../attributes/id.xml" targetptr="id"><code>id</code></olink> attributes <glossterm>must</glossterm> follow the
              <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or
              <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>
              <olink targetdoc="../attributes/id.xml" targetptr="id"><code>id</code></olink> constraints.</para>
          </listitem>
          <listitem>
            <para>If there was a target content in the original segment and if the <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink> attribute
              of the original segment was not <code>initial</code>, the <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink> attributes of the
              segments resulting from the split (and possibly their corresponding <olink targetdoc="../attributes/subState.xml" targetptr="substate"><code>subState</code></olink>
              attributes) <glossterm>may</glossterm> be
              changed to reflect the fact that the target content <glossterm>may</glossterm> need to be verified as the new segmentation <glossterm>may</glossterm> have desynchronized the alignment between
              the source and target contents.</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem id="joiningSegments">
        <para>When the <firstterm>Modifiers</firstterm> perform a join operation:</para>
        <itemizedlist>
          <listitem>
            <para>Only <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or
              <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> elements
              that have their <olink targetdoc="../attributes/canResegment.xml" targetptr="canResegment"><code>canResegment</code></olink> value resolved to
              <code>yes</code> <glossterm>may</glossterm> be join with other elements.</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>When the <firstterm>Modifiers</firstterm> or <firstterm>Mergers</firstterm> perform a join operation:</para>
        <itemizedlist>
          <listitem>
            <para>Two elements (<olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or
              <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>)
              <glossterm>must not</glossterm> be joined if their <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> have
              resolved <olink targetdoc="../attributes/order.xml" targetptr="order"><code>order</code></olink> values that are not consecutive.</para>
          </listitem>
          <listitem>
            <para>The attributes of the elements to be joined (<olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or
              <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>) and the attributes of their
              <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> and
              <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink>
              <glossterm>must</glossterm> be carried over in the resulting joined elements.</para>
          </listitem>
          <listitem>
            <para>If attributes of elements to be joined (<olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or
              <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink>) differ, or if the attributes of their
              <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> or
              <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> differ,
              the resulting joined elements <glossterm>must</glossterm> comply with following rules:</para>
            <itemizedlist>
              <listitem>
                <para>If the <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink> attributes of the
                  <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> elements
                  differ: the <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink> attribute of the joined
                  <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink>
                  <glossterm>must</glossterm> be set
                  to the "earliest" of the values specified in the original <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> elements. The sequence of
                  <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink> values are defined in the following order:
                  1: <code>initial</code>, 2: <code>translated</code>, 3: <code>reviewed</code>, and 4: <code>final</code>.</para>
              </listitem>
              <listitem>
                <para>The <olink targetdoc="../attributes/subState.xml" targetptr="substate"><code>subState</code></olink> attribute <glossterm>must</glossterm> be the one
                  associated with the
                  <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink> attribute selected to be used in the joined <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink>.
                  If no <olink targetdoc="../attributes/subState.xml" targetptr="substate"><code>subState</code></olink> attribute is associated with that
                  <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink>, the joined
                  <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> <glossterm>must not</glossterm>
                  have a <olink targetdoc="../attributes/subState.xml" targetptr="substate"><code>subState</code></olink>.</para>
              </listitem>
              <listitem>
                <para>If the <olink targetdoc="../attributes/xml_space.xml" targetptr="xml_space"><code>xml:space</code></olink> attributes differ:
                  The <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink> and
                  <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> of the joined element <glossterm>must</glossterm> be
                  set to <code>xml:space="preserve"</code>.</para>
              </listitem>
              
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem id="joiningOrSplittingSegments">
        <para>When the <firstterm>Modifiers</firstterm> or <firstterm>Mergers</firstterm> perform a join or a split operation:</para>
        <itemizedlist>
          <listitem>
            <para>If any <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> element of the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> had a <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> child with an <olink targetdoc="../attributes/order.xml" targetptr="order"><code>order</code></olink>
              attribute prior to the segmentation modification, the <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> child of all <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> and <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> elements in the <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink>
              <glossterm>must</glossterm> be examined and if necessary their <olink targetdoc="../attributes/order.xml" targetptr="order"><code>order</code></olink>
              attributes updated to preserve the ordering of the target content prior the
              segmentation modification.</para>
          </listitem>
        </itemizedlist>
      </listitem>

      
      </itemizedlist>
    

  </section>
  <section role="informative">
    <title>Best Practice for <firstterm>Mergers</firstterm></title>
    
    <para>Since a typical simple corporate implementation of XLIFF 2 is a localization tool that is
      at the same time an <firstterm>Extractor</firstterm> and a <firstterm>Merger</firstterm> with
      the full knowledge of the <firstterm>Extraction</firstterm> mechanism, the community requested
      a non-normative best practice for <firstterm>Merging</firstterm> after an XLIFF
      Round-trip.</para>
    <para>First of all, it needs to be noted that <firstterm>Mergers</firstterm> are not advised to
      rely on their knowledge of the <firstterm>Extraction</firstterm> mechanism in terms of <link linkend="segmentation">segmentation</link>. <firstterm>Modifiers</firstterm> are free to
        <link linkend="segmentationModification">change segmentation</link> during the roundtrip and
      even <link linkend="segorder">to change order of target content held in different segments of
        the same unit</link>. Therefore, it can be advised as a best practice before
        <firstterm>Merging</firstterm> to look for all segments within each unit, even and
      especially when the <firstterm>Extractor</firstterm> had created only one segment per
      unit.</para>
    <para>When joining segments, <firstterm>Mergers</firstterm> need to observe all <emphasis>Processing Requirements</emphasis> for <link linkend="joiningSegments">joining segments</link> and <link linkend="joiningOrSplittingSegments"> joining or splitting segments</link></para>
    <para>When joining segments it can happen that not all <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> or <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> elements actually have their <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> element children. This situation can be legal depending
      on a specific workflow set up. The <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> child within an <olink targetdoc="../elements/structural/ignorable.xml" targetptr="ignorable"><code>&lt;ignorable></code></olink> element is always optional, but at the same can be
      created any time by simply copying the content of the sibling <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink>, see <olink targetdoc="../inline/inline.xml" targetptr="contentmodificationwithouttarget">Content Modification Without Target</olink>. The presence of <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> children can be better governed in <olink targetdoc="../elements/structural/segment.xml" targetptr="segment"><code>&lt;segment></code></olink> elements that have the <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink> attribute.
      The <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink>
      attribute is strictly optional with the default <code>initial</code>, yet it is advisable for
      a corporate localization operation to request that their service providers progress that
      attribute through <code>translated</code> and <code>reviewed</code> to <code>final</code>.
      This attribute cannot be progressed from the <code>initial</code> state without a <olink targetdoc="../elements/structural/target.xml" targetptr="target"><code>&lt;target></code></olink> child and all violations of <olink targetdoc="../inline/inline.xml" targetptr="editinghints">Editing
        Hints</olink> will become validation errors only in the <code>final</code> state. Usage of
        <olink targetdoc="../attributes/state.xml" targetptr="state"><code>state</code></olink> also
      allows for fine-tuning of a specific workflow <emphasis>State Machine</emphasis> with the
      dependent <olink targetdoc="../attributes/subState.xml" targetptr="substate"><code>subState</code></olink> attribute. With the attribute <olink targetdoc="../attributes/subState.xml" targetptr="substate"><code>subState</code></olink>,
      implementers can create an arbitrary number of private state machine under their prefix
      authorities. It is advisable to register such authority prefixes with the XLIFF TC and publish
      their documentation.</para>
    <para>When <firstterm>Mergers</firstterm> need to perform the <firstterm>Merge</firstterm> in a
      non-final state, when the presence of targets cannot be guaranteed, they are free to create
      preliminary targets again following the <olink targetdoc="../inline/inline.xml" targetptr="contentmodificationwithouttarget">Processing Requirements for
        Content Modification Without Target</olink></para>
  </section>
  
</section>
    <section id="extensions">
    <title>Extension Mechanisms</title>
    <para>XLIFF 2.0 offers two mechanisms for storing custom data in an XLIFF document:</para>
    <orderedlist continuation="restarts" inheritnum="ignore">
        <listitem>
            <para>Using the <olink targetdoc="../modules/metadata/metadata.xml" targetptr="metadata_module">Metadata 
                module</olink> for storing custom data in elements defined by the official XLIFF 
                specification.</para>
        </listitem>
        <listitem>
            <para>Using the standard XML namespace mechanism for storing data in elements or attributes defined in a custom 
            XML Schema.</para>
        </listitem>
    </orderedlist>
    <para>Both mechanisms can be used simultaneously.</para>
    <section>
        <title>Extension Points</title>
        <para>The following <firstterm>XLIFF Core</firstterm> elements allow storing custom data in <olink targetdoc="../elements/metadata/metadata.xml" targetptr="metadata"><code>&lt;mda:metadata></code></olink> elements or in elements from a custom
            XML namespace:</para>
        <simplelist type="vert">
            <member>- <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink></member>
            <member>- <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink></member>
            <member>- <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink></member>
        </simplelist>
            
        <para>The following <firstterm>XLIFF Core</firstterm> elements accept custom
            attributes:</para>
        <simplelist type="vert">
            <member>- <olink targetdoc="../elements/structural/xliff.xml" targetptr="xliff"><code>&lt;xliff></code></olink></member>
            <member>- <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink></member>
            <member>- <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink></member>
            <member>- <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink></member>
            
            <member>- <olink targetdoc="../elements/structural/note.xml" targetptr="note"><code>&lt;note></code></olink></member>
            <member>- <olink targetdoc="../elements/inline/mrk.xml" targetptr="mrk"><code>&lt;mrk></code></olink></member>
            <member>- <olink targetdoc="../elements/inline/sm.xml" targetptr="sm"><code>&lt;sm></code></olink></member>
        </simplelist>
        <section>
            <title>Extensibility of <firstterm>XLIFF Modules</firstterm></title>
        <para>For extensibility of <firstterm>XLIFF Modules</firstterm> please refer to the relevant
            Module Sections.</para></section>
        
    </section>
  
  <section id="ext-constraints">
    <title>Constraints</title>
    <itemizedlist>
      <listitem><para>When using identifiers, an extension <glossterm>must</glossterm> use either an attribute named <code>id</code> or the attribute
        <code>xml:id</code> to specify them.</para></listitem>
      <listitem><para>Extensions identifiers <glossterm>must</glossterm> be unique within their immediate <olink targetdoc="../elements/structural/file.xml" targetptr="file"><code>&lt;file></code></olink>, <olink targetdoc="../elements/structural/group.xml" targetptr="group"><code>&lt;group></code></olink> 
        or <olink targetdoc="../elements/structural/unit.xml" targetptr="unit"><code>&lt;unit></code></olink> 
        enclosing element.</para></listitem>
      <listitem><para>Identifier values used in extensions <glossterm>must</glossterm> be of type <code>xs:NMTOKEN</code> or compatible with <code>xs:NMTOKEN</code>
        (e.g. <code>xs:NAME</code> and <code>xs:ID</code> are compatible).</para></listitem>
    </itemizedlist>
    <para>These constraints are needed for the <olink targetdoc="../fragments/fragments.xml" targetptr="fragid">fragment identification mechanism</olink>.</para>
  </section>
  
    <section>
        <title>Processing Requirements</title>
        <itemizedlist>
            <listitem>
                <para>A user extension, whether implemented using <olink targetdoc="../elements/metadata/metadata.xml" targetptr="metadata"><code>&lt;mda:metadata></code></olink> or using a custom namespace,
                        <glossterm>must not</glossterm> provide the same functionality as an
                    existing XLIFF core or module feature, however it <glossterm>may</glossterm>
                    complement an extensible XLIFF core feature or module feature or provide a new
                    functionality at the provided extension points.</para>
            </listitem>
            
            <listitem>
                <para><firstterm>Mergers</firstterm> <glossterm>must not</glossterm> rely on custom namespace extensions, other than the ones possibly defined in <olink targetdoc="../elements/structural/skeleton.xml" targetptr="skeleton"><code>&lt;skeleton></code></olink>, to create the <firstterm>Translated</firstterm> version of
                    the original document. </para>
            </listitem>
            
            <listitem>
                <para><firstterm>Writers</firstterm> that do not support a given custom namespace based user extension
                        <glossterm>should</glossterm> preserve that extension without
                    <firstterm>Modification</firstterm>.</para>
            </listitem>
        </itemizedlist>
    </section>
</section>

  </section>

  <appendix id="mediaType" role="normative">
    <title>Media Type Registration Template for XLIFF Version 2.0 and higher Versions</title>
    <para>This Appendix is based on the Committee Specification 01 of the <ulink url="http://docs.oasis-open.org/xliff/xliff-media/v2.0/cs01/xliff-media-v2.0-cs01.html">Media Type Registration Template for XLIFF Version 2.0</ulink> published on 22 September
      2014, which is also the latest version of the Registration Template, as the TC decided to
      merge the template (with some necessary editorial updates) with this XLIFF Version 2.2
      specification. Additionally, the Security Considerations have been substantially expanded
      based on an IESG Expert feedback, as per this archived conversation <ulink url="https://lists.oasis-open.org/archives/xliff/201502/msg00004.html">https://lists.oasis-open.org/archives/xliff/201502/msg00004.html</ulink>. XLIFF 2.1
      was provisionally registered as <code>application/xliff+xml</code> in the <ulink url="https://www.iana.org/assignments/provisional-standard-media-types/provisional-standard-media-types.xhtml">IANA Provisional Standard Media Type Registry</ulink>.</para>
    <para>This Appendix content will be used to seek final media type registration for XLIFF Version
      2.1 and higher Versions (including this XLIFF Version 2.2). </para>
    
    <section id="mediaTypeTemplate">
    <title>Registration Template</title>

    <itemizedlist>
        <listitem id="Type_name">
            <para><emphasis role="emphasis">Type name:</emphasis> application</para>
        </listitem>
        <listitem id="Subtype_name">
            <para><emphasis role="emphasis">Subtype name:</emphasis> xliff+xml</para>
        </listitem>
        <listitem>
            <para><emphasis role="emphasis">Required parameters:</emphasis> N/A</para>
        </listitem>
        <listitem>
            <para><emphasis role="emphasis">Optional parameters:</emphasis> N/A</para>
        </listitem>
        <listitem id="Encoding_considerations">
            <para><emphasis role="emphasis">Encoding considerations:</emphasis></para>
            <para>Same as encoding considerations of application/xml as specified in <olink targetdoc="../xliff22.xml" targetptr="rfc7303">[RFC 7303]</olink></para>
        </listitem>
        <listitem id="Security_considerations">
            <para><emphasis role="emphasis">Security considerations:</emphasis></para>
            <para>Apart from all of the security considerations described in <olink targetdoc="../xliff22.xml" targetptr="rfc7303">[RFC 7303]</olink>, XLIFF Version
                2.1 and higher has the following Security considerations:</para>
            <para><emphasis>Extensibility:</emphasis> XLIFF permits extensions. Hence it is possible
                that application xliff+xml may describe content that has security implications
                beyond those described here. </para>
            <para><emphasis>Direct external reference mechanisms:</emphasis> An XLIFF document has a
                number of attributes of the type URI or IRI, all of which may be dereferenced and
                some of them should be dereferenced. Therefore, the security issues of <olink targetdoc="../xliff22.xml" targetptr="rfc3987">[RFC 3987]</olink> Section 8
                should be considered. In addition, the contents of resources identified by
                    <code>file:</code> URIs can in some cases be accessed, processed and returned as
                results.</para>
            <para>More details can be found in the <link linkend="Detailed_Security_Considerations">Detailed Security Considerations section</link> of this Appendix.</para>
        </listitem>
        <listitem id="Interoperability_considerations">
            <para><emphasis role="emphasis">Interoperability considerations:</emphasis></para>
            <para>Same as interoperability considerations described in <olink targetdoc="../xliff22.xml" targetptr="rfc7303">[RFC 7303]</olink></para>
            <para>Also, interoperability requirements are specified throughout the specification and
                summarized in its <olink targetdoc="../../conformance/conformance.xml" targetptr="Conformance">Conformance Section</olink>.</para>
        </listitem>
        <listitem id="Published_specification">
            <para><emphasis role="emphasis">Published specification:</emphasis></para>
            <para>XLIFF Version 2.1 (OASIS Standard) <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html">http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html</ulink>
                will be superseded by XLIFF Version 2.2 (OASIS Standard) <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html">http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html</ulink>
                that was last published on 16 August 2021 in the Specification Draft (wd) stage at <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-core-v2.2.html">https://docs.oasis-open.org/xliff/xliff-core/v2.2/xliff-core-v2.2.html</ulink> and is backwards
                compatible with XLIFF Version 2.1.</para>
        </listitem>
        <listitem id="Applications_that_use_this">
            <para><emphasis role="emphasis">Applications that use this media type:</emphasis></para>
            <para>XLIFF conformant applications, according to the <olink targetdoc="../../conformance/conformance.xml" targetptr="Conformance">Conformance Section</olink> of this specification</para>
        </listitem>
        <listitem id="Fragment_identifier_considerations">
            <para><emphasis role="emphasis">Fragment identifier considerations:</emphasis></para>
            <para>Generic XML processors won't be able to resolve XLIFF fragment identifiers, as the
                fragment identification syntax is specific for XLIFF and has been defined in its
                    <olink targetdoc="../../fragmnets/fragments.xml" targetptr="fragid">Fragment
                    Identification section</olink> as of csd03/csprd03 of XLIFF Version
                2.1.</para>
        </listitem>
        <listitem id="Intended_usage">
            <para><emphasis role="emphasis">Intended usage:</emphasis> COMMON</para>
        </listitem>
        <listitem id="Restrictions_on_usage">
            <para><emphasis role="emphasis">Restrictions on usage:</emphasis> N/A</para>
        </listitem>
        <listitem id="Author">
            <para><emphasis role="emphasis">Author:</emphasis></para>
            <para>OASIS XML Localisation Interchange File Format (XLIFF) TC Editors: Tom Comerford,
                        <code>&lt;<ulink url="mailto:tom@supratext.com">tom@supratext.com</ulink>></code>; David Filip, <code>&lt;<ulink url="mailto:david.filip@adaptcentre.ie">david.filip@adaptcentre.ie</ulink>></code>; Yves Savourel, <code>&lt;<ulink url="mailto:ysavourel@enlaso.com">ysavourel@enlaso.com</ulink>></code></para>
        </listitem>
        <listitem>
            <para><emphasis role="emphasis">Change controller:</emphasis></para>
            <para>OASIS XML Localisation Interchange File Format (XLIFF) TC <ulink url="https://www.oasis-open.org/committees/xliff/">https://www.oasis-open.org/committees/xliff/</ulink></para>
            <para>Bryan Schnabel, <code>&lt;<ulink url="mailto:bryan.s.schnabel@tektronix.com">bryan.s.schnabel@tektronix.com</ulink>></code>, Chair</para>
            <para>Tom Comerford, <code>&lt;<ulink url="mailto:tom@supratext.com">tom@supratext.com</ulink>></code>, Secretary</para>
            <para>David Filip, <code>&lt;<ulink url="mailto:david.filip@adaptcentre.ie">david.filip@adaptcentre.ie</ulink>></code>, Secretary</para>
        </listitem>
        <listitem id="Provisional_registration_q">
            <para><emphasis role="emphasis">Provisional registration? (standards tree
                    only):</emphasis> NO</para>
        </listitem>
        <listitem id="Additional_information">
            <para><emphasis role="emphasis">Additional information:</emphasis></para>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="emphasis">Deprecated alias names for this type:</emphasis>
                        N/A</para>
                </listitem>
                <listitem>
                    <para><emphasis role="emphasis">Magic number(s):</emphasis> N/A</para>
                </listitem>
                <listitem id="File_extensions">
                    <para><emphasis role="emphasis">File extension(s):</emphasis> xlf</para>
                </listitem>
                <listitem>
                    <para><emphasis role="emphasis">Macintosh file type code(s):</emphasis>
                        "TEXT"</para>
                </listitem>
            </itemizedlist>
        </listitem>
        <listitem>
            <para><emphasis role="emphasis">Person &amp; email address to contact for further
                    information:</emphasis></para>
            <para>OASIS Technical Committee administration <code>&lt;<ulink url="mailto:tc-admin@oasis-open.org">tc-admin@oasis-open.org</ulink>></code></para>
        </listitem>
    </itemizedlist>
    <section id="Detailed_Security_Considerations">
        <title>Detailed Security Considerations</title>

        <section>
            <title>Privacy, trust and integrity</title>
            <para>XLIFF is a format for localization and translation, privacy, trust and integrity
                requirements will widely depend on the type of content that is being exchanged
                translating end user manuals for a dishwasher will have lower privacy requirements
                than translating clinical tests results for a pharma company.</para>
            <para>The XLIFF format does not offer any internal mechanisms to provide privacy, convey
                trust or verify the integrity of XLIFF documents. If such features are needed varies
                from case to case. Implementations that will process documents in cases where one or
                more of these features are required need to implement that outside of the XLIFF
                format. Transport privacy may for example be provided by SSL/TLS. Storage privacy
                could be implemented by encrypting the XLIFF content using XML encryption or some
                other appropriate means. Likewise the trust and integrity checks could be
                implemented using XML signatures or by some other technology that is appropriate for
                the particular implementation.</para>
        </section>
        <section>
            <title>Core</title>
            <para><code>&lt;skeleton></code> via attribute <code>href</code></para>
            <para>There is no requirement that an implementation dereference and load the skeleton.
                But it must be assumed that some do. An implementation is free to provide any type
                of resource as the skeleton including executables.</para>
            <para><code>&lt;mrk></code> via attribute <code>ref</code> for Term Annotations and some
                custom annotations</para>
            <para>For term annotations there may be a risk by downloading or directing the user to
                access an external resource. For custom annotations the same applies but an
                implementation is not required to process the <code>ref</code> attribute on custom
                annotations but it must be expected that some will. Especially the term annotation
                one may be an issue as a reasonable implementation may just launch the URI expecting
                a web browser or viewer application to handle it.</para>

        </section>
        <section>
            <title>Resource Data Module</title>
            <para><code>&lt;res:source></code> via attribute <code>href</code></para>
            <para><code>&lt;res:target></code> via attribute <code>href</code></para>
            <para>Both of these may reference executable or otherwise unsafe external data. Either
                as a resource that need processing or to present additional information to the user
                from a resource of arbitrary type. Essentially the same considerations as for the
                term annotation in core applies here especially for reference material. The intent
                is to present arbitrary typed data to the user.</para>

        </section>
        <section>
            <title>ITS Module</title>
            <para>As the ITS Module brings a large number of ITS features natively to XLIFF,
                Security considerations of <code>application/its+xml</code>, as described in <olink targetdoc="../xliff22.xml" targetptr="ITS20">[ITS]</olink>
                <ulink url="https://www.w3.org/TR/its20/#its-mime-type">https://www.w3.org/TR/its20/#its-mime-type</ulink> should be taken into
                consideration, albeit largely overlapping with XLIFF general Security considerations
                described <link linkend="Security_considerations">above</link>. </para>
        </section>
        <section>
            <title>Other potentially security sensitive constructs</title>
            <section>
                <title>Extension by arbitrary XML on <code>&lt;file></code>, <code>&lt;group></code>
                    and <code>&lt;unit></code></title>
                <para>Allows embedding of arbitrary XML structures at these points.</para>
            </section>
            <section>
                <title>Extension by custom attributes on <code>&lt;xliff></code>,
                        <code>&lt;file></code>, <code>&lt;group></code>,
                        <code>&lt;unit></code>,<code>&lt;note></code>,<code>&lt;mrk></code> and
                        <code>&lt;sm></code></title>
                <para>Custom attribute extension is likely not as sensitive as embedding of
                    arbitrary XML structures and will not in itself pose any threat except
                    potentially for the implementers of the extension.</para>

            </section>
            <section>
                <title>Format Style Module</title>
                <para>Uses HTML element names as values of the attribute <code>fs</code></para>
                <para>Validating allowed element names may decrease risk, but due to the attribute
                        <code>subFs</code> cannot eliminate it. Attribute <code>subFs</code> allows
                    arbitrary additional attributes for injection into HTML elements defined in the
                        <code>fs</code> attributes. This could be used to inject active content such
                    as JavaScript into the preview HTML document or reference external resources.
                    Implementations need to take normal precautions when rendering, as if rendering
                    an arbitrary page on the web unless it can know for sure it can trust the
                    document. XLIFF itself does not provide a facility to communicate trust or
                    protect a document from modification. If such features are needed they must be
                    implemented external the XLIFF format.</para>
                <para>Actual consumable HTML is only produced by implementers of this modules via
                    XSLT or similar.</para>
            </section>


        </section>
    </section>

</section>

  </appendix>

  <appendix id="coreValidation" role="informative">
    <title>Machine Readable Validation Artifacts</title>
    <para>This appendix summarizes information on machine readable validation artifacts for XLIFF
      Version 2.2<orderedlist continuation="restarts" inheritnum="ignore">
        <listitem id="CoreSchema">
          <para><firstterm>XLIFF Core</firstterm>
            <link linkend="XMLSchema">[XML Schema]</link>,</para>
          <para><ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_core_2.0.xsd">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_core_2.0.xsd</ulink></para>

        </listitem>
        <listitem id="XLIFFCatalog">
          <para><link linkend="XMLCatalogs">[XML Catalog]</link> of <firstterm>XLIFF
              Defined</firstterm> XML Schemas,</para>
          <para><ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/catalog.xml">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/catalog.xml</ulink></para>
        </listitem>
        <listitem id="XLIFFNVDL">
          <para>Master <link linkend="NVDL">[NVDL]</link> file governing validation of all
              <firstterm>XLIFF Defined</firstterm> namespaces by XML Schemas, Schematron Schemas and
            other rules if and as required,</para>
          <para><ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_2_advanced_validation.nvdl">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_2_advanced_validation.nvdl</ulink></para>
        </listitem>
        <listitem id="CoreSchematron">
          <para><firstterm>XLIFF Core</firstterm>
            <link linkend="Schematron">[Schematron]</link> Schema, </para>
          <para><ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_core_2.0.sch">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_core_2.0.sch</ulink></para>
        </listitem>
        <listitem>
          <para>XML and Schematron Schemas of <firstterm>XLIFF Modules</firstterm> are referenced
            from those modules.</para>
        </listitem>
      </orderedlist>
    </para>
    <para>The basic grammar and structure of XLIFF 2.2 is defined using ten (10) XML Schemas
      and one (1) XML catalog. The module schemas are specifically referenced from their respective
      modules.</para>
    <para>Advanced static <firstterm>Constraints</firstterm> and dynamic <firstterm>Processing
        Requirements</firstterm> that could not be expressed using <link linkend="XMLSchema">[XML
        Schema]</link> 1.0 are expressed in nine (9) <link linkend="Schematron">Schematron</link>
      schemas.</para>
    <para>Relationships among all of the above mentioned machine readable validation artifacts
      provided as part of this multipart product is expressed using one (1) <link linkend="NVDL">NVDL</link> schema.</para>
    <warning>
      <para>Albeit the TC has made effort to cover the prose specification with standardized
        declarative validation artifacts to the maximum possible extent, there are some inherent
        limitations to the Schema languages employed to perform the validation. The informative
          <ulink url="http://tools.oasis-open.org/version-control/browse/wsvn/xliff/trunk/xliff-21/test-suite/#_trunk_xliff-21_test-suite_">Test Suite</ulink> provided through the XLIFF TC SVN does contain a number of invalid
        files that cannot be caught using only the normative validation artifacts that are
        distributed as part of this multipart Standard product. For instance <link linkend="bcp47">[BCP47]</link> compliance of <olink targetdoc="attributes/srcLang.xml" targetptr="srcLang"><code>srcLang</code></olink>, <olink targetdoc="attributes/trgLang.xml" targetptr="trgLang"><code>trgLang</code></olink>, or
          <olink targetdoc="attributes/xml_lang.xml" targetptr="xml_lang"><code>xml:lang</code></olink> cannot be fully validated by either W3C XML Schema or
        Schematron. Custom code is required to check this.</para>
    </warning>
    <warning>
      <para>NVDL is not capable of discerning Schemtaron Warnings from Schematron Errors. Therefore
        all Schematron Warnings will be reported as Errors when initiating the validation from the
        NVDL schema. Also most of the existing Schematron implementations are not capable of
        discerning Warnings from Errors, thus implementers are encouraged to re-use the provided
        Schematron schemas in custom made validation services that can make this distinction.
        Currently, the Warning/Error distinction is only important when evaluating adherence to
        Processing Requirements for <olink targetdoc="inline/inline.xml" targetptr="editinghints">Editing Hints</olink> in relation to segment <olink targetdoc="attributes/state.xml" targetptr="state"><code>state</code></olink>. It will be also beneficial for implementers
        who want to add project specific rules based on the <olink targetdoc="modules/validation/specification.xml" targetptr="validation_module">Validation Module</olink>.</para>
    </warning>

    


    <section id="schema_tree">
    <title>XML Schemas Tree</title>

<programlisting format="linespecific">
    
<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_2_advanced_validation.nvdl"><code>Master NVDL Schema</code></ulink>
   |      |
   |    <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_core_2.0.xsd"><code>Core XML Schema</code></ulink>|
   |      |
   |      +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/matches.xsd"><code>Candidates Module XML Schema</code></ulink>
   |      |
   |      +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/glossary.xsd"><code>Glossary Module XML Schema</code></ulink>
   |      |
   |      +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/fs.xsd"><code>Format Style Module XML Schema</code></ulink>
   |      |
   |      +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/metadata.xsd"><code>Metadata Module XML Schema</code></ulink>
   |      |
   |      +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/resource_data.xsd"><code>Resource Data Module XML Schema</code></ulink>
   
   |      |
   |      +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/size_restriction.xsd"><code>Size and Length Restriction Module XML Schema</code></ulink>
   |      |
   |      +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/validation.xsd"><code>Validation Module XML Schema</code></ulink>
   |      |
   |      +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/its.xsd"><code>ITS Module XML Schema (W3C namespace subset)</code></ulink>
   |      |
   |      +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/itsm.xsd"><code>ITS Module XML Schema (additional attributes)</code></ulink>
   |
   +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_core_2.0.sch"><code>Core constraints</code></ulink>
         |
         +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/matches.sch"><code>Candidates Module Constraints</code></ulink>
         |
         +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/glossary.sch"><code>Glossary Module Constraints</code></ulink>
         |
         +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/fs.sch"><code>Format Style Module Constraints</code></ulink>
         |
         +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/resource_data.sch"><code>Resource Data Module Constraints</code></ulink>
         |
         +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/size_restriction.sch"><code>Size and Length Restriction Module Constraints</code></ulink>
         
         |
         +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/metadata.sch"><code>Metadata Module Constraints</code></ulink>
         |
         +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/validation.sch"><code>Validation Module Constraints</code></ulink>
         |
         +---<ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/its.sch"><code>ITS Module Constraints</code></ulink>
 
</programlisting>

</section>

    
    <section>
      <title>Support Schemas</title>
      <para>Third party support schemas that are normatively referenced from this specification or
        from the machine readable artifacts that are a part of this multipart product are
        distributed along with the <firstterm>XLIFF-defined</firstterm> schemas in a subfolder named
          <code>informativeCopiesOf3rdPartySchemas</code> and further subdivided in folders
        according to the owner/maintainer of the schema.</para>
      <warning>
        <para>Schema copies in this sub-folder are provided solely for implementers convenience and
          are NOT a part of the OASIS multipart product. These schemas belong to their respective
          owners and their use is governed by their owners' respective IPR policies. The support
          schemas are organized in folders per owner/maintainer. It is the implementer's sole
          responsibility to ensure that their local copies of all schemas are the appropriate up to
          date versions.</para>
      </warning>

      <para>Currently the only included third party support schema is <ulink url="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</ulink> [<ulink url="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</ulink>] at
          <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd</ulink> in this
        distribution.</para>
    </section>

  </appendix>

  

  <appendix id="specChangeTracking" role="informative">
    <title>Specification Change Tracking</title>

    <section id="ChangeTrackWRT20">
<title>High Level Summary of Changes made in Comparison to XLIFF Version 2.1</title>
<para>This is to facilitate human tracking of changes between XLIFF Versions 2.2 and 2.1. </para>
   
   
   <orderedlist continuation="restarts" inheritnum="ignore">
      
      <listitem>
         <para>Two major features are being added in XLIFF Version 2.2:</para>
         <orderedlist continuation="restarts" inheritnum="ignore">
            <listitem>
               <para>Advanced Validation methods</para>
            </listitem>
            <listitem>
               <para>Native Support for ITS 2.0</para>
            </listitem>
         </orderedlist>
      </listitem>
      <listitem>
         <para>The Change Tracking Module was demoted to an extension to free hands of the TC and
            other implementers while working on a new version of the Change Tracking Module for
            XLIFF 2.2.</para>
      </listitem>
      <listitem>
         <para>A major bug fix was performed on the core xsd. The core xsd now enforces the
               <code>xs:language</code> data type on the <code>srcLang</code> and
               <code>trgLang</code> attributes. It was critical to make this fix, because -- as per
            OASIS policy -- validation artifacts would prevail over the prose provisions that are
            correct in both XLIFF 2.2 and XLIFF 2.1.</para>
      </listitem>
      <listitem>
         <para>Also an erroneously omitted Constraint of the <olink targetdoc="../attributes/xml_lang.xml" targetptr="xml_lang"><code>xml:lang</code></olink> attribute on the <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink>
            element has been added/restored in the normative text.</para>
      </listitem>
      <listitem>
         <para>Apart from the five (5) major changes mentioned above, numerous editorial bugfixes
            were made to secure greater clarity, either by fixing example errors or omissions, or by
            reorganizing normative content, so that the intent becomes clear and unequivocal at some
            troublesome places highlighted by XLIFF 2.1 implementers. </para>
      </listitem>
      <listitem>
         <para>Importantly, the TC decided to drop informative listings of the validation artifacts
            that had bloated the spec extent unnecessarily, were hard to keep in sync with the
            actual normative artifacts, while their actual usability proved rather limited --
            readers who were able to read schema languages would not actually read them as printed
            listings and would anyways refer to the actual validation artifacts that are now
            referenced more prominently.</para>
      </listitem>
      
      
   
      
      
      
   </orderedlist>
   <para>In spite of the above mentioned changes, fixes, clarifications, and additions, the
      practical workings of the <firstterm>XLIFF Core</firstterm> hasn't been affected and none of
      the changes (except the bugfixes under 3 and 4) have affected the core namespace
         <code>"urn:oasis:names:tc:xliff:document:2.0"</code> or the <firstterm>XLIFF
         Core</firstterm>
      <olink targetdoc="../xliff22.xml" targetptr="XMLSchema">[XML Schema]</olink>, <ulink url="https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_core_2.0.xsd">https://docs.oasis-open.org/xliff/xliff-core/v2.2/wd/schemas/xliff_core_2.0.xsd</ulink> that expresses its basic grammar
      and structure.</para>
</section>
    
    <section id="ReviewChangeTrack">
<title>Tracking of changes made in response to Public Reviews</title>
<para>This is to facilitate human tracking of changes in the specification made since the first
      Public Review publication on 26th October 2016. </para>
 
   <section id="cos01">
<title>Tracking of changes in response to the Public Review of the Candidate OASIS Standard
        01</title>
<para>This section tracks all changes made to this specification compared to the Candidate OASIS
        Standard 01 <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.1/cos01/xliff-core-v2.1-cos01.html">http://docs.oasis-open.org/xliff/xliff-core/v2.1/cos01/xliff-core-v2.1-cos01.html</ulink>.
        This Public Review took place from 20th October 2017 until 19th December 2017.</para>
<orderedlist continuation="restarts" inheritnum="ignore">

        
        <listitem>
            <para>An important typo in several occurrences of the W3C ITS namespace has been fixed
                in response to Comment/Issue <ulink url="https://issues.oasis-open.org/browse/XLIFF-73">https://issues.oasis-open.org/browse/XLIFF-73</ulink>. The typo did confuse
                implementers although the correct namespace had been used throughout the validation
                artifacts. </para>
        </listitem>
        <listitem>
            <para>A minor editorial improvement was made in response to Comment/Issue <ulink url="https://issues.oasis-open.org/browse/XLIFF-72">https://issues.oasis-open.org/browse/XLIFF-72</ulink>.
            </para>
        </listitem>
                
               



</orderedlist>

</section>
   <section id="csprd04">
<title>Tracking of changes in response to the 4th Public Review</title>
<para>This section tracks all changes made to this specification compared to the Committee
        Specification Draft 04 / Public Review Draft 04 <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.1/csprd04/xliff-core-v2.1-csprd04.html">http://docs.oasis-open.org/xliff/xliff-core/v2.1/csprd04/xliff-core-v2.1-csprd04.html</ulink>.
        This subsequent Public Review took place from 5th June 2017 until 20th June 2017.</para>
<orderedlist continuation="restarts" inheritnum="ignore">

        
        <listitem>
            <para>Xpath expressions have been fixed in ITS Rules in response to
                Comment/Issue <ulink url="https://issues.oasis-open.org/browse/XLIFF-58">https://issues.oasis-open.org/browse/XLIFF-58</ulink>.</para>
        </listitem>
        <listitem>
            <para>Minor editorial fixes and improvements were made in response to Comments/Issues <ulink url="https://issues.oasis-open.org/browse/XLIFF-57">https://issues.oasis-open.org/browse/XLIFF-57</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-62">https://issues.oasis-open.org/browse/XLIFF-62</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-63">https://issues.oasis-open.org/browse/XLIFF-63</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-64">https://issues.oasis-open.org/browse/XLIFF-64</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-65">https://issues.oasis-open.org/browse/XLIFF-65</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-66">https://issues.oasis-open.org/browse/XLIFF-66</ulink>, and <ulink url="https://issues.oasis-open.org/browse/XLIFF-70">https://issues.oasis-open.org/browse/XLIFF-70</ulink>.</para>
        </listitem>
        <listitem>
            <para>Trivial editorial fixes and improvements  were made in response to Comments/Issues <ulink url="https://issues.oasis-open.org/browse/XLIFF-59">https://issues.oasis-open.org/browse/XLIFF-59</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-60">https://issues.oasis-open.org/browse/XLIFF-60</ulink>, and <ulink url="https://issues.oasis-open.org/browse/XLIFF-61">https://issues.oasis-open.org/browse/XLIFF-61</ulink>.</para>
        </listitem>
                
               



</orderedlist>

</section>
   <section id="csprd03">
<title>Tracking of changes in response to the 3rd Public Review</title>
<para>This section tracks all changes made to this specification compared to the Committee
        Specification Draft 03 / Public Review Draft 03 <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.1/csprd03/xliff-core-v2.1-csprd03.html">http://docs.oasis-open.org/xliff/xliff-core/v2.1/csprd03/xliff-core-v2.1-csprd03.html</ulink>.
        This subsequent Public Review took place from 17th April 2017 until 1st May 2017.</para>
<orderedlist continuation="restarts" inheritnum="ignore">


        
        <listitem>
            <para>Major bug fix of the core Schematron Schema has been made in response to
                Comment/Issue <ulink url="https://issues.oasis-open.org/browse/XLIFF-48">https://issues.oasis-open.org/browse/XLIFF-48</ulink>. The core Schematron now
                enforces that non-reorderable sequences start with a code with
                    <code>canReorder</code> set to <code>firstNo</code> and also enforces the
                repetition of non-reorderable sequences in <code>&lt;target></code> elements. In
                connection with this issue, issues <ulink url="https://issues.oasis-open.org/browse/XLIFF-10">https://issues.oasis-open.org/browse/XLIFF-10</ulink> and <ulink url="https://issues.oasis-open.org/browse/XLIFF-11">https://issues.oasis-open.org/browse/XLIFF-11</ulink> were reopened and changes
                in core Schematron made to ensure that the rules for enforcing of editing hints
                compliance in <code>target</code> elements worked properly in concert with reporting
                of invalid <code>&lt;segment></code>
                <code>state</code>.</para>
        </listitem>
        <listitem>
            <para>Another major bug fix was due reopened <ulink url="https://issues.oasis-open.org/browse/XLIFF-38">https://issues.oasis-open.org/browse/XLIFF-38</ulink>, validation methods had
                to be adjusted for core and core reused in modules in the NVDL.</para>
        </listitem>
        <listitem>
            <para>An erroneously omitted Constraint of the <olink targetdoc="../attributes/xml_lang.xml" targetptr="xml_lang"><code>xml:lang</code></olink> attribute on the <olink targetdoc="../elements/structural/source.xml" targetptr="source"><code>&lt;source></code></olink>
                element has be added/restored in the normative text and check therefore introduced
                in the Core Schematron Schema in response to Issue/Comment <ulink url="https://issues.oasis-open.org/browse/XLIFF-55">https://issues.oasis-open.org/browse/XLIFF-55</ulink>.</para>
        </listitem>
        <listitem>
            <para><code>its:version</code> attribute was introduced in response to Issue/Comment <ulink url="https://issues.oasis-open.org/browse/XLIFF-54">https://issues.oasis-open.org/browse/XLIFF-54</ulink>.</para>
        </listitem>
        <listitem>
            <para>Due to reopening of <ulink url="https://issues.oasis-open.org/browse/XLIFF-38">https://issues.oasis-open.org/browse/XLIFF-8</ulink>, mapping of
                <code>locQualityRatingScore</code> was removed from <code>matchQuality</code>. This eased the implementation
                of both ITS MT Confidence end Localization Quality Rating considerably.</para>
        </listitem>
        <listitem>
            <para>Changes were made to validation of <code>annotatorsRef</code> attribute in
                response to Issue/Comment <ulink url="https://issues.oasis-open.org/browse/XLIFF-52">https://issues.oasis-open.org/browse/XLIFF-52</ulink>. Examples using
                    <code>annotatorsRef</code> had be reformatted not to suggest a wrong
                interpretation of the attribute.</para>
        </listitem>
        <listitem>
            <para>Editorial fixes were made in response to Comments/Issues: <ulink url="https://issues.oasis-open.org/browse/XLIFF-47">https://issues.oasis-open.org/browse/XLIFF-47</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-50">https://issues.oasis-open.org/browse/XLIFF-50</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-51">https://issues.oasis-open.org/browse/XLIFF-51</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-53">https://issues.oasis-open.org/browse/XLIFF-53</ulink> and <ulink url="https://issues.oasis-open.org/browse/XLIFF-56">https://issues.oasis-open.org/browse/XLIFF-56</ulink>.</para>
        </listitem>
                    
                
                
                
               



</orderedlist>

</section>
   <section id="csprd02">
<title>Tracking of changes in response to the 2nd Public Review</title>
<para>This section tracks major changes made to this specification compared to the Committee
        Specification Draft 02 / Public Review Draft 02 <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.1/csprd02/xliff-core-v2.1-csprd02.html">http://docs.oasis-open.org/xliff/xliff-core/v2.1/csprd02/xliff-core-v2.1-csprd02.html</ulink>.
        This subsequent Public Review took place from 10th February 2017 until 24th February
        2017.</para>
<orderedlist continuation="restarts" inheritnum="ignore">


        <listitem>
            <para>The Change Tracking Module has been demoted to an Extension and the update of the
                Change Tracking Module has been postponed for XLIFF 2.2 in response to the
                Comment/Issue <ulink url="https://issues.oasis-open.org/browse/XLIFF-32">https://issues.oasis-open.org/browse/XLIFF-32</ulink>. This radical move
                obsoleted the dependent Comments/Issues: <ulink url="https://issues.oasis-open.org/browse/XLIFF-22">https://issues.oasis-open.org/browse/XLIFF-21</ulink>
                <ulink url="https://issues.oasis-open.org/browse/XLIFF-22">https://issues.oasis-open.org/browse/XLIFF-22</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-22">https://issues.oasis-open.org/browse/XLIFF-30</ulink>,  and <ulink url="https://issues.oasis-open.org/browse/XLIFF-44">https://issues.oasis-open.org/browse/XLIFF-44</ulink>.</para>
        </listitem>
        <listitem>
            <para>Major bugfix of the core XML Schema has been made in response to Comment/Issue
                    <ulink url="https://issues.oasis-open.org/browse/XLIFF-46">https://issues.oasis-open.org/browse/XLIFF-46</ulink>. The core xsd now
                enforces the <code>xs:language</code> type on the <code>srcLang</code> and
                    <code>trgLang</code> attributes.</para>
        </listitem>
        <listitem>
            <para>Major fix to the NVDL Schema has been made in response to Comment/Issue <ulink url="https://issues.oasis-open.org/browse/XLIFF-38">https://issues.oasis-open.org/browse/XLIFF-38</ulink>.</para>
        </listitem>
        <listitem>
            <para>Erroneous namespace, data type, and/or rules provisions have been fixed in the ITS
                Module prose and validation artifacts in response to Comments/Issues: <ulink url="https://issues.oasis-open.org/browse/XLIFF-33">https://issues.oasis-open.org/browse/XLIFF-33</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-34">https://issues.oasis-open.org/browse/XLIFF-34</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-34">https://issues.oasis-open.org/browse/XLIFF-35</ulink> and <ulink url="https://issues.oasis-open.org/browse/XLIFF-45">https://issues.oasis-open.org/browse/XLIFF-45</ulink>.</para>
        </listitem>
        <listitem>
            <para>Material changes have been made to the Locale Filter data category in the ITS
                Module in response to Comment/Issue <ulink url="https://issues.oasis-open.org/browse/XLIFF-43">https://issues.oasis-open.org/browse/XLIFF-43</ulink>.</para>
        </listitem>
        <listitem>
            <para>Major editorial changes have been made in response to Comments/Issues: <ulink url="https://issues.oasis-open.org/browse/XLIFF-23">https://issues.oasis-open.org/browse/XLIFF-23</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-24">https://issues.oasis-open.org/browse/XLIFF-24</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-37">https://issues.oasis-open.org/browse/XLIFF-37</ulink>, and <ulink url="https://issues.oasis-open.org/browse/XLIFF-42">https://issues.oasis-open.org/browse/XLIFF-42</ulink>. </para>
        </listitem>
                <listitem>
                    <para>Minor editorial changes have been made in response to Comments/Issues:
                    <ulink url="https://issues.oasis-open.org/browse/XLIFF-26">https://issues.oasis-open.org/browse/XLIFF-26</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-28">https://issues.oasis-open.org/browse/XLIFF-28</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-31">https://issues.oasis-open.org/browse/XLIFF-31</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-36">https://issues.oasis-open.org/browse/XLIFF-36</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-39">https://issues.oasis-open.org/browse/XLIFF-39</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-40">https://issues.oasis-open.org/browse/XLIFF-40</ulink>, and <ulink url="https://issues.oasis-open.org/browse/XLIFF-41">https://issues.oasis-open.org/browse/XLIFF-41</ulink>. </para>
                </listitem>
    <listitem>
        <para>Trivial editorial changes have been made in response to Comments/Issues: <ulink url="https://issues.oasis-open.org/browse/XLIFF-25">https://issues.oasis-open.org/browse/XLIFF-25</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-27">https://issues.oasis-open.org/browse/XLIFF-27</ulink>, and <ulink url="https://issues.oasis-open.org/browse/XLIFF-29">https://issues.oasis-open.org/browse/XLIFF-29</ulink>. </para>
    </listitem>
    
                
                
                
                
               



</orderedlist>

</section>
   <section id="csprd01">
<title>Tracking of changes in response to the 1st Public Review</title>
<para>This section tracks major changes made to this specification compared to the Committee
        Specification Draft 01 / Public Review Draft 01 <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.1/csprd01/xliff-core-v2.1-csprd01.html">http://docs.oasis-open.org/xliff/xliff-core/v2.1/csprd01/xliff-core-v2.1-csprd01.html</ulink>.
        The initial Public Review took place from 26th October 2016 until 25th November 2016.</para>
<orderedlist continuation="restarts" inheritnum="ignore">

<listitem>
    <para>Major changes were made in the ITS Module and validation artifacts in response to
        Comment/Issues <ulink url="https://issues.oasis-open.org/browse/XLIFF-5">https://issues.oasis-open.org/browse/XLIFF-5</ulink> and most importantly <ulink url="https://issues.oasis-open.org/browse/XLIFF-9">https://issues.oasis-open.org/browse/XLIFF-9</ulink> and its child issues:
                    <ulink url="https://issues.oasis-open.org/browse/XLIFF-6">https://issues.oasis-open.org/browse/XLIFF-6</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-18">https://issues.oasis-open.org/browse/XLIFF-18</ulink>, and <ulink url="https://issues.oasis-open.org/browse/XLIFF-19">https://issues.oasis-open.org/browse/XLIFF-19</ulink>. </para>
</listitem>
        <listitem>
            <para>Major changes were made in the Change Tracking Module and validation artifacts in
                response to Comment/Issue <ulink url="https://issues.oasis-open.org/browse/XLIFF-4">https://issues.oasis-open.org/browse/XLIFF-4</ulink></para>
        </listitem>
        <listitem>
            <para>Clarifications to Core with Advanced Validation impact, non-of which were
                normative changes were provided in response to Comments/Issues: 
                <ulink url="https://issues.oasis-open.org/browse/XLIFF-10">https://issues.oasis-open.org/browse/XLIFF-10</ulink>,
                <ulink url="https://issues.oasis-open.org/browse/XLIFF-11">https://issues.oasis-open.org/browse/XLIFF-11</ulink>,
                <ulink url="https://issues.oasis-open.org/browse/XLIFF-12">https://issues.oasis-open.org/browse/XLIFF-12</ulink>,
                <ulink url="https://issues.oasis-open.org/browse/XLIFF-13">https://issues.oasis-open.org/browse/XLIFF-13</ulink>,
                <ulink url="https://issues.oasis-open.org/browse/XLIFF-14">https://issues.oasis-open.org/browse/XLIFF-14</ulink>
                
                
            </para>
        </listitem>
        <listitem>
            <para>Material clarification with Advanced Validation Impact was provided for the
                Translation Candidate Module in response to Issue <ulink url="https://issues.oasis-open.org/browse/XLIFF-20">https://issues.oasis-open.org/browse/XLIFF-20</ulink>.</para>
        </listitem>
        <listitem>
            <para>Editorial changes have been made in response to Comments/Issues: <ulink url="https://issues.oasis-open.org/browse/XLIFF-1">https://issues.oasis-open.org/browse/XLIFF-1</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-2">https://issues.oasis-open.org/browse/XLIFF-2</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-3">https://issues.oasis-open.org/browse/XLIFF-3</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-7">https://issues.oasis-open.org/browse/XLIFF-7</ulink>, <ulink url="https://issues.oasis-open.org/browse/XLIFF-15">https://issues.oasis-open.org/browse/XLIFF-15</ulink>, and <ulink url="https://issues.oasis-open.org/browse/XLIFF-17">https://issues.oasis-open.org/browse/XLIFF-17</ulink>. </para>
        </listitem>



</orderedlist>

</section>
</section>
  </appendix>

  <appendix id="acknowledgements" role="informative">
    <title>Acknowledgements</title>
    <para>The following individuals have participated in the creation of this specification and are
      gratefully acknowledged:</para>

    <itemizedlist spacing="compact">

      <listitem>
        <para>Comerford, Tom - Individual </para>
      </listitem>
      <listitem>
        <para>Estreen, Fredrik - Lionbridge </para>
      </listitem>
      <listitem>
        <para>Filip, David - TCD, ADAPT Centre (formerly Localisation Research Centre)</para>
      </listitem>
      <listitem>
        <para>King, Ryan - Microsoft </para>
      </listitem>
      <listitem>
        <para>Loomis, Steven - IBM </para>
      </listitem>
      <listitem>
        <para>Morado Vázquez, Lucía - University of Geneva </para>
      </listitem>
      <listitem>
        <para>Ritchie, Phil - Vistatec </para>
      </listitem>
      <listitem>
        <para>Soroush Saadatfar, Localisation Research Centre</para>
      </listitem>
      <listitem>
        <para>Felix Sasaki - Individual</para>
      </listitem>
      <listitem>
        <para>Savourel, Yves - ENLASO Corporation </para>
      </listitem>
      <listitem>
        <para>Schnabel, Bryan - Individual </para>
      </listitem>
      <listitem>
        <para>Tingley, Chase - Spartan Software Inc.</para>
      </listitem>


    </itemizedlist>

  </appendix>


</article>